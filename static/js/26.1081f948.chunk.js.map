{"version":3,"sources":["components/forms/Field/index.tsx","components/forms/TextField/index.tsx","components/forms/GnoForm/index.tsx","logic/hooks/useEstimateTransactionGas.tsx","routes/safe/components/Balances/utils/setTokenImgToPlaceholder.ts","components/layout/Bold/index.tsx","routes/safe/components/Balances/assets/token_placeholder.svg","routes/safe/components/Transactions/helpers/TxParametersDetail/index.tsx","routes/safe/components/Transactions/helpers/EditTxParametersForm/style.ts","routes/safe/components/Transactions/helpers/EditTxParametersForm/index.tsx","routes/safe/components/Transactions/helpers/EditableTxParameters.tsx","components/TransactionFailText/index.tsx","components/TransactionsFees/index.tsx","assets/icons/qrcode.svg","logic/hooks/useEstimationStatus.tsx","components/ScanQRModal/style.ts","components/ScanQRModal/index.tsx","components/ScanQRModal/ScanQRWrapper/index.tsx","components/forms/SelectField/index.tsx","routes/safe/components/Balances/SendModal/screens/AddressBookInput/style.ts","routes/safe/components/Balances/SendModal/screens/AddressBookInput/index.tsx","components/layout/Heading/index.tsx","components/forms/AddressInput/index.tsx","components/Table/TableHead.tsx","routes/safe/components/Settings/SpendingLimit/style.ts","components/Table/sorting.ts","components/Table/index.tsx","routes/safe/components/Settings/SpendingLimit/FormFields/ResetTime.tsx","assets/icons/info_red.svg","routes/safe/components/Transactions/helpers/utils.ts","components/layout/Heading/index.module.scss","routes/safe/components/Settings/SpendingLimit/FormFields/Amount.tsx","routes/safe/components/Settings/SpendingLimit/InfoDisplay/DataDisplay.tsx","routes/safe/components/Settings/SpendingLimit/InfoDisplay/AddressInfo.tsx","routes/safe/components/Settings/SpendingLimit/InfoDisplay/ResetTimeInfo.tsx","routes/safe/components/Settings/SpendingLimit/InfoDisplay/TokenInfo.tsx","routes/safe/container/hooks/useTransactionParameters.ts","logic/safe/hooks/useTokenInfo.tsx","routes/safe/components/Balances/SendModal/screens/SendFunds/TokenSelectField/style.ts","routes/safe/components/Balances/SendModal/screens/SendFunds/TokenSelectField/index.tsx","routes/safe/components/Settings/Advanced/dataFetcher.ts","routes/safe/components/Settings/Advanced/style.ts","routes/safe/components/Settings/Advanced/RemoveModuleModal.tsx","routes/safe/components/Settings/Advanced/ModulesTable.tsx","routes/safe/components/Settings/Advanced/index.tsx","routes/safe/components/Settings/SpendingLimit/RemoveLimitModal.tsx","routes/safe/components/Settings/SpendingLimit/LimitsTable/dataFetcher.ts","logic/hooks/useWindowDimensions.tsx","logic/contracts/api/masterCopies.ts","routes/safe/components/Settings/SpendingLimit/LimitsTable/SpentVsAmount.tsx","routes/safe/components/Settings/SpendingLimit/LimitsTable/index.tsx","routes/safe/components/Settings/SpendingLimit/FormFields/Beneficiary.tsx","routes/safe/components/Settings/SpendingLimit/FormFields/Token.tsx","routes/safe/components/Settings/SpendingLimit/NewLimitModal/Create.tsx","routes/safe/components/Settings/SpendingLimit/NewLimitModal/Review.tsx","routes/safe/components/Settings/SpendingLimit/NewLimitModal/index.tsx","routes/safe/components/Settings/SpendingLimit/assets/asset-amount.svg","routes/safe/components/Settings/SpendingLimit/assets/beneficiary.svg","routes/safe/components/Settings/SpendingLimit/assets/time.svg","routes/safe/components/Settings/SpendingLimit/NewLimitSteps.tsx","routes/safe/components/Settings/SpendingLimit/index.tsx","routes/safe/components/Settings/assets/icons/bin.svg","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/OwnerForm/style.ts","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/OwnerForm/index.tsx","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/Review/style.ts","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/Review/index.tsx","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/ThresholdForm/style.ts","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/ThresholdForm/index.tsx","routes/safe/components/Settings/ManageOwners/AddOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/EditOwnerModal/style.ts","routes/safe/components/Settings/ManageOwners/EditOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/CheckOwner/style.ts","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/CheckOwner/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/Review/style.ts","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/Review/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/ThresholdForm/style.ts","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/ThresholdForm/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/OwnerForm/style.ts","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/OwnerForm/index.tsx","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/Review/style.ts","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/Review/index.tsx","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/assets/icons/rename-owner.svg","routes/safe/components/Settings/ManageOwners/assets/icons/replace-owner.svg","routes/safe/components/Settings/ManageOwners/dataFetcher.ts","routes/safe/components/Settings/ManageOwners/style.ts","routes/safe/components/Settings/ManageOwners/index.tsx","routes/safe/components/Settings/RemoveSafeModal/style.ts","logic/safe/store/actions/removeLocalSafe.ts","routes/safe/components/Settings/RemoveSafeModal/index.tsx","routes/safe/components/Settings/SafeDetails/style.ts","routes/safe/components/Settings/UpdateSafeModal/style.ts","routes/safe/components/Settings/UpdateSafeModal/index.tsx","routes/safe/components/Settings/SafeDetails/index.tsx","routes/safe/components/Settings/ThresholdSettings/ChangeThreshold/style.ts","routes/safe/components/Settings/ThresholdSettings/ChangeThreshold/index.tsx","routes/safe/components/Settings/ThresholdSettings/style.ts","routes/safe/components/Settings/ThresholdSettings/index.tsx","routes/safe/components/Settings/style.ts","components/layout/Span/index.tsx","routes/safe/components/Settings/index.tsx"],"names":["GnoField","props","overflowStyle","overflow","width","useStyles","makeStyles","createStyles","root","paddingTop","lg","paddingBottom","lineHeight","TextField","input","name","onChange","value","restInput","inputAdornment","meta","multiline","rows","testId","text","rest","classes","helperText","undefined","showError","touched","pristine","valid","hasError","error","modifiedSinceLastSubmit","submitError","errorMessage","isInactiveAndPristineOrUntouched","active","isInvalidAndUntouched","disableUnderline","inputRoot","statusClasses","inputProps","autoComplete","inputRootProps","className","InputProps","style","stylesBasedOn","padding","flexDirection","flex","GnoForm","children","decorators","formMutators","initialValues","onSubmit","subscription","validation","mutators","render","handleSubmit","data-testid","submitting","validating","form","validate","EstimationStatus","checkIfTxIsExecution","threshold","preApprovingOwner","txConfirmations","txType","sameString","checkIfTxIsApproveAndExecution","checkIfTxIsCreation","useEstimateTransactionGas","txRecipient","txData","txAmount","operation","safeTxGas","manualGasPrice","manualGasLimit","useState","txEstimationExecutionStatus","LOADING","gasEstimation","gasCost","gasCostFormatted","gasPrice","gasPriceFormatted","gasLimit","isExecution","isCreation","isOffChainSignature","setGasEstimation","nativeCoin","getNetworkInfo","safeAddress","useSelector","safeParamAddressFromStateSelector","safeThresholdSelector","safeVersion","safeCurrentVersionSelector","providerSelector","from","account","smartContractWallet","providerName","useEffect","a","length","size","Number","approvalAndExecution","checkIfOffChainSignatureIsPossible","safeTxGasEstimation","ethGasLimitEstimation","transactionCallSuccess","estimateSafeTxGas","CALL","estimateTransactionGasLimit","web3","utils","toWei","calculateGasPrice","fromWei","estimatedGasCosts","parseInt","fromTokenUnit","decimals","formatAmount","toString","checkTransactionExecution","gasToken","ZERO_ADDRESS","refundReceiver","SUCCESS","FAILURE","console","warn","message","estimateGas","setImageToPlaceholder","currentTarget","onerror","src","TokenPlaceholder","Bold","this","React","TxParameterWrapper","styled","div","AccordionDetailsWrapper","StyledText","Text","StyledButtonLink","ButtonLink","TxParametersDetail","onEdit","txParameters","compact","parametersStatus","isTransactionCreation","isTransactionExecution","defaultParameterStatus","color","areSafeParamsEnabled","safeNonce","areEthereumParamsVisible","ethereumTxParametersTitle","ethNonce","ethGasLimit","ethGasPrice","textSize","onClick","styles","heading","md","justifyContent","boxSizing","height","annotation","letterSpacing","secondaryText","marginRight","marginLeft","headingText","fontSize","closeIcon","container","amount","sm","address","buttonRow","alignItems","gap","StyledDivider","Divider","StyledDividerFooter","SafeOptions","EthereumOptions","StyledLink","Link","StyledTextMt","formValidation","values","minValue","EditTxParametersForm","onClose","onCloseFormHandler","Row","align","grow","withoutMargin","IconButton","disableRipple","Block","strong","Field","defaultValue","placeholder","type","min","component","disabled","href","target","Modal","Footer","Buttons","cancelButtonProps","confirmButtonProps","EditableTxParameters","closeEditModalCallback","isEditMode","toggleEditMode","useManualValues","setUseManualValues","useTransactionParameters","parameterStatus","initialEthGasLimit","initialEthGasPrice","initialSafeNonce","initialSafeTxGas","setEthGasPrice","setEthGasLimit","setSafeNonce","setSafeTxGas","setEthNonce","toggleStatus","prev","executionWarningRow","display","warningIcon","TransactionFailText","Paragraph","Img","alt","InfoIcon","TransactionFees","transactionAction","as","useEstimationStatus","txEstimationStatus","ButtonStatus","DISABLED","buttonStatus","setButtonStatus","mounted","READY","maxHeight","loaderContainer","close","detailsContainer","backgroundColor","background","button","ScanQRModal","isOpen","onScan","fileUploadModalOpen","setFileUploadModalOpen","setError","cameraBlocked","setCameraBlocked","scannerRef","openImageDialog","current","onFileScannedResolve","successData","description","handleClose","open","title","noMargin","Hairline","Col","layout","middle","margin","legacyMode","onError","err","data","ref","facingMode","Button","minWidth","variant","qrCodeBtn","cursor","ScanQRWrapper","handleScan","qrModalOpen","setQrModalOpen","closeQrModal","role","QRIcon","SelectInput","disableError","formControlProps","label","renderValue","dirtySinceLastSubmit","htmlFor","useTextFieldLabelStyle","borderRadius","useTextFieldInputStyle","chainId","getNetworkId","BaseAddressBookInput","addressBookEntries","fieldMutator","setIsValidAddress","setSelectedEntry","setValidationText","validationText","updateAddressInfo","addressEntry","validateAddress","addressErrorMessage","mustBeEthereumAddress","filteredEntries","filterAddressEntries","inputValue","onInputChange","_","reason","normalizedValue","trimSpaces","isFeatureEnabled","FEATURES","DOMAIN_LOOKUP","isValidEnsName","isValidCryptoDomainName","getAddressFromDomain","logError","Errors","_101","validatedAddress","labelStyles","inputStyles","Autocomplete","openOnFocus","filterOptions","freeSolo","options","id","renderInput","params","autoFocus","fullWidth","InputLabelProps","shrink","required","getOptionLabel","renderOption","hash","showAvatar","flexGrow","AddressBookInput","addressBookSelector","errorMsg","ContractsAddressBookInput","setFilteredEntries","filterContractAddressBookEntries","filteredADBK","filterContractAddresses","onSetSelectedEntry","selectedEntry","mustBeEthereumContractAddress","contractAddressErrorMessage","cx","classNames","bind","Heading","tag","truncate","capitalize","AddressInput","validators","composeValidators","resolverAddr","formattedAddress","checksumAddress","cellWidth","maxWidth","GnoTableHead","changeSort","property","orderAttr","onSort","columns","order","orderBy","map","column","key","disablePadding","sortDirection","static","direction","hide","visibility","actions","noBorderBottom","borderBottom","paddingLeft","ownersText","fontColor","actionButton","fontWeight","boldFont","position","left","bottom","borderTop","border","modifyBtn","xl","smallFontSize","removeModuleIcon","modalHeading","modalContainer","minHeight","modalManage","modalClose","modalButtonRow","modalButtonRemove","modalName","textOverflow","modalUserName","whiteSpace","modalOwner","modalUser","modalDescription","modalOpen","amountInput","gasCostsContainer","desc","b","orderProp","format","borderTopRightRadius","borderTopLeftRadius","boxShadow","selectRoot","xxl","white","paginationRoot","marginBottom","borderBottomRightRadius","borderBottomLeftRadius","loader","backProps","nextProps","GnoTable","newOrderBy","state","defaultOrder","newOrder","setState","fixed","getEmptyStyle","handleChangePage","e","page","handleChangeRowsPerPage","rowsPerPage","defaultOrderBy","find","defaultFixed","defaultRowsPerPage","disableLoadingOnEmptyTable","disablePagination","noBorder","orderByParam","orderParam","displayRows","fixedParam","paginationClasses","columnSort","sortedData","dataArray","cmp","fixedElems","filter","elem","List","stabilizedThis","el","index","sortedElems","sort","concat","stableSort","getSorting","formatTypeSort","slice","isEmpty","Table","aria-labelledby","TableHead","TableBody","TablePagination","backIconButtonProps","count","nextIconButtonProps","onChangePage","onChangeRowsPerPage","rowsPerPageOptions","defaultProps","withStyles","SpendingLimitRadioButtons","RadioButtons","theme","colors","primary","StyledSwitch","icon","hexToRgb","primaryLight","SafeRadioButtons","initialValue","groupName","onRadioChange","Switch","control","checked","ResetTimeLabel","ResetTimeToggle","ResetTimeOptions","RESET_TIME_OPTIONS","RINKEBY_RESET_TIME_OPTIONS","getResetTimeOptions","getNetworkName","toLowerCase","ResetTime","withResetTime","useField","resetTimeOptions","switchExplanation","module","exports","AmountInput","SRCTextField","Amount","tokenAddress","visited","selectedTokenRecord","extendedSafeTokensSelector","token","mustBeFloat","endAdornment","symbol","DataDisplay","AddressInfo","getNameFromAddressBookSelector","explorerUrl","getExplorerInfo","ADDRESS_BOOK_DEFAULT_NAME","showCopyBtn","ResetTimeInfo","iconSize","iconType","StyledImage","img","StyledImageName","TokenInfo","logoUri","isCancelTransaction","connectedWalletAddress","userAccountSelector","safeSelector","ethGasPriceInGWei","setEthGasPriceInGWei","getUserNonce","res","getNonce","safeInstance","getGnosisSafeInstanceAt","getLastTx","lastTx","getNewTxNonce","nonce","getSafeNonce","useTokenInfo","tokens","safeKnownCoins","sameAddress","useSelectedTokenStyles","tokenData","tokenImage","useSelectStyles","selectMenu","paddingRight","SelectedToken","MenuItem","ListItemIcon","ListItemText","secondary","balance","tokenBalance","TokenSelectField","isValid","SelectField","displayEmpty","MODULES_TABLE_ADDRESS_ID","accordionContainer","RemoveModuleModal","selectedModulePair","setTxData","dispatch","useDispatch","manualSafeTxGas","setManualSafeTxGas","setManualGasPrice","setManualGasLimit","moduleAddress","getDisableModuleTxData","removeSelectedModule","createTransaction","to","valueInWei","txNonce","ethParameters","notifiedTransaction","TX_NOTIFICATION_TYPES","SETTINGS_CHANGE_TX","confirmButtonText","paperClassName","oldGasPrice","newGasPrice","oldSafeTxGas","newSafeTxGas","weight","xs","cn","withoutBorder","status","TableActionButton","ModulesTable","moduleData","addressColumn","custom","actionsColumn","generateColumns","autoColumns","granted","grantedSelector","viewRemoveModuleModal","setViewRemoveModuleModal","setSelectedModulePair","TableContainer","row","TableRow","tabIndex","columnId","rowElement","Fragment","TableCell","justify","InfoText","NoModuleLegend","Advanced","modulesList","safeNonceSelector","modules","safeModulesSelector","trackEvent","useAnalytics","category","SAFE_NAVIGATION_EVENT","action","rel","RemoveLimitModal","spendingLimit","tokenInfo","spent","beneficiary","getDeleteAllowanceTxData","SPENDING_LIMIT_MODULE_ADDRESS","resetTimeLabel","resetTime","resetTimeMin","Header","Title","Body","REMOVE_SPENDING_LIMIT_TX","removeSelectedSpendingLimit","SPENDING_LIMIT_TABLE_BENEFICIARY_ID","SPENDING_LIMIT_TABLE_SPENT_ID","SPENDING_LIMIT_TABLE_RESET_TIME_ID","getWindowDimensions","window","innerWidth","innerHeight","MasterCopyDeployer","SpentVsAmount","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","showIcon","useMemo","spentInfo","formattedSpent","useFormattedAmounts","LimitsTable","beneficiaryColumn","spentColumn","resetColumn","selectedRow","setSelectedRow","relativeTime","BeneficiaryInput","BeneficiaryScan","Beneficiary","useFormState","useForm","setPristine","setBeneficiary","addressBook","aria-pressed","onKeyDown","scannedAddress","startsWith","replace","scannedName","getNameFromAddressBook","filterOnlyValidName","TokenInput","Token","FormContainer","args","changeValue","canReview","invalid","dirtyFieldsSinceLastSubmit","Create","onCancel","onReview","calculateSpendingLimitsTxData","spendingLimits","existentSpendingLimit","txToken","transactions","push","enableSpendingLimitModuleMultiSendTx","some","delegate","addSpendingLimitBeneficiaryMultiSendTx","getResetSpendingLimitTx","spendingLimitTxData","startTime","currentMinutes","spendingLimitArgs","spendingLimitInWei","toTokenUnit","resetBaseMin","setSpendingLimitTx","encodedTxForMultisend","setSpendingLimitMultiSendTx","spendingLimitMultiSendTx","ReviewSpendingLimits","onBack","safeSpendingLimitsSelector","currentDelegate","useExistentSpendingLimit","estimateGasArgs","setEstimateGasArgs","previousResetTime","center","makeToken","step","CREATE","advancedOptionsTxParameters","REVIEW","newLimitModalReducer","newState","NewLimitModal","initialStep","useReducer","create","useCallback","review","useNewLimitModal","handleReview","StepWrapper","Step","StepsLine","NewLimitSteps","AssetAmount","Time","SpendingLimitSettings","allowances","spendingLimitData","lastResetMin","showNewSpendingLimitModal","setShowNewSpendingLimitModal","end","manage","formContainer","ADD_OWNER_NAME_INPUT_TEST_ID","ADD_OWNER_ADDRESS_INPUT_TEST_ID","ADD_OWNER_NEXT_BTN_TEST_ID","setOwnerAddress","setOwnerName","OwnerForm","addressBookMap","addressBookMapSelector","owners","safeOwnersSelector","ownerDoesntExist","uniqueAddress","ownerAddressIsNotSafeAddress","addressIsNotCurrentSafe","ownerName","ownerAddress","validAddressBookName","web3ReadOnly","isAddress","info","textAlign","details","borderRight","ownersTitle","owner","selectedOwner","ReviewAddOwner","onClickBack","setData","safeName","useSafeName","safeOwnersWithAddressBookDataSelector","isCurrent","methods","addOwnerWithThreshold","encodeABI","calculateAddOwnerData","inputRow","errorText","ThresholdForm","numOptions","Array","x","mustBeInteger","maxValue","sendAddOwner","gnosisSafe","addressBookAddOrUpdate","makeAddressBookEntry","AddOwnerModal","activeScreen","setActiveScreen","setValues","onAddOwner","newValues","stateValues","RENAME_OWNER_INPUT_TEST_ID","SAVE_OWNER_CHANGES_BTN_TEST_ID","EditOwnerModal","enqueueSnackbar","NOTIFICATIONS","OWNER_NAME_CHANGE_EXECUTED_MSG","CheckOwner","ReviewRemoveOwnerModal","getOwners","call","safeOwners","findIndex","prevAddress","SENTINEL_ADDRESS","removeOwner","calculateRemoveOwnerData","safeOwner","ownersCount","defaultThreshold","sendRemoveOwner","ownerAddressToRemove","ownerNameToRemove","RemoveOwnerModal","cpValues","REPLACE_OWNER_NAME_INPUT_TEST_ID","REPLACE_OWNER_ADDRESS_INPUT_TEST_ID","REPLACE_OWNER_NEXT_BTN_TEST_ID","selectedOwnerRemoved","selectedOwnerAdded","ReviewReplaceOwnerModal","newOwner","swapOwner","calculateReplaceOwnerData","sendReplaceOwner","ReplaceOwnerModal","setNewOwner","onReplaceOwner","isValidAddress","checksumAddr","OWNERS_TABLE_NAME_ID","OWNERS_TABLE_ADDRESS_ID","editOwnerIcon","replaceOwnerIcon","controlsRow","removeOwnerIcon","ManageOwners","setSelectedOwner","showAddOwner","showRemoveOwner","showReplaceOwner","showEditOwner","modalsStatus","setModalStatus","onShow","prevState","onHide","Boolean","nameColumn","c","ownerData","getOwnerData","RenameOwnerIcon","ReplaceOwnerIcon","RemoveOwnerIcon","removeLocalSafe","loadStoredSafes","storedSafes","removeSafe","RemoveSafeModal","safeAddressBookEntry","defaultSafe","defaultSafeSelector","onRemoveSafeHandler","saveDefaultSafe","relativePath","location","split","WELCOME_ADDRESS","saveBtn","modalContent","UpdateSafeModal","EMPTY_DATA","multiSendCallData","setMultiSendCallData","getUpgradeSafeTransactionHash","encodeMultiSendCallData","calculateUpgradeSafeModal","MULTI_SEND_ADDRESS","DELEGATE_CALL","extractMasterCopyInfo","mc","isCircles","version","includes","CIRCLES","dashIndex","indexOf","substring","deployer","GNOSIS","deployerRepoUrl","fetchMasterCopies","memoize","url","getTxServiceUrl","axios","get","StyledIcon","Icon","SafeDetails","isUserOwner","latestMasterContractVersion","latestMasterContractVersionSelector","safeNeedsUpdate","safeNeedsUpdateSelector","safeCurrentVersion","isModalOpen","setModalOpen","safeInfo","setSafeInfo","toggleModal","prevOpen","handleUpdateSafe","masterCopies","getMasterCopyAddressFromProxyAddress","masterCopyAddress","masterCopy","getMasterCopyInfo","updateSafe","loadedViaUrl","notification","getNotificationsFromTxType","SAFE_NAME_CHANGE_TX","enhanceSnackbarForAction","afterExecution","noMoreConfirmationsNeeded","ChangeThresholdModal","editedThreshold","setEditedThreshold","disabledSubmitForm","setDisabledSubmitForm","changeThreshold","calculateChangeThresholdData","handleThreshold","differentFrom","ThresholdSettings","screenSm","settings","menuWrapper","menu","menuOption","flexShrink","largeFontSize","fill","bolderFont","contents","hairline","links","textDecoration","removeSafeBtn","marginTop","removeSafeIcon","counter","Span","OWNERS_SETTINGS_TAB_TEST_ID","INITIAL_STATE","showRemoveSafe","menuOptionIndex","Settings","needsUpdate","safe","handleChange","RemoveSafeIcon","Badge","badgeContent","invisible"],"mappings":"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","file":"static/js/26.1081f948.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Field } from 'react-final-form'\r\n\r\n// $FlowFixMe\r\nconst GnoField = ({ ...props }: any) => <Field {...props} />\r\n\r\nexport default GnoField\r\n","import MuiTextField from '@material-ui/core/TextField'\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\r\nimport React from 'react'\r\n\r\nimport { lg } from 'src/theme/variables'\r\n\r\n// Neded for solving a fix in Windows browsers\r\nconst overflowStyle = {\r\n  overflow: 'hidden',\r\n  width: '100%',\r\n}\r\n\r\nconst styles = () =>\r\n  createStyles({\r\n    root: {\r\n      paddingTop: lg,\r\n      paddingBottom: '12px',\r\n      lineHeight: 0,\r\n    },\r\n  })\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\ntype Props = {\r\n  input: {\r\n    name: string\r\n    onChange?: () => void\r\n    value: string\r\n    placeholder: string\r\n    type: string\r\n  }\r\n  meta: {\r\n    touched?: boolean\r\n    pristine?: boolean\r\n    valid?: boolean\r\n    error?: string\r\n    modifiedSinceLastSubmit?: boolean\r\n    submitError?: boolean\r\n    active?: boolean\r\n  }\r\n  inputAdornment?: { endAdornment: React.ReactElement } | undefined\r\n  multiline: boolean\r\n  rows?: string\r\n  testId: string\r\n  text: string\r\n  disabled?: boolean\r\n  rowsMax?: number\r\n  className?: string\r\n}\r\n\r\nconst TextField = (props: Props): React.ReactElement => {\r\n  const {\r\n    input: { name, onChange, value, ...restInput },\r\n    inputAdornment,\r\n    meta,\r\n    multiline,\r\n    rows,\r\n    testId,\r\n    text,\r\n    ...rest\r\n  } = props\r\n  const classes = useStyles()\r\n  const helperText = value ? text : undefined\r\n  const showError = (meta.touched || !meta.pristine) && !meta.valid\r\n  const hasError = !!meta.error || (!meta.modifiedSinceLastSubmit && !!meta.submitError)\r\n  const errorMessage = meta.error || meta.submitError\r\n  const isInactiveAndPristineOrUntouched = !meta.active && (meta.pristine || !meta.touched)\r\n  const isInvalidAndUntouched = typeof meta.error === 'undefined' ? true : !meta.touched\r\n\r\n  const disableUnderline = isInactiveAndPristineOrUntouched && isInvalidAndUntouched\r\n\r\n  const inputRoot = helperText ? classes.root : ''\r\n  const statusClasses = meta.valid ? 'isValid' : hasError && showError ? 'isInvalid' : ''\r\n  const inputProps = {\r\n    ...restInput,\r\n    autoComplete: 'off',\r\n    'data-testid': testId,\r\n  }\r\n  const inputRootProps = {\r\n    ...inputAdornment,\r\n    className: `${inputRoot} ${statusClasses}`,\r\n    disableUnderline: disableUnderline,\r\n  }\r\n\r\n  return (\r\n    <MuiTextField\r\n      error={hasError && showError}\r\n      helperText={hasError && showError ? errorMessage : helperText || ' '}\r\n      inputProps={inputProps} // blank in order to force to have helper text\r\n      InputProps={inputRootProps}\r\n      multiline={multiline}\r\n      name={name}\r\n      onChange={onChange}\r\n      rows={rows}\r\n      style={overflowStyle}\r\n      value={value}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nexport default TextField\r\n","import * as React from 'react'\r\nimport { Form } from 'react-final-form'\r\n\r\nconst stylesBasedOn = (padding) => ({\r\n  padding: `0 ${padding}%`,\r\n  flexDirection: 'column',\r\n  flex: '1 0 auto',\r\n})\r\n\r\nconst GnoForm = ({\r\n  children,\r\n  decorators,\r\n  formMutators,\r\n  initialValues,\r\n  onSubmit,\r\n  padding = 0,\r\n  subscription,\r\n  testId = '',\r\n  validation,\r\n}: any) => (\r\n  <Form\r\n    decorators={decorators}\r\n    initialValues={initialValues}\r\n    mutators={formMutators}\r\n    onSubmit={onSubmit}\r\n    render={({ handleSubmit, ...rest }) => (\r\n      <form data-testid={testId} onSubmit={handleSubmit} style={stylesBasedOn(padding) as any}>\r\n        {children(rest.submitting, rest.validating, rest, rest.form.mutators)}\r\n      </form>\r\n    )}\r\n    subscription={subscription}\r\n    validate={validation}\r\n  />\r\n)\r\n\r\nexport default GnoForm\r\n","import { List } from 'immutable'\r\nimport { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { getNetworkInfo } from 'src/config'\r\nimport {\r\n  checkTransactionExecution,\r\n  estimateSafeTxGas,\r\n  estimateTransactionGasLimit,\r\n} from 'src/logic/safe/transactions/gas'\r\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\r\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\r\nimport { calculateGasPrice } from 'src/logic/wallets/ethTransactions'\r\nimport {\r\n  safeCurrentVersionSelector,\r\n  safeParamAddressFromStateSelector,\r\n  safeThresholdSelector,\r\n} from 'src/logic/safe/store/selectors'\r\nimport { CALL } from 'src/logic/safe/transactions'\r\nimport { web3ReadOnly as web3 } from 'src/logic/wallets/getWeb3'\r\nimport { providerSelector } from 'src/logic/wallets/store/selectors'\r\n\r\nimport { Confirmation } from 'src/logic/safe/store/models/types/confirmation'\r\nimport { checkIfOffChainSignatureIsPossible } from 'src/logic/safe/safeTxSigner'\r\nimport { ZERO_ADDRESS } from 'src/logic/wallets/ethAddresses'\r\nimport { sameString } from 'src/utils/strings'\r\n\r\nexport enum EstimationStatus {\r\n  LOADING = 'LOADING',\r\n  FAILURE = 'FAILURE',\r\n  SUCCESS = 'SUCCESS',\r\n}\r\n\r\nexport const checkIfTxIsExecution = (\r\n  threshold: number,\r\n  preApprovingOwner?: string,\r\n  txConfirmations?: number,\r\n  txType?: string,\r\n): boolean => {\r\n  if (\r\n    threshold === 1 ||\r\n    sameString(txType, 'spendingLimit') ||\r\n    (txConfirmations !== undefined && txConfirmations >= threshold)\r\n  ) {\r\n    return true\r\n  }\r\n\r\n  if (preApprovingOwner && txConfirmations) {\r\n    return txConfirmations + 1 === threshold\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nexport const checkIfTxIsApproveAndExecution = (\r\n  threshold: number,\r\n  txConfirmations: number,\r\n  txType?: string,\r\n  preApprovingOwner?: string,\r\n): boolean => {\r\n  if (preApprovingOwner) {\r\n    return txConfirmations + 1 === threshold || sameString(txType, 'spendingLimit')\r\n  }\r\n\r\n  if (threshold === 1) {\r\n    return true\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nexport const checkIfTxIsCreation = (txConfirmations: number, txType?: string): boolean =>\r\n  txConfirmations === 0 && !sameString(txType, 'spendingLimit')\r\n\r\ntype UseEstimateTransactionGasProps = {\r\n  txData: string\r\n  txRecipient: string\r\n  txConfirmations?: List<Confirmation>\r\n  txAmount?: string\r\n  preApprovingOwner?: string\r\n  operation?: number\r\n  safeTxGas?: number\r\n  txType?: string\r\n  manualGasPrice?: string\r\n  manualGasLimit?: string\r\n}\r\n\r\nexport type TransactionGasEstimationResult = {\r\n  txEstimationExecutionStatus: EstimationStatus\r\n  gasEstimation: number // Amount of gas needed for execute or approve the transaction\r\n  gasCost: string // Cost of gas in raw format (estimatedGas * gasPrice)\r\n  gasCostFormatted: string // Cost of gas in format '< | > 100'\r\n  gasPrice: string // Current price of gas unit\r\n  gasPriceFormatted: string // Current gas price formatted\r\n  gasLimit: string // Minimum gas requited to execute the Tx\r\n  isExecution: boolean // Returns true if the user will execute the tx or false if it just signs it\r\n  isCreation: boolean // Returns true if the transaction is a creation transaction\r\n  isOffChainSignature: boolean // Returns true if offChainSignature is available\r\n}\r\n\r\nexport const useEstimateTransactionGas = ({\r\n  txRecipient,\r\n  txData,\r\n  txConfirmations,\r\n  txAmount,\r\n  preApprovingOwner,\r\n  operation,\r\n  safeTxGas,\r\n  txType,\r\n  manualGasPrice,\r\n  manualGasLimit,\r\n}: UseEstimateTransactionGasProps): TransactionGasEstimationResult => {\r\n  const [gasEstimation, setGasEstimation] = useState<TransactionGasEstimationResult>({\r\n    txEstimationExecutionStatus: EstimationStatus.LOADING,\r\n    gasEstimation: 0,\r\n    gasCost: '0',\r\n    gasCostFormatted: '< 0.001',\r\n    gasPrice: '0',\r\n    gasPriceFormatted: '0',\r\n    gasLimit: '0',\r\n    isExecution: false,\r\n    isCreation: false,\r\n    isOffChainSignature: false,\r\n  })\r\n  const { nativeCoin } = getNetworkInfo()\r\n  const safeAddress = useSelector(safeParamAddressFromStateSelector)\r\n  const threshold = useSelector(safeThresholdSelector)\r\n  const safeVersion = useSelector(safeCurrentVersionSelector)\r\n  const { account: from, smartContractWallet, name: providerName } = useSelector(providerSelector)\r\n\r\n  useEffect(() => {\r\n    const estimateGas = async () => {\r\n      if (!txData.length) {\r\n        return\r\n      }\r\n\r\n      const isCreation = checkIfTxIsCreation(txConfirmations?.size || 0, txType)\r\n      const isExecution = checkIfTxIsExecution(Number(threshold), preApprovingOwner, txConfirmations?.size, txType)\r\n      const approvalAndExecution = checkIfTxIsApproveAndExecution(\r\n        Number(threshold),\r\n        txConfirmations?.size || 0,\r\n        txType,\r\n        preApprovingOwner,\r\n      )\r\n      const isOffChainSignature = checkIfOffChainSignatureIsPossible(isExecution, smartContractWallet, safeVersion)\r\n\r\n      try {\r\n        let safeTxGasEstimation = safeTxGas || 0\r\n        let ethGasLimitEstimation = 0\r\n        let transactionCallSuccess = true\r\n        let txEstimationExecutionStatus = EstimationStatus.LOADING\r\n\r\n        if (isCreation) {\r\n          safeTxGasEstimation = await estimateSafeTxGas({\r\n            safeAddress,\r\n            txData,\r\n            txRecipient,\r\n            txAmount: txAmount || '0',\r\n            operation: operation || CALL,\r\n          })\r\n        }\r\n        if (isExecution || approvalAndExecution) {\r\n          ethGasLimitEstimation = await estimateTransactionGasLimit({\r\n            safeAddress,\r\n            txRecipient,\r\n            txData,\r\n            txAmount: txAmount || '0',\r\n            txConfirmations,\r\n            isExecution,\r\n            isOffChainSignature,\r\n            operation: operation || CALL,\r\n            from,\r\n            safeTxGas: safeTxGasEstimation,\r\n            approvalAndExecution,\r\n          })\r\n        }\r\n\r\n        const gasPrice = manualGasPrice ? web3.utils.toWei(manualGasPrice, 'gwei') : await calculateGasPrice()\r\n        const gasPriceFormatted = web3.utils.fromWei(gasPrice, 'gwei')\r\n        const estimatedGasCosts = ethGasLimitEstimation * parseInt(gasPrice, 10)\r\n        const gasCost = fromTokenUnit(estimatedGasCosts, nativeCoin.decimals)\r\n        const gasCostFormatted = formatAmount(gasCost)\r\n        const gasLimit = manualGasLimit || ethGasLimitEstimation.toString()\r\n\r\n        if (isExecution) {\r\n          transactionCallSuccess = await checkTransactionExecution({\r\n            safeAddress,\r\n            txRecipient,\r\n            txData,\r\n            txAmount: txAmount || '0',\r\n            txConfirmations,\r\n            operation: operation || CALL,\r\n            from,\r\n            gasPrice: '0',\r\n            gasToken: ZERO_ADDRESS,\r\n            gasLimit,\r\n            refundReceiver: ZERO_ADDRESS,\r\n            safeTxGas: safeTxGasEstimation,\r\n            approvalAndExecution,\r\n          })\r\n        }\r\n\r\n        txEstimationExecutionStatus = transactionCallSuccess ? EstimationStatus.SUCCESS : EstimationStatus.FAILURE\r\n\r\n        setGasEstimation({\r\n          txEstimationExecutionStatus,\r\n          gasEstimation: safeTxGasEstimation,\r\n          gasCost,\r\n          gasCostFormatted,\r\n          gasPrice,\r\n          gasPriceFormatted,\r\n          gasLimit,\r\n          isExecution,\r\n          isCreation,\r\n          isOffChainSignature,\r\n        })\r\n      } catch (error) {\r\n        console.warn(error.message)\r\n        // If safeTxGas estimation fail we set this value to 0 (so up to all gasLimit can be used)\r\n        setGasEstimation({\r\n          txEstimationExecutionStatus: EstimationStatus.FAILURE,\r\n          gasEstimation: 0,\r\n          gasCost: '0',\r\n          gasCostFormatted: '< 0.001',\r\n          gasPrice: '1',\r\n          gasPriceFormatted: '1',\r\n          gasLimit: '0',\r\n          isExecution,\r\n          isCreation,\r\n          isOffChainSignature,\r\n        })\r\n      }\r\n    }\r\n\r\n    estimateGas()\r\n  }, [\r\n    txData,\r\n    safeAddress,\r\n    txRecipient,\r\n    txConfirmations,\r\n    txAmount,\r\n    preApprovingOwner,\r\n    nativeCoin.decimals,\r\n    threshold,\r\n    from,\r\n    operation,\r\n    safeVersion,\r\n    smartContractWallet,\r\n    safeTxGas,\r\n    txType,\r\n    providerName,\r\n    manualGasPrice,\r\n    manualGasLimit,\r\n  ])\r\n\r\n  return gasEstimation\r\n}\r\n","import { SyntheticEvent } from 'react'\r\n\r\nimport TokenPlaceholder from 'src/routes/safe/components/Balances/assets/token_placeholder.svg'\r\n\r\nexport const setImageToPlaceholder = (error: SyntheticEvent<HTMLImageElement, Event>): void => {\r\n  error.currentTarget.onerror = null\r\n  error.currentTarget.src = TokenPlaceholder\r\n}\r\n","import * as React from 'react'\r\n\r\nclass Bold extends React.PureComponent<any> {\r\n  render() {\r\n    const { children, ...props } = this.props\r\n\r\n    return <b {...props}>{children}</b>\r\n  }\r\n}\r\n\r\nexport default Bold\r\n","export default __webpack_public_path__ + \"static/media/token_placeholder.c1abe466.svg\";","import React, { ReactElement } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, ButtonLink, Accordion, AccordionSummary, AccordionDetails } from '@gnosis.pm/safe-react-components'\r\n\r\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\r\nimport { ParametersStatus, areEthereumParamsVisible, areSafeParamsEnabled, ethereumTxParametersTitle } from '../utils'\r\nimport { useSelector } from 'react-redux'\r\nimport { safeThresholdSelector } from 'src/logic/safe/store/selectors'\r\n\r\nconst TxParameterWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst AccordionDetailsWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\nconst StyledText = styled(Text)`\r\n  margin: 8px 0 0 0;\r\n`\r\n\r\nconst StyledButtonLink = styled(ButtonLink)`\r\n  padding-left: 0;\r\n  margin: 8px 0 0 0;\r\n\r\n  > p {\r\n    margin-left: 0;\r\n  }\r\n`\r\n\r\ntype Props = {\r\n  txParameters: TxParameters\r\n  onEdit: () => void\r\n  compact?: boolean\r\n  parametersStatus?: ParametersStatus\r\n  isTransactionCreation: boolean\r\n  isTransactionExecution: boolean\r\n  isOffChainSignature: boolean\r\n}\r\n\r\nexport const TxParametersDetail = ({\r\n  onEdit,\r\n  txParameters,\r\n  compact = true,\r\n  parametersStatus,\r\n  isTransactionCreation,\r\n  isTransactionExecution,\r\n  isOffChainSignature,\r\n}: Props): ReactElement | null => {\r\n  const threshold = useSelector(safeThresholdSelector) || 1\r\n  const defaultParameterStatus = isOffChainSignature && threshold > 1 ? 'ETH_HIDDEN' : 'ENABLED'\r\n\r\n  if (!isTransactionExecution && !isTransactionCreation && isOffChainSignature) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Accordion compact={compact}>\r\n      <AccordionSummary>\r\n        <Text size=\"lg\">Advanced options</Text>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <AccordionDetailsWrapper>\r\n          <StyledText size=\"md\" color=\"placeHolder\">\r\n            Safe transaction\r\n          </StyledText>\r\n\r\n          <TxParameterWrapper>\r\n            <Text\r\n              size=\"lg\"\r\n              color={areSafeParamsEnabled(parametersStatus || defaultParameterStatus) ? 'text' : 'secondaryLight'}\r\n            >\r\n              Safe nonce\r\n            </Text>\r\n            <Text\r\n              size=\"lg\"\r\n              color={areSafeParamsEnabled(parametersStatus || defaultParameterStatus) ? 'text' : 'secondaryLight'}\r\n            >\r\n              {txParameters.safeNonce}\r\n            </Text>\r\n          </TxParameterWrapper>\r\n\r\n          <TxParameterWrapper>\r\n            <Text\r\n              size=\"lg\"\r\n              color={areSafeParamsEnabled(parametersStatus || defaultParameterStatus) ? 'text' : 'secondaryLight'}\r\n            >\r\n              SafeTxGas\r\n            </Text>\r\n            <Text\r\n              size=\"lg\"\r\n              color={areSafeParamsEnabled(parametersStatus || defaultParameterStatus) ? 'text' : 'secondaryLight'}\r\n            >\r\n              {txParameters.safeTxGas}\r\n            </Text>\r\n          </TxParameterWrapper>\r\n\r\n          {areEthereumParamsVisible(parametersStatus || defaultParameterStatus) && (\r\n            <>\r\n              <TxParameterWrapper>\r\n                <StyledText size=\"md\" color=\"placeHolder\">\r\n                  {ethereumTxParametersTitle(isTransactionExecution)}\r\n                </StyledText>\r\n              </TxParameterWrapper>\r\n\r\n              <TxParameterWrapper>\r\n                <Text size=\"lg\">Nonce</Text>\r\n                <Text size=\"lg\">{txParameters.ethNonce}</Text>\r\n              </TxParameterWrapper>\r\n\r\n              <TxParameterWrapper>\r\n                <Text size=\"lg\">Gas limit</Text>\r\n                <Text size=\"lg\">{txParameters.ethGasLimit}</Text>\r\n              </TxParameterWrapper>\r\n\r\n              <TxParameterWrapper>\r\n                <Text size=\"lg\">Gas price</Text>\r\n                <Text size=\"lg\">{txParameters.ethGasPrice}</Text>\r\n              </TxParameterWrapper>\r\n            </>\r\n          )}\r\n          <StyledButtonLink color=\"primary\" textSize=\"xl\" onClick={onEdit}>\r\n            Edit\r\n          </StyledButtonLink>\r\n        </AccordionDetailsWrapper>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  )\r\n}\r\n","import { lg, md, secondaryText, sm } from 'src/theme/variables'\r\nimport { createStyles } from '@material-ui/core'\r\n\r\nexport const styles = createStyles({\r\n  heading: {\r\n    padding: `${md} ${lg}`,\r\n    justifyContent: 'space-between',\r\n    boxSizing: 'border-box',\r\n    height: '74px',\r\n  },\r\n  annotation: {\r\n    letterSpacing: '-1px',\r\n    color: secondaryText,\r\n    marginRight: 'auto',\r\n    marginLeft: '20px',\r\n  },\r\n  headingText: {\r\n    fontSize: lg,\r\n  },\r\n  closeIcon: {\r\n    height: '35px',\r\n    width: '35px',\r\n  },\r\n  container: {\r\n    padding: `${md} ${lg}`,\r\n  },\r\n  amount: {\r\n    marginLeft: sm,\r\n  },\r\n  address: {\r\n    marginRight: sm,\r\n  },\r\n  buttonRow: {\r\n    height: '52px',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    gap: '16px',\r\n  },\r\n})\r\n","import React, { ReactElement } from 'react'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Close from '@material-ui/icons/Close'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Title, Text, Divider, Link, Icon } from '@gnosis.pm/safe-react-components'\r\nimport styled from 'styled-components'\r\n\r\nimport Field from 'src/components/forms/Field'\r\nimport TextField from 'src/components/forms/TextField'\r\nimport Block from 'src/components/layout/Block'\r\nimport Row from 'src/components/layout/Row'\r\nimport { styles } from './style'\r\nimport GnoForm from 'src/components/forms/GnoForm'\r\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\r\nimport { minValue } from 'src/components/forms/validator'\r\nimport { Modal } from 'src/components/Modal'\r\n\r\nimport { ParametersStatus, areSafeParamsEnabled, areEthereumParamsVisible, ethereumTxParametersTitle } from '../utils'\r\n\r\nconst StyledDivider = styled(Divider)`\r\n  margin: 0px;\r\n`\r\nconst StyledDividerFooter = styled(Divider)`\r\n  margin: 16px -24px;\r\n`\r\n\r\nconst SafeOptions = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  gap: 20px;\r\n`\r\n\r\nconst EthereumOptions = styled.div`\r\n  display: flex;\r\n  /* justify-content: space-between; */\r\n  flex-wrap: wrap;\r\n  gap: 10px 20px;\r\n\r\n  div {\r\n    width: 216px !important;\r\n  }\r\n`\r\nconst StyledLink = styled(Link)`\r\n  margin: 16px 0 0 0;\r\n  display: inline-flex;\r\n  align-items: center;\r\n\r\n  > :first-of-type {\r\n    margin-right: 5px;\r\n  }\r\n`\r\nconst StyledText = styled(Text)`\r\n  margin: 0 0 4px 0;\r\n`\r\nconst StyledTextMt = styled(Text)`\r\n  margin: 16px 0 4px 0;\r\n`\r\nconst useStyles = makeStyles(styles)\r\n\r\ninterface Props {\r\n  txParameters: TxParameters\r\n  onClose: (txParameters?: TxParameters) => void\r\n  parametersStatus: ParametersStatus\r\n  isExecution: boolean\r\n}\r\n\r\nconst formValidation = (values) => {\r\n  const { ethGasLimit, ethGasPrice, ethNonce, safeNonce, safeTxGas } = values ?? {}\r\n\r\n  const ethGasLimitValidation = minValue(0, true)(ethGasLimit)\r\n\r\n  const ethGasPriceValidation = minValue(0, true)(ethGasPrice)\r\n\r\n  const ethNonceValidation = minValue(0, true)(ethNonce)\r\n\r\n  const safeNonceValidation = minValue(0, true)(safeNonce)\r\n\r\n  const safeTxGasValidation = minValue(0, true)(safeTxGas)\r\n\r\n  return {\r\n    ethGasLimit: ethGasLimitValidation,\r\n    ethGasPrice: ethGasPriceValidation,\r\n    ethNonce: ethNonceValidation,\r\n    safeNonce: safeNonceValidation,\r\n    safeTxGas: safeTxGasValidation,\r\n  }\r\n}\r\n\r\nexport const EditTxParametersForm = ({\r\n  onClose,\r\n  txParameters,\r\n  parametersStatus = 'ENABLED',\r\n  isExecution,\r\n}: Props): ReactElement => {\r\n  const classes = useStyles()\r\n  const { safeNonce, safeTxGas, ethNonce, ethGasLimit, ethGasPrice } = txParameters\r\n\r\n  const onSubmit = (values: TxParameters) => {\r\n    onClose(values)\r\n  }\r\n\r\n  const onCloseFormHandler = () => {\r\n    onClose()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* Header */}\r\n      <Row align=\"center\" className={classes.heading} grow data-testid=\"send-funds-review-step\">\r\n        <Title size=\"sm\" withoutMargin>\r\n          Advanced options\r\n        </Title>\r\n        <IconButton disableRipple onClick={onCloseFormHandler}>\r\n          <Close className={classes.closeIcon} />\r\n        </IconButton>\r\n      </Row>\r\n\r\n      <StyledDivider />\r\n\r\n      <Block className={classes.container}>\r\n        <GnoForm\r\n          initialValues={{\r\n            safeNonce: safeNonce || 0,\r\n            safeTxGas: safeTxGas || '',\r\n            ethNonce: ethNonce || '',\r\n            ethGasLimit: ethGasLimit || '',\r\n            ethGasPrice: ethGasPrice || '',\r\n          }}\r\n          onSubmit={onSubmit}\r\n          validation={formValidation}\r\n        >\r\n          {() => (\r\n            <>\r\n              <StyledText size=\"xl\" strong>\r\n                Safe transaction\r\n              </StyledText>\r\n\r\n              <SafeOptions>\r\n                <Field\r\n                  name=\"safeNonce\"\r\n                  defaultValue={safeNonce}\r\n                  placeholder=\"Safe nonce\"\r\n                  text=\"Safe nonce\"\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  component={TextField}\r\n                  disabled={!areSafeParamsEnabled(parametersStatus)}\r\n                />\r\n                <Field\r\n                  name=\"safeTxGas\"\r\n                  defaultValue={safeTxGas}\r\n                  placeholder=\"SafeTxGas\"\r\n                  text=\"SafeTxGas\"\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  component={TextField}\r\n                  disabled={!areSafeParamsEnabled(parametersStatus)}\r\n                />\r\n              </SafeOptions>\r\n\r\n              {areEthereumParamsVisible(parametersStatus) && (\r\n                <>\r\n                  <StyledTextMt size=\"xl\" strong>\r\n                    {ethereumTxParametersTitle(isExecution)}\r\n                  </StyledTextMt>\r\n\r\n                  <EthereumOptions>\r\n                    <Field\r\n                      name=\"ethNonce\"\r\n                      defaultValue={ethNonce}\r\n                      placeholder=\"Nonce\"\r\n                      text=\"Nonce\"\r\n                      type=\"number\"\r\n                      component={TextField}\r\n                      disabled={!areEthereumParamsVisible(parametersStatus)}\r\n                    />\r\n                    <Field\r\n                      name=\"ethGasLimit\"\r\n                      defaultValue={ethGasLimit}\r\n                      placeholder=\"Gas limit\"\r\n                      text=\"Gas limit\"\r\n                      type=\"number\"\r\n                      component={TextField}\r\n                      disabled={parametersStatus === 'CANCEL_TRANSACTION'}\r\n                    />\r\n                    <Field\r\n                      name=\"ethGasPrice\"\r\n                      defaultValue={ethGasPrice}\r\n                      type=\"number\"\r\n                      placeholder=\"Gas price (GWEI)\"\r\n                      text=\"Gas price (GWEI)\"\r\n                      component={TextField}\r\n                      disabled={!areEthereumParamsVisible(parametersStatus)}\r\n                    />\r\n                  </EthereumOptions>\r\n\r\n                  <StyledLink\r\n                    href=\"https://help.gnosis-safe.io/en/articles/4738445-configure-advanced-transaction-parameters-manually\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    <Text size=\"xl\" color=\"primary\">\r\n                      How can I configure these parameters manually?\r\n                    </Text>\r\n                    <Icon size=\"sm\" type=\"externalLink\" color=\"primary\" />\r\n                  </StyledLink>\r\n                </>\r\n              )}\r\n\r\n              <StyledDividerFooter />\r\n\r\n              {/* Footer */}\r\n              <Row align=\"center\" className={classes.buttonRow}>\r\n                <Modal.Footer.Buttons\r\n                  cancelButtonProps={{ onClick: onCloseFormHandler, text: 'Back' }}\r\n                  confirmButtonProps={{\r\n                    type: 'submit',\r\n                    text: 'Confirm',\r\n                    testId: 'submit-tx-btn',\r\n                  }}\r\n                />\r\n              </Row>\r\n            </>\r\n          )}\r\n        </GnoForm>\r\n      </Block>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { TxParameters, useTransactionParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\r\nimport { EditTxParametersForm } from 'src/routes/safe/components/Transactions/helpers/EditTxParametersForm'\r\nimport { ParametersStatus } from './utils'\r\nimport { useSelector } from 'react-redux'\r\nimport { safeThresholdSelector } from 'src/logic/safe/store/selectors'\r\n\r\ntype Props = {\r\n  children: (txParameters: TxParameters, toggleStatus: (txParameters?: TxParameters) => void) => any\r\n  isOffChainSignature: boolean\r\n  isExecution: boolean\r\n  parametersStatus?: ParametersStatus\r\n  ethGasLimit?: TxParameters['ethGasLimit']\r\n  ethGasPrice?: TxParameters['ethGasPrice']\r\n  safeNonce?: TxParameters['safeNonce']\r\n  safeTxGas?: TxParameters['safeTxGas']\r\n  closeEditModalCallback?: (txParameters: TxParameters) => void\r\n}\r\n\r\nexport const EditableTxParameters = ({\r\n  children,\r\n  isOffChainSignature,\r\n  isExecution,\r\n  parametersStatus,\r\n  ethGasLimit,\r\n  ethGasPrice,\r\n  safeNonce,\r\n  safeTxGas,\r\n  closeEditModalCallback,\r\n}: Props): React.ReactElement => {\r\n  const [isEditMode, toggleEditMode] = useState(false)\r\n  const [useManualValues, setUseManualValues] = useState(false)\r\n  const threshold = useSelector(safeThresholdSelector) || 1\r\n  const defaultParameterStatus = isOffChainSignature && threshold > 1 ? 'ETH_HIDDEN' : 'ENABLED'\r\n  const txParameters = useTransactionParameters({\r\n    parameterStatus: parametersStatus || defaultParameterStatus,\r\n    initialEthGasLimit: ethGasLimit,\r\n    initialEthGasPrice: ethGasPrice,\r\n    initialSafeNonce: safeNonce,\r\n    initialSafeTxGas: safeTxGas,\r\n  })\r\n  const { setEthGasPrice, setEthGasLimit, setSafeNonce, setSafeTxGas, setEthNonce } = txParameters\r\n\r\n  // Update TxParameters\r\n  useEffect(() => {\r\n    if (!useManualValues) {\r\n      setEthGasLimit(ethGasLimit)\r\n      setEthGasPrice(ethGasPrice)\r\n      setSafeTxGas(safeTxGas)\r\n    }\r\n  }, [ethGasLimit, setEthGasLimit, ethGasPrice, setEthGasPrice, useManualValues, safeTxGas, setSafeTxGas])\r\n\r\n  const toggleStatus = () => {\r\n    toggleEditMode((prev) => !prev)\r\n  }\r\n\r\n  const closeEditFormHandler = (txParameters?: TxParameters) => {\r\n    if (txParameters) {\r\n      setUseManualValues(true)\r\n      setSafeNonce(txParameters.safeNonce)\r\n      setSafeTxGas(txParameters.safeTxGas)\r\n      setEthGasLimit(txParameters.ethGasLimit)\r\n      setEthGasPrice(txParameters.ethGasPrice)\r\n      setEthNonce(txParameters.ethNonce)\r\n      closeEditModalCallback && closeEditModalCallback(txParameters)\r\n    }\r\n    toggleStatus()\r\n  }\r\n\r\n  return isEditMode ? (\r\n    <EditTxParametersForm\r\n      isExecution={isExecution}\r\n      txParameters={txParameters}\r\n      onClose={closeEditFormHandler}\r\n      parametersStatus={parametersStatus ? parametersStatus : defaultParameterStatus}\r\n    />\r\n  ) : (\r\n    children(txParameters, toggleStatus)\r\n  )\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core'\r\nimport { sm } from 'src/theme/variables'\r\nimport { EstimationStatus } from 'src/logic/hooks/useEstimateTransactionGas'\r\nimport Row from 'src/components/layout/Row'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Img from 'src/components/layout/Img'\r\nimport InfoIcon from 'src/assets/icons/info_red.svg'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { safeThresholdSelector } from 'src/logic/safe/store/selectors'\r\n\r\nconst styles = createStyles({\r\n  executionWarningRow: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  warningIcon: {\r\n    marginRight: sm,\r\n  },\r\n})\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\ntype TransactionFailTextProps = {\r\n  txEstimationExecutionStatus: EstimationStatus\r\n  isExecution: boolean\r\n}\r\n\r\nexport const TransactionFailText = ({\r\n  txEstimationExecutionStatus,\r\n  isExecution,\r\n}: TransactionFailTextProps): React.ReactElement | null => {\r\n  const classes = useStyles()\r\n  const threshold = useSelector(safeThresholdSelector)\r\n\r\n  if (txEstimationExecutionStatus !== EstimationStatus.FAILURE) {\r\n    return null\r\n  }\r\n\r\n  let errorMessage = 'To save gas costs, avoid creating the transaction.'\r\n  if (isExecution) {\r\n    errorMessage =\r\n      threshold && threshold > 1\r\n        ? `To save gas costs, reject this transaction`\r\n        : `To save gas costs, avoid executing the transaction.`\r\n  }\r\n\r\n  return (\r\n    <Row align=\"center\">\r\n      <Paragraph color=\"error\" className={classes.executionWarningRow}>\r\n        <Img alt=\"Info Tooltip\" height={16} src={InfoIcon} className={classes.warningIcon} />\r\n        This transaction will most likely fail. {errorMessage}\r\n      </Paragraph>\r\n    </Row>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { EstimationStatus } from 'src/logic/hooks/useEstimateTransactionGas'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport { getNetworkInfo } from 'src/config'\r\nimport { TransactionFailText } from 'src/components/TransactionFailText'\r\nimport { Text } from '@gnosis.pm/safe-react-components'\r\n\r\ntype TransactionFailTextProps = {\r\n  txEstimationExecutionStatus: EstimationStatus\r\n  gasCostFormatted: string\r\n  isExecution: boolean\r\n  isCreation: boolean\r\n  isOffChainSignature: boolean\r\n}\r\nconst { nativeCoin } = getNetworkInfo()\r\n\r\nexport const TransactionFees = ({\r\n  gasCostFormatted,\r\n  isExecution,\r\n  isCreation,\r\n  isOffChainSignature,\r\n  txEstimationExecutionStatus,\r\n}: TransactionFailTextProps): React.ReactElement | null => {\r\n  let transactionAction\r\n  if (txEstimationExecutionStatus === EstimationStatus.LOADING) {\r\n    return null\r\n  }\r\n  if (isCreation) {\r\n    transactionAction = 'create'\r\n  } else if (isExecution) {\r\n    transactionAction = 'execute'\r\n  } else {\r\n    transactionAction = 'approve'\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paragraph size=\"lg\" align=\"center\">\r\n        You&apos;re about to {transactionAction} a transaction and will have to confirm it with your currently connected\r\n        wallet.{' '}\r\n        {!isOffChainSignature && (\r\n          <>\r\n            Make sure you have{' '}\r\n            <Text size=\"lg\" as=\"span\" color=\"text\" strong>\r\n              {gasCostFormatted}\r\n            </Text>{' '}\r\n            (fee price) {nativeCoin.name} in this wallet to fund this confirmation.\r\n          </>\r\n        )}\r\n      </Paragraph>\r\n      <TransactionFailText txEstimationExecutionStatus={txEstimationExecutionStatus} isExecution={isExecution} />\r\n    </>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/qrcode.f0b048aa.svg\";","import { Dispatch, SetStateAction, useEffect, useState } from 'react'\r\n\r\nimport { EstimationStatus } from './useEstimateTransactionGas'\r\nimport { ButtonStatus } from 'src/components/Modal'\r\n\r\nexport const useEstimationStatus = (\r\n  txEstimationStatus?: EstimationStatus,\r\n): [buttonStatus: ButtonStatus, setButtonStatus: Dispatch<SetStateAction<ButtonStatus>>] => {\r\n  const [buttonStatus, setButtonStatus] = useState<ButtonStatus>(ButtonStatus.DISABLED)\r\n\r\n  useEffect(() => {\r\n    let mounted = true\r\n\r\n    if (mounted) {\r\n      switch (txEstimationStatus) {\r\n        case EstimationStatus.LOADING:\r\n          setButtonStatus(ButtonStatus.LOADING)\r\n          break\r\n        default:\r\n          setButtonStatus(ButtonStatus.READY)\r\n          break\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      mounted = false\r\n    }\r\n  }, [txEstimationStatus])\r\n\r\n  return [buttonStatus, setButtonStatus]\r\n}\r\n","import { background, lg, secondaryText, sm } from 'src/theme/variables'\r\nimport { createStyles } from '@material-ui/core'\r\n\r\nexport const styles = createStyles({\r\n  heading: {\r\n    padding: lg,\r\n    justifyContent: 'space-between',\r\n    maxHeight: '75px',\r\n    boxSizing: 'border-box',\r\n  },\r\n  loaderContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  close: {\r\n    height: '25px',\r\n    width: '25px',\r\n    color: secondaryText,\r\n  },\r\n  detailsContainer: {\r\n    backgroundColor: background,\r\n    maxHeight: '450px',\r\n  },\r\n  buttonRow: {\r\n    height: '84px',\r\n    justifyContent: 'center',\r\n  },\r\n  button: {\r\n    '&:last-child': {\r\n      marginLeft: sm,\r\n    },\r\n  },\r\n})\r\n","import IconButton from '@material-ui/core/IconButton'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Close from '@material-ui/icons/Close'\r\nimport * as React from 'react'\r\nimport QrReader from 'react-qr-reader'\r\n\r\nimport { styles } from './style'\r\n\r\nimport Modal from 'src/components/Modal'\r\nimport Block from 'src/components/layout/Block'\r\nimport Button from 'src/components/layout/Button'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\ntype Props = {\r\n  isOpen: boolean\r\n  onClose: () => void\r\n  onScan: (value: string) => void\r\n}\r\n\r\nexport const ScanQRModal = ({ isOpen, onClose, onScan }: Props): React.ReactElement => {\r\n  const classes = useStyles()\r\n  const [fileUploadModalOpen, setFileUploadModalOpen] = useState<boolean>(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [cameraBlocked, setCameraBlocked] = useState<boolean>(false)\r\n  const scannerRef: any = React.createRef()\r\n  const openImageDialog = React.useCallback(() => {\r\n    scannerRef.current.openImageDialog()\r\n  }, [scannerRef])\r\n\r\n  useEffect(() => {\r\n    if (!fileUploadModalOpen && cameraBlocked && !error) {\r\n      setFileUploadModalOpen(true)\r\n      openImageDialog()\r\n    }\r\n  }, [cameraBlocked, openImageDialog, fileUploadModalOpen, setFileUploadModalOpen, error])\r\n\r\n  const onFileScannedResolve = (error: Error | null, successData: string | null) => {\r\n    if (error) {\r\n      console.error('QR code error', error)\r\n\r\n      if (error.name === 'NotAllowedError' || error.name === 'PermissionDismissedError') {\r\n        setCameraBlocked(true)\r\n        setFileUploadModalOpen(false)\r\n      } else {\r\n        setError('The QR could not be read')\r\n      }\r\n      return\r\n    }\r\n\r\n    if (successData) {\r\n      onScan(successData)\r\n    } else if (cameraBlocked) {\r\n      setError('The QR could not be read')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal description=\"Receive Tokens Form\" handleClose={onClose} open={isOpen} title=\"Receive Tokens\">\r\n      <Row align=\"center\" className={classes.heading} grow>\r\n        <Paragraph noMargin size=\"xl\">\r\n          Scan QR\r\n        </Paragraph>\r\n        <IconButton disableRipple onClick={onClose}>\r\n          <Close className={classes.close} />\r\n        </IconButton>\r\n      </Row>\r\n      <Hairline />\r\n      <Col className={classes.detailsContainer} layout=\"column\" middle=\"xs\">\r\n        {error && (\r\n          <Block padding=\"md\" margin=\"md\">\r\n            {error}\r\n          </Block>\r\n        )}\r\n        <QrReader\r\n          legacyMode={cameraBlocked}\r\n          onError={(err: Error) => onFileScannedResolve(err, null)}\r\n          onScan={(data: string) => onFileScannedResolve(null, data)}\r\n          ref={scannerRef}\r\n          style={{ width: '400px', height: '400px' }}\r\n          facingMode=\"user\"\r\n        />\r\n      </Col>\r\n      <Hairline />\r\n      <Row align=\"center\" className={classes.buttonRow}>\r\n        <Button className={classes.button} color=\"secondary\" minWidth={154} onClick={onClose}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          className={classes.button}\r\n          color=\"primary\"\r\n          minWidth={154}\r\n          onClick={() => {\r\n            setCameraBlocked(true)\r\n            setError(null)\r\n            setFileUploadModalOpen(false)\r\n          }}\r\n          variant=\"contained\"\r\n        >\r\n          Upload an image\r\n        </Button>\r\n      </Row>\r\n    </Modal>\r\n  )\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles'\r\nimport React, { ReactElement, useState } from 'react'\r\n\r\nimport QRIcon from 'src/assets/icons/qrcode.svg'\r\nimport { ScanQRModal } from 'src/components/ScanQRModal'\r\nimport Img from 'src/components/layout/Img'\r\n\r\nconst useStyles = makeStyles({\r\n  qrCodeBtn: {\r\n    cursor: 'pointer',\r\n  },\r\n})\r\n\r\ntype Props = {\r\n  handleScan: (dataResult: string, closeQrModal: () => void) => void\r\n}\r\n\r\nexport const ScanQRWrapper = ({ handleScan }: Props): ReactElement => {\r\n  const classes = useStyles()\r\n  const [qrModalOpen, setQrModalOpen] = useState(false)\r\n\r\n  const openQrModal = () => {\r\n    setQrModalOpen(true)\r\n  }\r\n\r\n  const closeQrModal = () => {\r\n    setQrModalOpen(false)\r\n  }\r\n\r\n  const onScanFinished = (value: string) => {\r\n    handleScan(value, closeQrModal)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Img\r\n        alt=\"Scan QR\"\r\n        className={classes.qrCodeBtn}\r\n        height={20}\r\n        onClick={() => openQrModal()}\r\n        role=\"button\"\r\n        src={QRIcon}\r\n        testId=\"qr-icon\"\r\n      />\r\n      {qrModalOpen && <ScanQRModal isOpen={qrModalOpen} onClose={closeQrModal} onScan={onScanFinished} />}\r\n    </>\r\n  )\r\n}\r\n","import FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\nimport React from 'react'\r\n\r\nconst style = {\r\n  minWidth: '100%',\r\n}\r\n\r\nconst SelectInput = ({\r\n  classes,\r\n  disableError,\r\n  formControlProps,\r\n  input: { name, onChange, value, ...restInput },\r\n  label,\r\n  meta,\r\n  renderValue,\r\n  ...rest\r\n}) => {\r\n  const showError = ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) && meta.touched && !disableError\r\n  const inputProps = {\r\n    ...restInput,\r\n    name,\r\n  }\r\n\r\n  return (\r\n    <FormControl {...formControlProps} error={showError} style={style}>\r\n      <InputLabel htmlFor={name}>{label}</InputLabel>\r\n      <Select\r\n        classes={classes}\r\n        inputProps={inputProps}\r\n        onChange={onChange}\r\n        renderValue={renderValue}\r\n        value={value}\r\n        {...rest}\r\n      />\r\n      {showError && <FormHelperText>{meta.error || meta.submitError}</FormHelperText>}\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default SelectInput\r\n","import { createStyles, makeStyles } from '@material-ui/core'\r\n\r\nexport const useTextFieldLabelStyle = makeStyles(\r\n  createStyles({\r\n    root: {\r\n      overflow: 'hidden',\r\n      borderRadius: 4,\r\n      fontSize: '15px',\r\n      width: '500px',\r\n    },\r\n  }),\r\n)\r\n\r\nexport const useTextFieldInputStyle = makeStyles(\r\n  createStyles({\r\n    root: {\r\n      fontSize: '14px',\r\n      width: '420px',\r\n    },\r\n  }),\r\n)\r\n","import { EthHashInfo } from '@gnosis.pm/safe-react-components'\r\nimport MuiTextField from '@material-ui/core/TextField'\r\nimport Autocomplete, { AutocompleteProps } from '@material-ui/lab/Autocomplete'\r\nimport React, { Dispatch, ReactElement, SetStateAction, useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { mustBeEthereumAddress, mustBeEthereumContractAddress } from 'src/components/forms/validator'\r\nimport { getNetworkId, isFeatureEnabled } from 'src/config'\r\nimport { FEATURES } from 'src/config/networks/network.d'\r\nimport { AddressBookEntry } from 'src/logic/addressBook/model/addressBook'\r\nimport { addressBookSelector } from 'src/logic/addressBook/store/selectors'\r\nimport { filterContractAddressBookEntries, filterAddressEntries } from 'src/logic/addressBook/utils'\r\nimport { isValidEnsName, isValidCryptoDomainName } from 'src/logic/wallets/ethAddresses'\r\nimport { getAddressFromDomain } from 'src/logic/wallets/getWeb3'\r\nimport {\r\n  useTextFieldInputStyle,\r\n  useTextFieldLabelStyle,\r\n} from 'src/routes/safe/components/Balances/SendModal/screens/AddressBookInput/style'\r\nimport { trimSpaces } from 'src/utils/strings'\r\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\r\n\r\nconst chainId = getNetworkId()\r\n\r\nexport interface AddressBookProps {\r\n  fieldMutator: (address: string) => void\r\n  label?: string\r\n  pristine?: boolean\r\n  recipientAddress?: string\r\n  errorMsg?: string\r\n  setIsValidAddress: (valid: boolean) => void\r\n  setSelectedEntry: Dispatch<SetStateAction<{ address: string; name: string }> | null>\r\n}\r\n\r\nexport interface BaseAddressBookInputProps extends AddressBookProps {\r\n  addressBookEntries: AddressBookEntry[]\r\n  setSelectedEntry: (args: { address: string; name: string } | null) => void\r\n  setValidationText: Dispatch<SetStateAction<string | undefined>>\r\n  validationText: string | undefined\r\n}\r\n\r\nconst BaseAddressBookInput = ({\r\n  addressBookEntries,\r\n  fieldMutator,\r\n  label = 'Recipient',\r\n  setIsValidAddress,\r\n  setSelectedEntry,\r\n  setValidationText,\r\n  validationText,\r\n}: BaseAddressBookInputProps): ReactElement => {\r\n  const updateAddressInfo = (addressEntry: AddressBookEntry): void => {\r\n    setSelectedEntry(addressEntry)\r\n    fieldMutator(addressEntry.address)\r\n  }\r\n\r\n  const validateAddress = (address: string): AddressBookEntry | string | undefined => {\r\n    const addressErrorMessage = mustBeEthereumAddress(address)\r\n    setIsValidAddress(!addressErrorMessage)\r\n\r\n    if (addressErrorMessage) {\r\n      setValidationText(addressErrorMessage)\r\n      return\r\n    }\r\n\r\n    const filteredEntries = filterAddressEntries(addressBookEntries, { inputValue: address })\r\n    return filteredEntries.length === 1 ? filteredEntries[0] : address\r\n  }\r\n\r\n  const onChange: AutocompleteProps<AddressBookEntry, false, false, true>['onChange'] = (_, value, reason) => {\r\n    switch (reason) {\r\n      case 'select-option': {\r\n        const { address, name, chainId } = value as AddressBookEntry\r\n        updateAddressInfo({ address, name, chainId })\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  const onInputChange: AutocompleteProps<AddressBookEntry, false, false, true>['onInputChange'] = async (\r\n    _,\r\n    value,\r\n    reason,\r\n  ) => {\r\n    switch (reason) {\r\n      case 'input': {\r\n        const normalizedValue = trimSpaces(value)\r\n\r\n        if (!normalizedValue) {\r\n          break\r\n        }\r\n\r\n        // ENS-enabled resolve/validation\r\n        if (\r\n          isFeatureEnabled(FEATURES.DOMAIN_LOOKUP) &&\r\n          (isValidEnsName(normalizedValue) || isValidCryptoDomainName(normalizedValue))\r\n        ) {\r\n          let address = ''\r\n          try {\r\n            address = await getAddressFromDomain(normalizedValue)\r\n          } catch (err) {\r\n            logError(Errors._101, err.message)\r\n          }\r\n\r\n          const validatedAddress = validateAddress(address)\r\n\r\n          if (!validatedAddress) {\r\n            fieldMutator('')\r\n            break\r\n          }\r\n\r\n          const newEntry =\r\n            typeof validatedAddress === 'string'\r\n              ? {\r\n                  address,\r\n                  name: normalizedValue,\r\n                  chainId,\r\n                }\r\n              : validatedAddress\r\n\r\n          updateAddressInfo(newEntry)\r\n          break\r\n        }\r\n\r\n        // ETH address validation\r\n        const validatedAddress = validateAddress(normalizedValue)\r\n\r\n        if (!validatedAddress) {\r\n          fieldMutator('')\r\n          break\r\n        }\r\n\r\n        const newEntry =\r\n          typeof validatedAddress === 'string'\r\n            ? {\r\n                address: validatedAddress,\r\n                name: '',\r\n                chainId,\r\n              }\r\n            : validatedAddress\r\n\r\n        updateAddressInfo(newEntry)\r\n\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  const labelStyles = useTextFieldLabelStyle()\r\n  const inputStyles = useTextFieldInputStyle()\r\n\r\n  return (\r\n    <Autocomplete<AddressBookEntry, false, false, true>\r\n      closeIcon={null}\r\n      openOnFocus={false}\r\n      filterOptions={filterAddressEntries}\r\n      freeSolo\r\n      onChange={onChange}\r\n      onInputChange={onInputChange}\r\n      options={addressBookEntries}\r\n      id=\"address-book-input\"\r\n      renderInput={(params) => (\r\n        <MuiTextField\r\n          {...params}\r\n          autoFocus={true}\r\n          error={!!validationText}\r\n          fullWidth\r\n          variant=\"filled\"\r\n          label={validationText ? validationText : label}\r\n          InputLabelProps={{ shrink: true, required: true, classes: labelStyles }}\r\n          InputProps={{ ...params.InputProps, classes: inputStyles }}\r\n        />\r\n      )}\r\n      getOptionLabel={({ address }) => address}\r\n      renderOption={({ address, name }) => <EthHashInfo hash={address} name={name} showAvatar />}\r\n      role=\"listbox\"\r\n      style={{ display: 'flex', flexGrow: 1 }}\r\n    />\r\n  )\r\n}\r\n\r\nexport const AddressBookInput = (props: AddressBookProps): ReactElement => {\r\n  const addressBookEntries = useSelector(addressBookSelector)\r\n  const [validationText, setValidationText] = useState<string>('')\r\n\r\n  useEffect(() => {\r\n    if (props.errorMsg) {\r\n      setValidationText(props.errorMsg)\r\n    }\r\n  }, [props.errorMsg])\r\n\r\n  return (\r\n    <BaseAddressBookInput\r\n      addressBookEntries={addressBookEntries}\r\n      setValidationText={setValidationText}\r\n      validationText={validationText}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport const ContractsAddressBookInput = ({\r\n  setIsValidAddress,\r\n  setSelectedEntry,\r\n  ...props\r\n}: AddressBookProps): ReactElement => {\r\n  const addressBookEntries = useSelector(addressBookSelector)\r\n  const [filteredEntries, setFilteredEntries] = useState<AddressBookEntry[]>([])\r\n  const [validationText, setValidationText] = useState<string>('')\r\n\r\n  useEffect(() => {\r\n    const filterContractAddresses = async (): Promise<void> => {\r\n      const filteredADBK = await filterContractAddressBookEntries(addressBookEntries)\r\n      setFilteredEntries(filteredADBK)\r\n    }\r\n    filterContractAddresses()\r\n  }, [addressBookEntries])\r\n\r\n  const onSetSelectedEntry = async (selectedEntry) => {\r\n    if (selectedEntry?.address) {\r\n      // verify if `address` is a contract\r\n      const contractAddressErrorMessage = await mustBeEthereumContractAddress(selectedEntry.address)\r\n      setIsValidAddress(!contractAddressErrorMessage)\r\n      setValidationText(contractAddressErrorMessage ?? '')\r\n      setSelectedEntry(selectedEntry)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <BaseAddressBookInput\r\n      addressBookEntries={filteredEntries}\r\n      setIsValidAddress={setIsValidAddress}\r\n      setSelectedEntry={onSetSelectedEntry}\r\n      setValidationText={setValidationText}\r\n      validationText={validationText}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n","import classNames from 'classnames/bind'\r\nimport * as React from 'react'\r\n\r\nimport styles from './index.module.scss'\r\n\r\nimport { capitalize } from 'src/utils/css'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nconst Heading = (props) => {\r\n  const { align, children, className = '', color, margin, tag, testId, truncate, ...rest } = props\r\n\r\n  const classes = cx(className, 'heading', align, tag, margin ? capitalize(margin, 'margin') : undefined, color, {\r\n    truncate,\r\n  })\r\n\r\n  return React.createElement(tag, { ...rest, className: classes, 'data-testid': testId || '' }, children)\r\n}\r\n\r\nexport default Heading\r\n","import * as React from 'react'\r\nimport { Field } from 'react-final-form'\r\nimport { OnChange } from 'react-final-form-listeners'\r\n\r\nimport TextField from 'src/components/forms/TextField'\r\nimport { Validator, composeValidators, mustBeEthereumAddress, required } from 'src/components/forms/validator'\r\nimport { trimSpaces } from 'src/utils/strings'\r\nimport { getAddressFromDomain } from 'src/logic/wallets/getWeb3'\r\nimport { isValidEnsName, isValidCryptoDomainName } from 'src/logic/wallets/ethAddresses'\r\nimport { checksumAddress } from 'src/utils/checksumAddress'\r\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\r\n\r\n// an idea for second field was taken from here\r\n// https://github.com/final-form/react-final-form-listeners/blob/master/src/OnBlur.js\r\n\r\nexport interface AddressInputProps {\r\n  fieldMutator: (address: string) => void\r\n  name?: string\r\n  text?: string\r\n  placeholder?: string\r\n  inputAdornment?: { endAdornment: React.ReactElement } | undefined\r\n  testId: string\r\n  validators?: Validator[]\r\n  defaultValue?: string\r\n  disabled?: boolean\r\n  className?: string\r\n}\r\n\r\nconst AddressInput = ({\r\n  className = '',\r\n  name = 'recipientAddress',\r\n  text = 'Recipient*',\r\n  placeholder = 'Recipient*',\r\n  fieldMutator,\r\n  testId,\r\n  inputAdornment,\r\n  validators = [],\r\n  defaultValue,\r\n  disabled,\r\n}: AddressInputProps): React.ReactElement => (\r\n  <>\r\n    <Field\r\n      className={className}\r\n      component={TextField as any}\r\n      defaultValue={defaultValue}\r\n      disabled={disabled}\r\n      inputAdornment={inputAdornment}\r\n      name={name}\r\n      placeholder={placeholder}\r\n      testId={testId}\r\n      text={text}\r\n      type=\"text\"\r\n      validate={composeValidators(required, mustBeEthereumAddress, ...validators)}\r\n    />\r\n    <OnChange name={name}>\r\n      {async (value: string) => {\r\n        const address = trimSpaces(value)\r\n        if (isValidEnsName(address) || isValidCryptoDomainName(address)) {\r\n          try {\r\n            const resolverAddr = await getAddressFromDomain(address)\r\n            const formattedAddress = checksumAddress(resolverAddr)\r\n            fieldMutator(formattedAddress)\r\n          } catch (err) {\r\n            logError(Errors._101, err.message)\r\n          }\r\n        }\r\n      }}\r\n    </OnChange>\r\n  </>\r\n)\r\n\r\nexport default AddressInput\r\n","import TableCell from '@material-ui/core/TableCell'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\r\nimport * as React from 'react'\r\n\r\ninterface CellWidth {\r\n  maxWidth: string\r\n}\r\n\r\nexport const cellWidth = (width?: string | number): CellWidth | undefined => {\r\n  if (!width) {\r\n    return undefined\r\n  }\r\n\r\n  return {\r\n    maxWidth: `${width}px`,\r\n  }\r\n}\r\n\r\nclass GnoTableHead extends React.PureComponent<any> {\r\n  changeSort = (property, orderAttr) => () => {\r\n    const { onSort } = this.props\r\n\r\n    onSort(property, orderAttr)\r\n  }\r\n\r\n  render() {\r\n    const { columns, order, orderBy } = this.props\r\n\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          {columns.map((column) => (\r\n            <TableCell\r\n              align={column.align}\r\n              key={column.id}\r\n              padding={column.disablePadding ? 'none' : 'default'}\r\n              sortDirection={orderBy === column.id ? order : false}\r\n            >\r\n              {column.static ? (\r\n                <div style={column.style}>{column.label}</div>\r\n              ) : (\r\n                <TableSortLabel\r\n                  active={orderBy === column.id}\r\n                  direction={order}\r\n                  onClick={this.changeSort(column.id, column.order)}\r\n                  style={column.style}\r\n                >\r\n                  {column.label}\r\n                </TableSortLabel>\r\n              )}\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GnoTableHead\r\n","import { createStyles, makeStyles } from '@material-ui/core'\r\nimport {\r\n  background,\r\n  boldFont,\r\n  border,\r\n  error,\r\n  fontColor,\r\n  lg,\r\n  md,\r\n  secondaryText,\r\n  sm,\r\n  smallFontSize,\r\n  xl,\r\n} from 'src/theme/variables'\r\n\r\nexport const useStyles = makeStyles(\r\n  createStyles({\r\n    title: {\r\n      padding: lg,\r\n      paddingBottom: 0,\r\n    },\r\n    hide: {\r\n      '&:hover': {\r\n        backgroundColor: '#f7f5f5',\r\n      },\r\n      '&:hover $actions': {\r\n        visibility: 'initial',\r\n      },\r\n    },\r\n    actions: {\r\n      justifyContent: 'flex-end',\r\n      visibility: 'hidden',\r\n    },\r\n    noBorderBottom: {\r\n      '& > td': {\r\n        borderBottom: 'none',\r\n      },\r\n    },\r\n    annotation: {\r\n      paddingLeft: lg,\r\n    },\r\n    ownersText: {\r\n      color: secondaryText,\r\n      '& b': {\r\n        color: fontColor,\r\n      },\r\n    },\r\n    container: {\r\n      padding: lg,\r\n    },\r\n    actionButton: {\r\n      fontWeight: boldFont,\r\n      marginRight: sm,\r\n    },\r\n    buttonRow: {\r\n      padding: lg,\r\n      position: 'absolute',\r\n      left: 0,\r\n      bottom: 0,\r\n      boxSizing: 'border-box',\r\n      width: '100%',\r\n      justifyContent: 'flex-end',\r\n      borderTop: `2px solid ${border}`,\r\n    },\r\n    modifyBtn: {\r\n      height: xl,\r\n      fontSize: smallFontSize,\r\n    },\r\n    removeModuleIcon: {\r\n      marginLeft: lg,\r\n      cursor: 'pointer',\r\n    },\r\n    modalHeading: {\r\n      boxSizing: 'border-box',\r\n      justifyContent: 'space-between',\r\n      height: '74px',\r\n      padding: `${sm} ${lg}`,\r\n    },\r\n    modalContainer: {\r\n      minHeight: '369px',\r\n    },\r\n    modalManage: {\r\n      fontSize: lg,\r\n    },\r\n    modalClose: {\r\n      height: '35px',\r\n      width: '35px',\r\n    },\r\n    modalButtonRow: {\r\n      height: '84px',\r\n      justifyContent: 'center',\r\n    },\r\n    modalButtonRemove: {\r\n      color: '#fff',\r\n      backgroundColor: error,\r\n      height: '42px',\r\n    },\r\n    modalName: {\r\n      textOverflow: 'ellipsis',\r\n      overflow: 'hidden',\r\n    },\r\n    modalUserName: {\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    modalOwner: {\r\n      backgroundColor: background,\r\n      padding: md,\r\n      alignItems: 'center',\r\n    },\r\n    modalUser: {\r\n      justifyContent: 'left',\r\n    },\r\n    modalDescription: {\r\n      padding: md,\r\n    },\r\n    modalOpen: {\r\n      paddingLeft: sm,\r\n      width: 'auto',\r\n      '&:hover': {\r\n        cursor: 'pointer',\r\n      },\r\n    },\r\n    amountInput: {\r\n      width: '100% !important',\r\n    },\r\n    gasCostsContainer: {\r\n      backgroundColor: background,\r\n      padding: `0 ${lg}`,\r\n    },\r\n  }),\r\n)\r\n","import { List } from 'immutable'\r\n\r\nexport const FIXED = 'fixed'\r\n\r\nexport const buildOrderFieldFrom = (attr: string): string => `${attr}Order`\r\n\r\nconst desc = (\r\n  a: string,\r\n  b: string,\r\n  orderBy: string,\r\n  orderProp: boolean,\r\n  format: (value: string | number) => string | number,\r\n): number => {\r\n  const order = orderProp ? buildOrderFieldFrom(orderBy) : orderBy\r\n\r\n  if (format(b[order]) < format(a[order])) {\r\n    return -1\r\n  }\r\n  if (format(b[order]) > format(a[order])) {\r\n    return 1\r\n  }\r\n\r\n  return 0\r\n}\r\n\r\n// eslint-disable-next-line\r\nexport const stableSort = (dataArray, cmp, fixed) => {\r\n  const fixedElems = fixed ? dataArray.filter((elem) => elem.fixed) : List([])\r\n  const data = fixed ? dataArray.filter((elem) => !elem[FIXED]) : dataArray\r\n  let stabilizedThis = data.map((el, index) => [el, index])\r\n\r\n  stabilizedThis = stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0])\r\n\r\n    if (order !== 0) {\r\n      return order\r\n    }\r\n\r\n    return a[1] - b[1]\r\n  })\r\n\r\n  const sortedElems = stabilizedThis.map((el) => el[0])\r\n\r\n  return fixedElems.concat(sortedElems)\r\n}\r\n\r\nexport const getSorting = (\r\n  order: 'desc' | 'asc',\r\n  orderBy: string,\r\n  orderProp: boolean,\r\n  format: (value: string | number) => string | number = (value) => value,\r\n): ((a: string, b: string) => number) =>\r\n  order === 'desc'\r\n    ? (a, b) => desc(a, b, orderBy, orderProp, format)\r\n    : (a, b) => -desc(a, b, orderBy, orderProp, format)\r\n","import { Loader } from '@gnosis.pm/safe-react-components'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport * as React from 'react'\r\n\r\nimport TableHead from 'src/components/Table/TableHead'\r\nimport { getSorting, stableSort } from 'src/components/Table/sorting'\r\nimport Row from 'src/components/layout/Row'\r\nimport { sm, xl, xxl } from 'src/theme/variables'\r\n\r\nconst styles = {\r\n  root: {\r\n    backgroundColor: 'white',\r\n    borderTopRightRadius: sm,\r\n    borderTopLeftRadius: sm,\r\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\r\n  },\r\n  selectRoot: {\r\n    lineHeight: xxl,\r\n    backgroundColor: 'white',\r\n  },\r\n  white: {\r\n    backgroundColor: 'white',\r\n  },\r\n  paginationRoot: {\r\n    backgroundColor: 'white',\r\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\r\n    marginBottom: xl,\r\n    borderBottomRightRadius: sm,\r\n    borderBottomLeftRadius: sm,\r\n  },\r\n  loader: {\r\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\r\n  },\r\n}\r\n\r\nconst FIXED_EMPTY_HEIGHT = 255\r\n\r\nconst backProps = {\r\n  'aria-label': 'Previous Page',\r\n}\r\n\r\nconst nextProps = {\r\n  'aria-label': 'Next Page',\r\n}\r\n\r\nclass GnoTable extends React.Component<any, any> {\r\n  static defaultProps = {\r\n    defaultOrder: 'asc',\r\n    disablePagination: false,\r\n    defaultRowsPerPage: 5,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      page: 0,\r\n      order: undefined,\r\n      orderBy: undefined,\r\n      fixed: undefined,\r\n      orderProp: false,\r\n      rowsPerPage: undefined,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { columns, defaultOrderBy } = this.props\r\n\r\n    if (defaultOrderBy && columns) {\r\n      const defaultOrderCol = columns.find(({ id }) => id === defaultOrderBy)\r\n\r\n      if (defaultOrderCol.order) {\r\n        this.setState({\r\n          orderProp: true,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  onSort = (newOrderBy, orderProp) => {\r\n    const { order, orderBy } = this.state\r\n    const { defaultOrder } = this.props\r\n    let newOrder = 'desc'\r\n\r\n    // if table was previously sorted by the user\r\n    if (order && orderBy === newOrderBy && order === 'desc') {\r\n      newOrder = 'asc'\r\n    } else if (!order && defaultOrder === 'desc') {\r\n      // if it was not sorted and defaultOrder is used\r\n      newOrder = 'asc'\r\n    }\r\n\r\n    this.setState(() => ({\r\n      order: newOrder,\r\n      orderBy: newOrderBy,\r\n      orderProp,\r\n      fixed: false,\r\n    }))\r\n  }\r\n\r\n  getEmptyStyle = () => ({\r\n    height: `calc(100vh - ${FIXED_EMPTY_HEIGHT}px)`,\r\n    borderTopRightRadius: sm,\r\n    borderTopLeftRadius: sm,\r\n    backgroundColor: 'white',\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  })\r\n\r\n  handleChangePage = (e, page) => {\r\n    this.setState({ page })\r\n  }\r\n\r\n  handleChangeRowsPerPage = (e) => {\r\n    const rowsPerPage = Number(e.target.value)\r\n    this.setState({ rowsPerPage })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children,\r\n      classes,\r\n      columns,\r\n      data,\r\n      defaultFixed,\r\n      defaultOrder,\r\n      defaultOrderBy,\r\n      defaultRowsPerPage,\r\n      disableLoadingOnEmptyTable,\r\n      disablePagination,\r\n      label,\r\n      noBorder,\r\n      size,\r\n    }: any = this.props\r\n    const { fixed, order, orderBy, orderProp, page, rowsPerPage } = this.state\r\n    const orderByParam = orderBy || defaultOrderBy\r\n    const orderParam = order || defaultOrder\r\n    const displayRows = rowsPerPage || defaultRowsPerPage\r\n    const fixedParam = typeof fixed !== 'undefined' ? fixed : !!defaultFixed\r\n    const paginationClasses = {\r\n      selectRoot: classes.selectRoot,\r\n      root: !noBorder && classes.paginationRoot,\r\n      input: classes.white,\r\n    }\r\n    const columnSort = columns.find((column) => column.id === orderByParam)\r\n    let sortedData = stableSort(\r\n      data,\r\n      getSorting(orderParam, orderByParam, orderProp, columnSort?.formatTypeSort),\r\n      fixedParam,\r\n    )\r\n\r\n    if (!disablePagination) {\r\n      sortedData = sortedData.slice(page * displayRows, page * displayRows + displayRows)\r\n    }\r\n\r\n    const isEmpty = size === 0 && !disableLoadingOnEmptyTable\r\n\r\n    return (\r\n      <>\r\n        {!isEmpty && (\r\n          <Table aria-labelledby={label} className={noBorder ? '' : classes.root}>\r\n            <TableHead columns={columns} onSort={this.onSort} order={order} orderBy={orderByParam} />\r\n            <TableBody>{children(sortedData)}</TableBody>\r\n          </Table>\r\n        )}\r\n        {isEmpty && (\r\n          <Row className={classes.loader} style={this.getEmptyStyle()}>\r\n            <Loader size=\"sm\" />\r\n          </Row>\r\n        )}\r\n        {!disablePagination && (\r\n          <TablePagination\r\n            backIconButtonProps={backProps}\r\n            classes={paginationClasses}\r\n            component=\"div\"\r\n            count={size}\r\n            nextIconButtonProps={nextProps}\r\n            onChangePage={this.handleChangePage}\r\n            onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={displayRows}\r\n            rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n          />\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles as any)(GnoTable)\r\n","import { RadioButtons, Text } from '@gnosis.pm/safe-react-components'\r\nimport { FormControlLabel, hexToRgb, Switch as SwitchMui } from '@material-ui/core'\r\nimport React, { ReactElement } from 'react'\r\nimport { useField } from 'react-final-form'\r\nimport styled from 'styled-components'\r\n\r\nimport { getNetworkName } from 'src/config'\r\nimport { Field } from 'src/routes/safe/components/Settings/SpendingLimit/FormFields/Amount'\r\n\r\n// TODO: propose refactor in safe-react-components based on this requirements\r\nconst SpendingLimitRadioButtons = styled(RadioButtons)`\r\n  & .MuiRadio-colorPrimary.Mui-checked {\r\n    color: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\n// TODO: add `name` and `value` to SRC Switch, as they're required for a better RFF integration\r\nconst StyledSwitch = styled(({ ...rest }) => <SwitchMui {...rest} />)`\r\n  && {\r\n    .MuiIconButton-label,\r\n    .MuiSwitch-colorSecondary {\r\n      color: ${({ theme }) => theme.colors.icon};\r\n    }\r\n\r\n    .MuiSwitch-colorSecondary.Mui-checked .MuiIconButton-label {\r\n      color: ${({ theme }) => theme.colors.primary};\r\n    }\r\n\r\n    .MuiSwitch-colorSecondary.Mui-checked:hover {\r\n      background-color: ${({ theme }) => hexToRgb(`${theme.colors.primary}03`)};\r\n    }\r\n\r\n    .Mui-checked + .MuiSwitch-track {\r\n      background-color: ${({ theme }) => theme.colors.primaryLight};\r\n    }\r\n  }\r\n`\r\n\r\ninterface RadioButtonOption {\r\n  label: string\r\n  value: string\r\n}\r\n\r\ninterface RadioButtonProps {\r\n  options: RadioButtonOption[]\r\n  initialValue: string\r\n  groupName: string\r\n}\r\n\r\nconst SafeRadioButtons = ({ options, initialValue, groupName }: RadioButtonProps): ReactElement => (\r\n  <Field name={groupName} initialValue={initialValue}>\r\n    {({ input: { name, value, onChange } }) => (\r\n      <SpendingLimitRadioButtons name={name} value={value || initialValue} onRadioChange={onChange} options={options} />\r\n    )}\r\n  </Field>\r\n)\r\n\r\nconst Switch = ({ label, name }: { label: string; name: string }): ReactElement => (\r\n  <FormControlLabel\r\n    label={label}\r\n    control={\r\n      <Field\r\n        name={name}\r\n        type=\"checkbox\"\r\n        render={({ input: { checked, onChange, name, value } }) => (\r\n          <StyledSwitch checked={checked} onChange={onChange} name={name} value={value} />\r\n        )}\r\n      />\r\n    }\r\n  />\r\n)\r\n\r\nconst ResetTimeLabel = styled.div`\r\n  grid-area: resetTimeLabel;\r\n`\r\n\r\nconst ResetTimeToggle = styled.div`\r\n  grid-area: resetTimeToggle;\r\n`\r\n\r\nconst ResetTimeOptions = styled.div`\r\n  grid-area: resetTimeOption;\r\n`\r\n\r\nconst RESET_TIME_OPTIONS = [\r\n  { label: '1 day', value: '1440' }, // 1 day x 24h x 60min\r\n  { label: '1 week', value: '10080' }, // 7 days x 24h x 60min\r\n  { label: '1 month', value: '43200' }, // 30 days x 24h x 60min\r\n]\r\n\r\nconst RINKEBY_RESET_TIME_OPTIONS = [\r\n  { label: '5 minutes', value: '5' },\r\n  { label: '30 minutes', value: '30' },\r\n  { label: '1 hour', value: '60' },\r\n]\r\n\r\nexport const getResetTimeOptions = (): RadioButtonOption[] => {\r\n  const currentNetwork = getNetworkName().toLowerCase()\r\n  return currentNetwork !== 'rinkeby' ? RESET_TIME_OPTIONS : RINKEBY_RESET_TIME_OPTIONS\r\n}\r\n\r\nconst ResetTime = (): ReactElement => {\r\n  const {\r\n    input: { value: withResetTime },\r\n  } = useField('withResetTime', { subscription: { value: true } })\r\n\r\n  const resetTimeOptions = getResetTimeOptions()\r\n\r\n  const switchExplanation = withResetTime ? 'choose reset time period' : 'one time'\r\n\r\n  return (\r\n    <>\r\n      <ResetTimeLabel>\r\n        <Text size=\"xl\">Set a reset time so the allowance automatically refills after the defined time period.</Text>\r\n      </ResetTimeLabel>\r\n      <ResetTimeToggle>\r\n        <Switch label={`Reset time (${switchExplanation})`} name=\"withResetTime\" />\r\n      </ResetTimeToggle>\r\n      {withResetTime && (\r\n        <ResetTimeOptions>\r\n          <SafeRadioButtons groupName=\"resetTime\" initialValue={resetTimeOptions[0].value} options={resetTimeOptions} />\r\n        </ResetTimeOptions>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ResetTime\r\n","export default __webpack_public_path__ + \"static/media/info_red.2d444d88.svg\";","export type ParametersStatus = 'ENABLED' | 'DISABLED' | 'SAFE_DISABLED' | 'ETH_HIDDEN' | 'CANCEL_TRANSACTION'\r\n\r\nexport const areEthereumParamsVisible = (parametersStatus: ParametersStatus): boolean => {\r\n  return (\r\n    parametersStatus === 'ENABLED' || (parametersStatus !== 'ETH_HIDDEN' && parametersStatus !== 'CANCEL_TRANSACTION')\r\n  )\r\n}\r\n\r\nexport const areSafeParamsEnabled = (parametersStatus: ParametersStatus): boolean => {\r\n  return (\r\n    parametersStatus === 'ENABLED' ||\r\n    (parametersStatus !== 'SAFE_DISABLED' && parametersStatus !== 'CANCEL_TRANSACTION')\r\n  )\r\n}\r\n\r\nexport const ethereumTxParametersTitle = (isExecution: boolean): string => {\r\n  return `Owner transaction ${isExecution ? '(Execution)' : '(On-chain approval)'}`\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Heading_heading__1kulm\",\"h1\":\"Heading_h1__80Cwi\",\"h2\":\"Heading_h2__2onFG\",\"h3\":\"Heading_h3__Sh3ak\",\"h4\":\"Heading_h4__20iR2\",\"center\":\"Heading_center__1Nck5\",\"right\":\"Heading_right__3RAhl\",\"truncate\":\"Heading_truncate__32_2T\",\"marginSm\":\"Heading_marginSm__2g6oz\",\"marginMd\":\"Heading_marginMd__1R4ww\",\"marginLg\":\"Heading_marginLg__3egwb\",\"marginXl\":\"Heading_marginXl__3saYd\",\"soft\":\"Heading_soft__U23-0\",\"medium\":\"Heading_medium__T5cU-\",\"dark\":\"Heading_dark__2HTrR\",\"fancy\":\"Heading_fancy__1opTo\",\"warning\":\"Heading_warning__3Bh_S\",\"primary\":\"Heading_primary__3K9By\",\"secondary\":\"Heading_secondary__IEaLO\",\"disabled\":\"Heading_disabled__3Rs0p\",\"error\":\"Heading_error__LFDiU\",\"white\":\"Heading_white__j6Vyr\"};","import { TextField as SRCTextField } from '@gnosis.pm/safe-react-components'\r\nimport React, { ReactElement } from 'react'\r\nimport { useField } from 'react-final-form'\r\nimport { useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\n\r\nimport GnoField from 'src/components/forms/Field'\r\nimport { composeValidators, minValue, mustBeFloat, required } from 'src/components/forms/validator'\r\nimport { extendedSafeTokensSelector } from 'src/routes/safe/container/selector'\r\nimport { useStyles } from 'src/routes/safe/components/Settings/SpendingLimit/style'\r\n\r\nexport const Field = styled(GnoField)`\r\n  margin: 8px 0;\r\n  width: 100%;\r\n`\r\n\r\nconst AmountInput = styled.div`\r\n  grid-area: amountInput;\r\n`\r\n\r\nconst TextField = styled(SRCTextField)`\r\n  margin: 0;\r\n`\r\n\r\nconst Amount = (): ReactElement => {\r\n  const classes = useStyles()\r\n\r\n  const {\r\n    input: { value: tokenAddress },\r\n  } = useField('token', { subscription: { value: true } })\r\n  const {\r\n    meta: { touched, visited },\r\n  } = useField('amount', { subscription: { touched: true, visited: true } })\r\n\r\n  const tokens = useSelector(extendedSafeTokensSelector)\r\n\r\n  const selectedTokenRecord = tokens.find((token) => token.address === tokenAddress)\r\n\r\n  const validate = (touched || visited) && composeValidators(required, mustBeFloat, minValue(0, false))\r\n\r\n  return (\r\n    <AmountInput>\r\n      <Field\r\n        component={TextField}\r\n        label=\"Amount*\"\r\n        name=\"amount\"\r\n        type=\"text\"\r\n        data-testid=\"amount-input\"\r\n        endAdornment={selectedTokenRecord?.symbol}\r\n        className={classes.amountInput}\r\n        validate={validate}\r\n      />\r\n    </AmountInput>\r\n  )\r\n}\r\n\r\nexport default Amount\r\n","import { Text } from '@gnosis.pm/safe-react-components'\r\nimport React, { ReactElement } from 'react'\r\n\r\ninterface GenericInfoProps {\r\n  title?: string\r\n  children: React.ReactNode\r\n}\r\n\r\nconst DataDisplay = ({ title, children }: GenericInfoProps): ReactElement => (\r\n  <>\r\n    {title && (\r\n      <Text size=\"md\" color=\"secondaryLight\">\r\n        {title}\r\n      </Text>\r\n    )}\r\n    {children}\r\n  </>\r\n)\r\n\r\nexport default DataDisplay\r\n","import { EthHashInfo } from '@gnosis.pm/safe-react-components'\r\nimport React, { ReactElement } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { getExplorerInfo } from 'src/config'\r\nimport { getNameFromAddressBookSelector } from 'src/logic/addressBook/store/selectors'\r\nimport { ADDRESS_BOOK_DEFAULT_NAME } from 'src/logic/addressBook/model/addressBook'\r\nimport { sameString } from 'src/utils/strings'\r\n\r\nimport DataDisplay from './DataDisplay'\r\n\r\ninterface AddressInfoProps {\r\n  address: string\r\n  title?: string\r\n}\r\n\r\nconst AddressInfo = ({ address, title }: AddressInfoProps): ReactElement => {\r\n  const name = useSelector((state) => getNameFromAddressBookSelector(state, { address }))\r\n  const explorerUrl = getExplorerInfo(address)\r\n\r\n  return (\r\n    <DataDisplay title={title}>\r\n      <EthHashInfo\r\n        hash={address}\r\n        name={sameString(name, ADDRESS_BOOK_DEFAULT_NAME) ? undefined : name}\r\n        showCopyBtn\r\n        showAvatar\r\n        textSize=\"lg\"\r\n        explorerUrl={explorerUrl}\r\n      />\r\n    </DataDisplay>\r\n  )\r\n}\r\n\r\nexport default AddressInfo\r\n","import { IconText, Text } from '@gnosis.pm/safe-react-components'\r\nimport React, { ReactElement } from 'react'\r\n\r\nimport Row from 'src/components/layout/Row'\r\n\r\nimport DataDisplay from './DataDisplay'\r\n\r\ninterface ResetTimeInfoProps {\r\n  title?: string\r\n  label?: string\r\n}\r\n\r\nconst ResetTimeInfo = ({ title, label }: ResetTimeInfoProps): ReactElement => {\r\n  return (\r\n    <DataDisplay title={title}>\r\n      {label ? (\r\n        <Row align=\"center\" margin=\"md\">\r\n          <IconText iconSize=\"md\" iconType=\"fuelIndicator\" text={label} textSize=\"lg\" />\r\n        </Row>\r\n      ) : (\r\n        <Row align=\"center\" margin=\"md\">\r\n          <Text size=\"lg\">One-time spending limit</Text>\r\n        </Row>\r\n      )}\r\n    </DataDisplay>\r\n  )\r\n}\r\n\r\nexport default ResetTimeInfo\r\n","import { Text } from '@gnosis.pm/safe-react-components'\r\nimport React, { ReactElement } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { Token } from 'src/logic/tokens/store/model/token'\r\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\r\n\r\nimport DataDisplay from './DataDisplay'\r\n\r\nconst StyledImage = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n  object-fit: contain;\r\n  margin: 0 8px 0 0;\r\n`\r\nconst StyledImageName = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\ninterface TokenInfoProps {\r\n  amount: string\r\n  title?: string\r\n  token: Token\r\n}\r\n\r\nconst TokenInfo = ({ amount, title, token }: TokenInfoProps): ReactElement => {\r\n  return (\r\n    <DataDisplay title={title}>\r\n      <StyledImageName>\r\n        <StyledImage alt={token.name} onError={setImageToPlaceholder} src={token.logoUri} />\r\n        <Text size=\"lg\">\r\n          {amount} {token.symbol}\r\n        </Text>\r\n      </StyledImageName>\r\n    </DataDisplay>\r\n  )\r\n}\r\n\r\nexport default TokenInfo\r\n","import { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { getUserNonce } from 'src/logic/wallets/ethTransactions'\r\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\r\nimport { getLastTx, getNewTxNonce } from 'src/logic/safe/store/actions/utils'\r\nimport { getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\r\nimport { safeSelector } from 'src/logic/safe/store/selectors'\r\nimport { web3ReadOnly as web3 } from 'src/logic/wallets/getWeb3'\r\nimport { ParametersStatus } from 'src/routes/safe/components/Transactions/helpers/utils'\r\nimport { sameString } from 'src/utils/strings'\r\n\r\nexport type TxParameters = {\r\n  safeNonce: string | undefined\r\n  setSafeNonce: (safeNonce: string | undefined) => void\r\n  safeTxGas: string | undefined\r\n  setSafeTxGas: (gas: string | undefined) => void\r\n  ethNonce: string | undefined\r\n  setEthNonce: (ethNonce: string | undefined) => void\r\n  ethGasLimit: string | undefined\r\n  setEthGasLimit: (ethGasLimit: string | undefined) => void\r\n  ethGasPrice: string | undefined\r\n  setEthGasPrice: (ethGasPrice: string | undefined) => void\r\n  ethGasPriceInGWei: string | undefined\r\n}\r\n\r\ntype Props = {\r\n  parameterStatus?: ParametersStatus\r\n  initialSafeNonce?: string\r\n  initialSafeTxGas?: string\r\n  initialEthGasLimit?: string\r\n  initialEthGasPrice?: string\r\n}\r\n\r\n/**\r\n * This hooks is used to store tx parameter\r\n * It needs to be initialized calling setGasEstimation.\r\n */\r\nexport const useTransactionParameters = (props?: Props): TxParameters => {\r\n  const isCancelTransaction = sameString(props?.parameterStatus || 'ENABLED', 'CANCEL_TRANSACTION')\r\n  const connectedWalletAddress = useSelector(userAccountSelector)\r\n  const { address: safeAddress } = useSelector(safeSelector) || {}\r\n\r\n  // Safe Params\r\n  const [safeNonce, setSafeNonce] = useState<string | undefined>(props?.initialSafeNonce)\r\n  // SafeTxGas: for a new Tx call requiredTxGas, for an existing tx get it from the backend.\r\n  const [safeTxGas, setSafeTxGas] = useState<string | undefined>(isCancelTransaction ? '0' : props?.initialSafeTxGas)\r\n\r\n  // ETH Params\r\n  const [ethNonce, setEthNonce] = useState<string | undefined>() // we delegate it to the wallet\r\n  const [ethGasLimit, setEthGasLimit] = useState<string | undefined>(props?.initialEthGasLimit) // call execTx until it returns a number > 0\r\n  const [ethGasPrice, setEthGasPrice] = useState<string | undefined>(props?.initialEthGasPrice) // get fast gas price\r\n  const [ethGasPriceInGWei, setEthGasPriceInGWei] = useState<string | undefined>() // get fast gas price\r\n\r\n  // Get nonce for connected wallet\r\n  useEffect(() => {\r\n    const getNonce = async () => {\r\n      const res = await getUserNonce(connectedWalletAddress)\r\n      setEthNonce(res.toString())\r\n    }\r\n\r\n    if (connectedWalletAddress) {\r\n      getNonce()\r\n    }\r\n  }, [connectedWalletAddress])\r\n\r\n  // Get ETH gas price\r\n  useEffect(() => {\r\n    if (!ethGasPrice) {\r\n      setEthGasPriceInGWei(undefined)\r\n      return\r\n    }\r\n    if (isCancelTransaction) {\r\n      setEthGasPrice('0')\r\n      return\r\n    }\r\n    setEthGasPriceInGWei(web3.utils.toWei(ethGasPrice, 'Gwei'))\r\n  }, [ethGasPrice, isCancelTransaction])\r\n\r\n  // Calc safe nonce\r\n  useEffect(() => {\r\n    const getSafeNonce = async () => {\r\n      if (safeAddress) {\r\n        const safeInstance = getGnosisSafeInstanceAt(safeAddress)\r\n        const lastTx = await getLastTx(safeAddress)\r\n        const nonce = await getNewTxNonce(lastTx, safeInstance)\r\n        setSafeNonce(nonce)\r\n      }\r\n    }\r\n\r\n    if (safeNonce === undefined) {\r\n      getSafeNonce()\r\n    }\r\n  }, [safeAddress, safeNonce])\r\n\r\n  return {\r\n    safeNonce,\r\n    setSafeNonce,\r\n    safeTxGas,\r\n    setSafeTxGas,\r\n    ethNonce,\r\n    setEthNonce,\r\n    ethGasLimit,\r\n    setEthGasLimit,\r\n    ethGasPrice,\r\n    setEthGasPrice,\r\n    ethGasPriceInGWei,\r\n  }\r\n}\r\n","import { useSelector } from 'react-redux'\r\n\r\nimport { Token } from 'src/logic/tokens/store/model/token'\r\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\r\nimport { safeKnownCoins } from 'src/routes/safe/container/selector'\r\n\r\nconst useTokenInfo = (address: string): Token | undefined => {\r\n  const tokens = useSelector(safeKnownCoins)\r\n\r\n  if (tokens) {\r\n    return tokens.find((token) => sameAddress(token.address, address))\r\n  }\r\n}\r\n\r\nexport default useTokenInfo\r\n","import { createStyles, makeStyles } from '@material-ui/core'\r\n\r\nimport { sm } from 'src/theme/variables'\r\n\r\nexport const useSelectedTokenStyles = makeStyles(\r\n  createStyles({\r\n    container: {\r\n      minHeight: '55px',\r\n      padding: 0,\r\n      width: '100%',\r\n    },\r\n    tokenData: {\r\n      padding: 0,\r\n      margin: 0,\r\n      lineHeight: '14px',\r\n    },\r\n    tokenImage: {\r\n      marginRight: sm,\r\n    },\r\n  }),\r\n)\r\n\r\nexport const useSelectStyles = makeStyles(\r\n  createStyles({\r\n    selectMenu: {\r\n      paddingRight: 0,\r\n    },\r\n  }),\r\n)\r\n","import { Text } from '@gnosis.pm/safe-react-components'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport { List } from 'immutable'\r\nimport React, { ReactElement } from 'react'\r\n\r\nimport Field from 'src/components/forms/Field'\r\nimport SelectField from 'src/components/forms/SelectField'\r\nimport { required } from 'src/components/forms/validator'\r\nimport Img from 'src/components/layout/Img'\r\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\r\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\r\nimport { Token } from 'src/logic/tokens/store/model/token'\r\n\r\nimport { useSelectStyles, useSelectedTokenStyles } from './style'\r\n\r\ninterface SelectTokenProps {\r\n  tokenAddress: string\r\n  tokens: List<Token>\r\n}\r\n\r\nconst SelectedToken = ({ tokenAddress, tokens }: SelectTokenProps): ReactElement => {\r\n  const classes = useSelectedTokenStyles()\r\n  const token = tokens.find(({ address }) => address === tokenAddress)\r\n\r\n  return (\r\n    <MenuItem className={classes.container}>\r\n      {token ? (\r\n        <>\r\n          <ListItemIcon className={classes.tokenImage}>\r\n            <Img alt={token.name} height={28} onError={setImageToPlaceholder} src={token.logoUri} />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            className={classes.tokenData}\r\n            primary={token.name}\r\n            secondary={`${formatAmount(token.balance?.tokenBalance.toString() ?? '0')} ${token.symbol}`}\r\n          />\r\n        </>\r\n      ) : (\r\n        <Text color=\"placeHolder\" size=\"xl\">\r\n          Select an asset*\r\n        </Text>\r\n      )}\r\n    </MenuItem>\r\n  )\r\n}\r\n\r\ninterface TokenSelectFieldProps {\r\n  initialValue?: string\r\n  isValid?: boolean\r\n  tokens: List<Token>\r\n}\r\n\r\nconst TokenSelectField = ({ initialValue, isValid = true, tokens }: TokenSelectFieldProps): ReactElement => {\r\n  const classes = useSelectStyles()\r\n\r\n  return (\r\n    <Field\r\n      classes={{ selectMenu: classes.selectMenu }}\r\n      className={isValid ? 'isValid' : 'isInvalid'}\r\n      component={SelectField}\r\n      displayEmpty\r\n      initialValue={initialValue}\r\n      name=\"token\"\r\n      renderValue={(tokenAddress) => <SelectedToken tokenAddress={tokenAddress} tokens={tokens} />}\r\n      validate={required}\r\n    >\r\n      {tokens.map((token) => (\r\n        <MenuItem key={token.address} value={token.address}>\r\n          <ListItemIcon>\r\n            <Img alt={token.name} height={28} onError={setImageToPlaceholder} src={token.logoUri} />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={token.name}\r\n            secondary={`${formatAmount(token.balance?.tokenBalance.toString() ?? '0')} ${token.symbol}`}\r\n            data-testid={`select-token-${token.name}`}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </Field>\r\n  )\r\n}\r\n\r\nexport default TokenSelectField\r\n","import { List } from 'immutable'\r\nimport { TableColumn } from 'src/components/Table/types.d'\r\nimport { ModulePair } from 'src/logic/safe/store/models/safe'\r\n\r\nexport const MODULES_TABLE_ADDRESS_ID = 'address'\r\nexport const MODULES_TABLE_ACTIONS_ID = 'actions'\r\n\r\nexport type ModuleAddressColumn = { [MODULES_TABLE_ADDRESS_ID]: ModulePair }[]\r\n\r\nexport const getModuleData = (modulesList: ModulePair[] | null): ModuleAddressColumn | undefined => {\r\n  return modulesList?.map((modules) => ({\r\n    [MODULES_TABLE_ADDRESS_ID]: modules,\r\n  }))\r\n}\r\n\r\nexport const generateColumns = (): List<TableColumn> => {\r\n  const addressColumn: TableColumn = {\r\n    align: 'left',\r\n    custom: false,\r\n    disablePadding: false,\r\n    id: MODULES_TABLE_ADDRESS_ID,\r\n    label: 'Address',\r\n    order: false,\r\n  }\r\n\r\n  const actionsColumn: TableColumn = {\r\n    custom: true,\r\n    disablePadding: false,\r\n    id: MODULES_TABLE_ACTIONS_ID,\r\n    label: '',\r\n    order: false,\r\n  }\r\n\r\n  return List([addressColumn, actionsColumn])\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core'\r\n\r\nimport { background, lg, md, sm } from 'src/theme/variables'\r\n\r\nexport const useStyles = makeStyles(\r\n  createStyles({\r\n    container: {\r\n      padding: lg,\r\n    },\r\n    hide: {\r\n      '&:hover': {\r\n        backgroundColor: '#f7f5f5',\r\n      },\r\n      '&:hover $actions': {\r\n        visibility: 'initial',\r\n      },\r\n    },\r\n    actions: {\r\n      justifyContent: 'flex-end',\r\n      visibility: 'hidden',\r\n      minWidth: '100px',\r\n    },\r\n    noBorderBottom: {\r\n      '& > td': {\r\n        borderBottom: 'none',\r\n      },\r\n    },\r\n    modalHeading: {\r\n      boxSizing: 'border-box',\r\n      justifyContent: 'space-between',\r\n      height: '74px',\r\n      padding: `${sm} ${lg}`,\r\n    },\r\n    modalManage: {\r\n      fontSize: lg,\r\n    },\r\n    modalClose: {\r\n      height: '35px',\r\n      width: '35px',\r\n    },\r\n    modalOwner: {\r\n      padding: md,\r\n      alignItems: 'center',\r\n    },\r\n    modalDescription: {\r\n      padding: md,\r\n    },\r\n    accordionContainer: {\r\n      margin: `0 ${md}`,\r\n    },\r\n    gasCostsContainer: {\r\n      backgroundColor: background,\r\n      padding: `0 ${lg}`,\r\n    },\r\n  }),\r\n)\r\n","import { EthHashInfo } from '@gnosis.pm/safe-react-components'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Close from '@material-ui/icons/Close'\r\nimport cn from 'classnames'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Block from 'src/components/layout/Block'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport Modal, { ButtonStatus, Modal as GenericModal } from 'src/components/Modal'\r\nimport { getExplorerInfo } from 'src/config'\r\nimport { getDisableModuleTxData } from 'src/logic/safe/utils/modules'\r\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\r\n\r\nimport { ModulePair } from 'src/logic/safe/store/models/safe'\r\nimport { safeParamAddressFromStateSelector } from 'src/logic/safe/store/selectors'\r\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\r\n\r\nimport { useStyles } from './style'\r\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\r\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\r\nimport { TransactionFees } from 'src/components/TransactionsFees'\r\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\r\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\r\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\r\n\r\ninterface RemoveModuleModalProps {\r\n  onClose: () => void\r\n  selectedModulePair: ModulePair\r\n}\r\n\r\nexport const RemoveModuleModal = ({ onClose, selectedModulePair }: RemoveModuleModalProps): React.ReactElement => {\r\n  const classes = useStyles()\r\n\r\n  const safeAddress = useSelector(safeParamAddressFromStateSelector)\r\n  const [txData, setTxData] = useState('')\r\n  const dispatch = useDispatch()\r\n  const [manualSafeTxGas, setManualSafeTxGas] = useState(0)\r\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\r\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\r\n\r\n  const [, moduleAddress] = selectedModulePair\r\n\r\n  const {\r\n    gasCostFormatted,\r\n    txEstimationExecutionStatus,\r\n    isExecution,\r\n    isOffChainSignature,\r\n    isCreation,\r\n    gasLimit,\r\n    gasEstimation,\r\n    gasPriceFormatted,\r\n  } = useEstimateTransactionGas({\r\n    txData,\r\n    txRecipient: safeAddress,\r\n    txAmount: '0',\r\n    safeTxGas: manualSafeTxGas,\r\n    manualGasPrice,\r\n    manualGasLimit,\r\n  })\r\n\r\n  const [buttonStatus] = useEstimationStatus(txEstimationExecutionStatus)\r\n\r\n  useEffect(() => {\r\n    const txData = getDisableModuleTxData(selectedModulePair, safeAddress)\r\n    setTxData(txData)\r\n  }, [selectedModulePair, safeAddress])\r\n\r\n  const removeSelectedModule = async (txParameters: TxParameters): Promise<void> => {\r\n    try {\r\n      await dispatch(\r\n        createTransaction({\r\n          safeAddress,\r\n          to: safeAddress,\r\n          valueInWei: '0',\r\n          txData,\r\n          txNonce: txParameters.safeNonce,\r\n          safeTxGas: txParameters.safeTxGas ? Number(txParameters.safeTxGas) : undefined,\r\n          ethParameters: txParameters,\r\n          notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\r\n        }),\r\n      )\r\n    } catch (e) {\r\n      console.error(`failed to remove the module ${selectedModulePair}`, e.message)\r\n    }\r\n  }\r\n\r\n  const closeEditModalCallback = (txParameters: TxParameters) => {\r\n    const oldGasPrice = Number(gasPriceFormatted)\r\n    const newGasPrice = Number(txParameters.ethGasPrice)\r\n    const oldSafeTxGas = Number(gasEstimation)\r\n    const newSafeTxGas = Number(txParameters.safeTxGas)\r\n\r\n    if (newGasPrice && oldGasPrice !== newGasPrice) {\r\n      setManualGasPrice(txParameters.ethGasPrice)\r\n    }\r\n\r\n    if (txParameters.ethGasLimit && gasLimit !== txParameters.ethGasLimit) {\r\n      setManualGasLimit(txParameters.ethGasLimit)\r\n    }\r\n\r\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\r\n      setManualSafeTxGas(newSafeTxGas)\r\n    }\r\n  }\r\n\r\n  let confirmButtonText = 'Remove'\r\n  if (ButtonStatus.LOADING === buttonStatus) {\r\n    confirmButtonText = txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : 'Removing'\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      description=\"Remove the selected Module\"\r\n      handleClose={onClose}\r\n      paperClassName=\"modal\"\r\n      title=\"Remove Module\"\r\n      open\r\n    >\r\n      <EditableTxParameters\r\n        isOffChainSignature={isOffChainSignature}\r\n        isExecution={isExecution}\r\n        ethGasLimit={gasLimit}\r\n        ethGasPrice={gasPriceFormatted}\r\n        safeTxGas={gasEstimation.toString()}\r\n        closeEditModalCallback={closeEditModalCallback}\r\n      >\r\n        {(txParameters, toggleEditMode) => {\r\n          return (\r\n            <>\r\n              <Row align=\"center\" className={classes.modalHeading} grow>\r\n                <Paragraph className={classes.modalManage} noMargin weight=\"bolder\">\r\n                  Remove module\r\n                </Paragraph>\r\n                <IconButton disableRipple onClick={onClose}>\r\n                  <Close className={classes.modalClose} />\r\n                </IconButton>\r\n              </Row>\r\n              <Hairline />\r\n              <Block>\r\n                <Row className={classes.modalOwner}>\r\n                  <Col align=\"center\" xs={1}>\r\n                    <EthHashInfo\r\n                      hash={moduleAddress}\r\n                      showCopyBtn\r\n                      showAvatar\r\n                      explorerUrl={getExplorerInfo(moduleAddress)}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className={classes.modalDescription}>\r\n                  <Paragraph noMargin size=\"lg\">\r\n                    After removing this module, any feature or app that uses this module might no longer work. If this\r\n                    Safe requires more then one signature, the module removal will have to be confirmed by other owners\r\n                    as well.\r\n                  </Paragraph>\r\n                </Row>\r\n              </Block>\r\n              <Block className={classes.accordionContainer}>\r\n                {/* Tx Parameters */}\r\n                <TxParametersDetail\r\n                  txParameters={txParameters}\r\n                  onEdit={toggleEditMode}\r\n                  isTransactionCreation={isCreation}\r\n                  isTransactionExecution={isExecution}\r\n                  isOffChainSignature={isOffChainSignature}\r\n                />\r\n              </Block>\r\n              <Row className={cn(classes.modalDescription, classes.gasCostsContainer)}>\r\n                <TransactionFees\r\n                  gasCostFormatted={gasCostFormatted}\r\n                  isExecution={isExecution}\r\n                  isCreation={isCreation}\r\n                  isOffChainSignature={isOffChainSignature}\r\n                  txEstimationExecutionStatus={txEstimationExecutionStatus}\r\n                />\r\n              </Row>\r\n              <GenericModal.Footer withoutBorder={buttonStatus !== ButtonStatus.LOADING}>\r\n                <GenericModal.Footer.Buttons\r\n                  cancelButtonProps={{ onClick: onClose }}\r\n                  confirmButtonProps={{\r\n                    color: 'error',\r\n                    onClick: () => removeSelectedModule(txParameters),\r\n                    status: buttonStatus,\r\n                    text: confirmButtonText,\r\n                  }}\r\n                />\r\n              </GenericModal.Footer>\r\n            </>\r\n          )\r\n        }}\r\n      </EditableTxParameters>\r\n    </Modal>\r\n  )\r\n}\r\n","import { Button, EthHashInfo } from '@gnosis.pm/safe-react-components'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport styled from 'styled-components'\r\nimport cn from 'classnames'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { generateColumns, ModuleAddressColumn, MODULES_TABLE_ADDRESS_ID } from './dataFetcher'\r\nimport { RemoveModuleModal } from './RemoveModuleModal'\r\nimport { useStyles } from './style'\r\n\r\nimport { grantedSelector } from 'src/routes/safe/container/selector'\r\nimport { ModulePair } from 'src/logic/safe/store/models/safe'\r\nimport Table from 'src/components/Table'\r\nimport { TableCell, TableRow } from 'src/components/layout/Table'\r\nimport Block from 'src/components/layout/Block'\r\nimport Row from 'src/components/layout/Row'\r\nimport { getExplorerInfo } from 'src/config'\r\n\r\nconst REMOVE_MODULE_BTN_TEST_ID = 'remove-module-btn'\r\nconst MODULES_ROW_TEST_ID = 'owners-row'\r\n\r\nconst TableActionButton = styled(Button)`\r\n  background-color: transparent;\r\n\r\n  &:hover {\r\n    background-color: transparent;\r\n  }\r\n`\r\n\r\ninterface ModulesTableProps {\r\n  moduleData: ModuleAddressColumn | null\r\n}\r\n\r\nexport const ModulesTable = ({ moduleData }: ModulesTableProps): React.ReactElement => {\r\n  const classes = useStyles()\r\n\r\n  const columns = generateColumns()\r\n  const autoColumns = columns.filter(({ custom }) => !custom)\r\n\r\n  const granted = useSelector(grantedSelector)\r\n\r\n  const [viewRemoveModuleModal, setViewRemoveModuleModal] = React.useState(false)\r\n  const hideRemoveModuleModal = () => setViewRemoveModuleModal(false)\r\n\r\n  const [selectedModulePair, setSelectedModulePair] = React.useState<ModulePair>()\r\n  const triggerRemoveSelectedModule = (modulePair: ModulePair): void => {\r\n    setSelectedModulePair(modulePair)\r\n    setViewRemoveModuleModal(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TableContainer>\r\n        <Table\r\n          columns={columns}\r\n          data={moduleData}\r\n          defaultFixed\r\n          defaultOrderBy={MODULES_TABLE_ADDRESS_ID}\r\n          disablePagination\r\n          label=\"Modules\"\r\n          noBorder\r\n          size={moduleData?.length}\r\n        >\r\n          {(sortedData) =>\r\n            sortedData.map((row, index) => (\r\n              <TableRow\r\n                className={cn(classes.hide, index >= 3 && index === sortedData.size - 1 && classes.noBorderBottom)}\r\n                data-testid={MODULES_ROW_TEST_ID}\r\n                key={index}\r\n                tabIndex={-1}\r\n              >\r\n                {autoColumns.map((column, index) => {\r\n                  const columnId = column.id\r\n                  const rowElement = row[columnId]\r\n                  const [, moduleAddress] = rowElement\r\n\r\n                  return (\r\n                    <React.Fragment key={`${columnId}-${index}`}>\r\n                      <TableCell align={column.align} component=\"td\" key={columnId}>\r\n                        {columnId === MODULES_TABLE_ADDRESS_ID ? (\r\n                          <Block justify=\"left\">\r\n                            <EthHashInfo\r\n                              hash={moduleAddress}\r\n                              showCopyBtn\r\n                              showAvatar\r\n                              explorerUrl={getExplorerInfo(moduleAddress)}\r\n                            />\r\n                          </Block>\r\n                        ) : (\r\n                          rowElement\r\n                        )}\r\n                      </TableCell>\r\n                      <TableCell component=\"td\">\r\n                        <Row align=\"end\" className={classes.actions}>\r\n                          {granted && (\r\n                            <TableActionButton\r\n                              size=\"md\"\r\n                              iconType=\"delete\"\r\n                              color=\"error\"\r\n                              variant=\"outlined\"\r\n                              onClick={() => triggerRemoveSelectedModule(rowElement)}\r\n                              data-testid={REMOVE_MODULE_BTN_TEST_ID}\r\n                            >\r\n                              {null}\r\n                            </TableActionButton>\r\n                          )}\r\n                        </Row>\r\n                      </TableCell>\r\n                    </React.Fragment>\r\n                  )\r\n                })}\r\n              </TableRow>\r\n            ))\r\n          }\r\n        </Table>\r\n      </TableContainer>\r\n      {viewRemoveModuleModal && selectedModulePair && (\r\n        <RemoveModuleModal onClose={hideRemoveModuleModal} selectedModulePair={selectedModulePair} />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import { Text, theme, Title } from '@gnosis.pm/safe-react-components'\r\nimport React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\n\r\nimport { getModuleData } from './dataFetcher'\r\nimport { useStyles } from './style'\r\nimport { ModulesTable } from './ModulesTable'\r\n\r\nimport Block from 'src/components/layout/Block'\r\nimport { safeModulesSelector, safeNonceSelector } from 'src/logic/safe/store/selectors'\r\nimport { useAnalytics, SAFE_NAVIGATION_EVENT } from 'src/utils/googleAnalytics'\r\n\r\nconst InfoText = styled(Text)`\r\n  margin-top: 16px;\r\n`\r\n\r\nconst Bold = styled.strong`\r\n  color: ${theme.colors.text};\r\n`\r\n\r\nconst NoModuleLegend = (): React.ReactElement => (\r\n  <InfoText color=\"secondaryLight\" size=\"xl\">\r\n    No modules enabled\r\n  </InfoText>\r\n)\r\n\r\nexport const Advanced = (): React.ReactElement => {\r\n  const classes = useStyles()\r\n  const nonce = useSelector(safeNonceSelector)\r\n  const modules = useSelector(safeModulesSelector)\r\n  const moduleData = modules ? getModuleData(modules) ?? null : null\r\n  const { trackEvent } = useAnalytics()\r\n\r\n  useEffect(() => {\r\n    trackEvent({ category: SAFE_NAVIGATION_EVENT, action: 'Settings', label: 'Advanced' })\r\n  }, [trackEvent])\r\n\r\n  return (\r\n    <>\r\n      {/* Nonce */}\r\n      <Block className={classes.container}>\r\n        <Title size=\"xs\" withoutMargin>\r\n          Safe Nonce\r\n        </Title>\r\n        <InfoText size=\"lg\">\r\n          For security reasons, transactions made with Gnosis Safe need to be executed in order. The nonce shows you\r\n          which transaction will be executed next. You can find the nonce for a transaction in the transaction details.\r\n        </InfoText>\r\n        <InfoText color=\"secondaryLight\" size=\"xl\">\r\n          Current Nonce: <Bold>{nonce}</Bold>\r\n        </InfoText>\r\n      </Block>\r\n\r\n      {/* Modules */}\r\n      <Block className={classes.container}>\r\n        <Title size=\"xs\" withoutMargin>\r\n          Safe Modules\r\n        </Title>\r\n        <InfoText size=\"lg\">\r\n          Modules allow you to customize the access-control logic of your Safe. Modules are potentially risky, so make\r\n          sure to only use modules from trusted sources. Learn more about modules{' '}\r\n          <a\r\n            href=\"https://docs.gnosis.io/safe/docs/contracts_architecture/#3-module-management\"\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n          >\r\n            here\r\n          </a>\r\n          .\r\n        </InfoText>\r\n\r\n        {!moduleData || !moduleData.length ? <NoModuleLegend /> : <ModulesTable moduleData={moduleData} />}\r\n      </Block>\r\n    </>\r\n  )\r\n}\r\n","import cn from 'classnames'\r\nimport React, { ReactElement, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Col from 'src/components/layout/Col'\r\nimport Row from 'src/components/layout/Row'\r\nimport { ButtonStatus, Modal } from 'src/components/Modal'\r\nimport { TransactionFees } from 'src/components/TransactionsFees'\r\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\r\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\r\nimport useTokenInfo from 'src/logic/safe/hooks/useTokenInfo'\r\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\r\nimport { safeParamAddressFromStateSelector } from 'src/logic/safe/store/selectors'\r\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\r\nimport { getDeleteAllowanceTxData } from 'src/logic/safe/utils/spendingLimits'\r\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\r\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\r\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\r\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\r\nimport { SPENDING_LIMIT_MODULE_ADDRESS } from 'src/utils/constants'\r\n\r\nimport { getResetTimeOptions } from './FormFields/ResetTime'\r\nimport { AddressInfo, ResetTimeInfo, TokenInfo } from './InfoDisplay'\r\nimport { SpendingLimitTable } from './LimitsTable/dataFetcher'\r\nimport { useStyles } from './style'\r\n\r\ninterface RemoveSpendingLimitModalProps {\r\n  onClose: () => void\r\n  spendingLimit: SpendingLimitTable\r\n  open: boolean\r\n}\r\n\r\nexport const RemoveLimitModal = ({ onClose, spendingLimit, open }: RemoveSpendingLimitModalProps): ReactElement => {\r\n  const classes = useStyles()\r\n\r\n  const tokenInfo = useTokenInfo(spendingLimit.spent.tokenAddress)\r\n\r\n  const safeAddress = useSelector(safeParamAddressFromStateSelector)\r\n  const [txData, setTxData] = useState('')\r\n  const dispatch = useDispatch()\r\n  const [manualSafeTxGas, setManualSafeTxGas] = useState(0)\r\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\r\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\r\n\r\n  useEffect(() => {\r\n    const {\r\n      beneficiary,\r\n      spent: { tokenAddress },\r\n    } = spendingLimit\r\n    const txData = getDeleteAllowanceTxData({ beneficiary, tokenAddress })\r\n    setTxData(txData)\r\n  }, [spendingLimit])\r\n\r\n  const {\r\n    gasCostFormatted,\r\n    txEstimationExecutionStatus,\r\n    isExecution,\r\n    isOffChainSignature,\r\n    isCreation,\r\n    gasLimit,\r\n    gasEstimation,\r\n    gasPriceFormatted,\r\n  } = useEstimateTransactionGas({\r\n    txData,\r\n    txRecipient: SPENDING_LIMIT_MODULE_ADDRESS,\r\n    txAmount: '0',\r\n    safeTxGas: manualSafeTxGas,\r\n    manualGasPrice,\r\n    manualGasLimit,\r\n  })\r\n\r\n  const [buttonStatus] = useEstimationStatus(txEstimationExecutionStatus)\r\n\r\n  const removeSelectedSpendingLimit = (txParameters: TxParameters) => {\r\n    try {\r\n      dispatch(\r\n        createTransaction({\r\n          safeAddress,\r\n          to: SPENDING_LIMIT_MODULE_ADDRESS,\r\n          valueInWei: '0',\r\n          txData,\r\n          txNonce: txParameters.safeNonce,\r\n          safeTxGas: txParameters.safeTxGas ? Number(txParameters.safeTxGas) : undefined,\r\n          ethParameters: txParameters,\r\n          notifiedTransaction: TX_NOTIFICATION_TYPES.REMOVE_SPENDING_LIMIT_TX,\r\n        }),\r\n      )\r\n    } catch (e) {\r\n      console.error(\r\n        `failed to remove spending limit ${spendingLimit.beneficiary} -> ${spendingLimit.spent.tokenAddress}`,\r\n        e.message,\r\n      )\r\n    }\r\n  }\r\n\r\n  const resetTimeLabel =\r\n    getResetTimeOptions().find(({ value }) => +value === +spendingLimit.resetTime.resetTimeMin)?.label ?? ''\r\n\r\n  const closeEditModalCallback = (txParameters: TxParameters) => {\r\n    const oldGasPrice = Number(gasPriceFormatted)\r\n    const newGasPrice = Number(txParameters.ethGasPrice)\r\n    const oldSafeTxGas = Number(gasEstimation)\r\n    const newSafeTxGas = Number(txParameters.safeTxGas)\r\n\r\n    if (newGasPrice && oldGasPrice !== newGasPrice) {\r\n      setManualGasPrice(txParameters.ethGasPrice)\r\n    }\r\n\r\n    if (txParameters.ethGasLimit && gasLimit !== txParameters.ethGasLimit) {\r\n      setManualGasLimit(txParameters.ethGasLimit)\r\n    }\r\n\r\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\r\n      setManualSafeTxGas(newSafeTxGas)\r\n    }\r\n  }\r\n\r\n  let confirmButtonText = 'Remove'\r\n  if (ButtonStatus.LOADING === buttonStatus) {\r\n    confirmButtonText = txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : 'Removing'\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      handleClose={onClose}\r\n      open={open}\r\n      title=\"Remove spending limit\"\r\n      description=\"Remove the selected spending limit\"\r\n    >\r\n      <EditableTxParameters\r\n        isOffChainSignature={isOffChainSignature}\r\n        isExecution={isExecution}\r\n        ethGasLimit={gasLimit}\r\n        ethGasPrice={gasPriceFormatted}\r\n        safeTxGas={gasEstimation.toString()}\r\n        closeEditModalCallback={closeEditModalCallback}\r\n      >\r\n        {(txParameters, toggleEditMode) => {\r\n          return (\r\n            <>\r\n              <Modal.Header onClose={onClose}>\r\n                <Modal.Header.Title size=\"xs\" withoutMargin>\r\n                  Remove spending limit\r\n                </Modal.Header.Title>\r\n              </Modal.Header>\r\n\r\n              <Modal.Body>\r\n                <Col margin=\"lg\">\r\n                  <AddressInfo title=\"Beneficiary\" address={spendingLimit.beneficiary} />\r\n                </Col>\r\n                <Col margin=\"lg\">\r\n                  {tokenInfo && (\r\n                    <TokenInfo\r\n                      amount={fromTokenUnit(spendingLimit.spent.amount, tokenInfo.decimals)}\r\n                      title=\"Amount\"\r\n                      token={tokenInfo}\r\n                    />\r\n                  )}\r\n                </Col>\r\n                <Col margin=\"lg\">\r\n                  <ResetTimeInfo title=\"Reset Time\" label={resetTimeLabel} />\r\n                </Col>\r\n                {/* Tx Parameters */}\r\n                <TxParametersDetail\r\n                  txParameters={txParameters}\r\n                  onEdit={toggleEditMode}\r\n                  isTransactionCreation={isCreation}\r\n                  isTransactionExecution={isExecution}\r\n                  isOffChainSignature={isOffChainSignature}\r\n                />\r\n              </Modal.Body>\r\n\r\n              <Row className={cn(classes.modalDescription, classes.gasCostsContainer)}>\r\n                <TransactionFees\r\n                  gasCostFormatted={gasCostFormatted}\r\n                  isExecution={isExecution}\r\n                  isCreation={isCreation}\r\n                  isOffChainSignature={isOffChainSignature}\r\n                  txEstimationExecutionStatus={txEstimationExecutionStatus}\r\n                />\r\n              </Row>\r\n\r\n              <Modal.Footer withoutBorder={buttonStatus !== ButtonStatus.LOADING}>\r\n                <Modal.Footer.Buttons\r\n                  cancelButtonProps={{ onClick: onClose }}\r\n                  confirmButtonProps={{\r\n                    color: 'error',\r\n                    onClick: () => removeSelectedSpendingLimit(txParameters),\r\n                    status: buttonStatus,\r\n                    text: confirmButtonText,\r\n                  }}\r\n                />\r\n              </Modal.Footer>\r\n            </>\r\n          )\r\n        }}\r\n      </EditableTxParameters>\r\n    </Modal>\r\n  )\r\n}\r\n","import { List } from 'immutable'\r\n\r\nimport { TableColumn } from 'src/components/Table/types.d'\r\nimport { SpendingLimitRow } from 'src/logic/safe/utils/spendingLimits'\r\nimport { relativeTime } from 'src/utils/date'\r\n\r\nexport const SPENDING_LIMIT_TABLE_BENEFICIARY_ID = 'beneficiary'\r\nexport const SPENDING_LIMIT_TABLE_SPENT_ID = 'spent'\r\nexport const SPENDING_LIMIT_TABLE_RESET_TIME_ID = 'resetTime'\r\nexport const SPENDING_LIMIT_TABLE_ACTION_ID = 'action'\r\n\r\nexport type SpendingLimitTable = {\r\n  [SPENDING_LIMIT_TABLE_BENEFICIARY_ID]: string\r\n  [SPENDING_LIMIT_TABLE_SPENT_ID]: {\r\n    spent: string\r\n    amount: string\r\n    tokenAddress: string\r\n  }\r\n  [SPENDING_LIMIT_TABLE_RESET_TIME_ID]: {\r\n    relativeTime: string\r\n    lastResetMin: string\r\n    resetTimeMin: string\r\n  }\r\n}\r\n\r\nexport const getSpendingLimitData = (spendingLimits?: SpendingLimitRow[] | null): SpendingLimitTable[] | undefined =>\r\n  spendingLimits?.map((spendingLimit) => ({\r\n    [SPENDING_LIMIT_TABLE_BENEFICIARY_ID]: spendingLimit.delegate,\r\n    [SPENDING_LIMIT_TABLE_SPENT_ID]: {\r\n      spent: spendingLimit.spent,\r\n      amount: spendingLimit.amount,\r\n      tokenAddress: spendingLimit.token,\r\n    },\r\n    [SPENDING_LIMIT_TABLE_RESET_TIME_ID]: {\r\n      relativeTime: relativeTime(spendingLimit.lastResetMin, spendingLimit.resetTimeMin),\r\n      lastResetMin: spendingLimit.lastResetMin,\r\n      resetTimeMin: spendingLimit.resetTimeMin,\r\n    },\r\n  }))\r\n\r\nexport const generateColumns = (): List<TableColumn> => {\r\n  const beneficiaryColumn: TableColumn = {\r\n    align: 'left',\r\n    custom: false,\r\n    disablePadding: false,\r\n    id: SPENDING_LIMIT_TABLE_BENEFICIARY_ID,\r\n    label: 'Beneficiary',\r\n    order: false,\r\n  }\r\n\r\n  const spentColumn: TableColumn = {\r\n    align: 'left',\r\n    custom: false,\r\n    disablePadding: false,\r\n    id: SPENDING_LIMIT_TABLE_SPENT_ID,\r\n    label: 'Spent',\r\n    order: false,\r\n    static: true,\r\n  }\r\n\r\n  const resetColumn: TableColumn = {\r\n    align: 'left',\r\n    custom: false,\r\n    disablePadding: false,\r\n    id: SPENDING_LIMIT_TABLE_RESET_TIME_ID,\r\n    label: 'Reset Time',\r\n    order: false,\r\n    static: true,\r\n  }\r\n\r\n  const actionsColumn: TableColumn = {\r\n    custom: true,\r\n    disablePadding: false,\r\n    id: SPENDING_LIMIT_TABLE_ACTION_ID,\r\n    label: '',\r\n    order: false,\r\n  }\r\n\r\n  return List([beneficiaryColumn, spentColumn, resetColumn, actionsColumn])\r\n}\r\n","import { useState, useEffect } from 'react'\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window\r\n  return {\r\n    width,\r\n    height,\r\n  }\r\n}\r\n\r\nexport const useWindowDimensions = (): { width: number; height: number } => {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions())\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions())\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize)\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, [])\r\n\r\n  return windowDimensions\r\n}\r\n","import axios from 'axios'\r\nimport { getTxServiceUrl } from 'src/config'\r\nimport memoize from 'lodash.memoize'\r\n\r\nexport enum MasterCopyDeployer {\r\n  GNOSIS = 'Gnosis',\r\n  CIRCLES = 'Circles',\r\n}\r\n\r\ntype MasterCopyFetch = {\r\n  address: string\r\n  version: string\r\n}\r\n\r\nexport type MasterCopy = {\r\n  address: string\r\n  version: string\r\n  deployer: MasterCopyDeployer\r\n  deployerRepoUrl: string\r\n}\r\n\r\nconst extractMasterCopyInfo = (mc: MasterCopyFetch): MasterCopy => {\r\n  const isCircles = mc.version.toLowerCase().includes(MasterCopyDeployer.CIRCLES.toLowerCase())\r\n  const dashIndex = mc.version.indexOf('-')\r\n\r\n  const masterCopy = {\r\n    address: mc.address,\r\n    version: !isCircles ? mc.version : mc.version.substring(0, dashIndex),\r\n    deployer: !isCircles ? MasterCopyDeployer.GNOSIS : MasterCopyDeployer.CIRCLES,\r\n    deployerRepoUrl: !isCircles\r\n      ? 'https://github.com/gnosis/safe-contracts/releases'\r\n      : 'https://github.com/CirclesUBI/safe-contracts/releases',\r\n  }\r\n  return masterCopy\r\n}\r\n\r\nexport const fetchMasterCopies = memoize(\r\n  async (): Promise<MasterCopy[] | undefined> => {\r\n    const url = `${getTxServiceUrl()}/about/master-copies/`\r\n    try {\r\n      const res = await axios.get<{ address: string; version: string }[]>(url)\r\n      return res.data.map(extractMasterCopyInfo)\r\n    } catch (error) {\r\n      console.error('Fetching data from master-copies errored', error)\r\n    }\r\n  },\r\n)\r\n","import { Text } from '@gnosis.pm/safe-react-components'\r\nimport React, { ReactElement, useMemo } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { Token } from 'src/logic/tokens/store/model/token'\r\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\r\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\r\nimport useTokenInfo from 'src/logic/safe/hooks/useTokenInfo'\r\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\r\nimport { useWindowDimensions } from 'src/logic/hooks/useWindowDimensions'\r\n\r\nconst StyledImage = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n  object-fit: contain;\r\n  margin: 0 8px 0 0;\r\n`\r\n\r\nconst StyledImageName = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\ntype FormattedAmountsProps = { amount: string; spent: string; tokenInfo?: Token }\r\n\r\ntype FormattedAmounts = { amount: string; spent: string }\r\n\r\nconst useFormattedAmounts = ({ amount, spent, tokenInfo }: FormattedAmountsProps): FormattedAmounts | undefined => {\r\n  return useMemo(() => {\r\n    if (tokenInfo) {\r\n      const formattedSpent = formatAmount(fromTokenUnit(spent, tokenInfo.decimals)).toString()\r\n      const formattedAmount = formatAmount(fromTokenUnit(amount, tokenInfo.decimals)).toString()\r\n      return { amount: formattedAmount, spent: formattedSpent }\r\n    }\r\n  }, [amount, spent, tokenInfo])\r\n}\r\n\r\ninterface SpentVsAmountProps {\r\n  amount: string\r\n  spent: string\r\n  tokenAddress: string\r\n}\r\n\r\nexport const SpentVsAmount = ({ amount, spent, tokenAddress }: SpentVsAmountProps): ReactElement | null => {\r\n  const { width } = useWindowDimensions()\r\n  const showIcon = useMemo(() => width > 1024, [width])\r\n\r\n  const tokenInfo = useTokenInfo(tokenAddress)\r\n  const spentInfo = useFormattedAmounts({ amount, spent, tokenInfo })\r\n\r\n  return spentInfo && tokenInfo ? (\r\n    <StyledImageName>\r\n      {showIcon && <StyledImage alt={tokenInfo.name} onError={setImageToPlaceholder} src={tokenInfo.logoUri} />}\r\n      <Text size=\"lg\">{`${spentInfo.spent} of ${spentInfo.amount} ${tokenInfo.symbol}`}</Text>\r\n    </StyledImageName>\r\n  ) : null\r\n}\r\n","import { Button, Text } from '@gnosis.pm/safe-react-components'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport cn from 'classnames'\r\nimport React, { ReactElement, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\n\r\nimport Row from 'src/components/layout/Row'\r\nimport { TableCell, TableRow } from 'src/components/layout/Table'\r\nimport Table from 'src/components/Table'\r\nimport { AddressInfo } from 'src/routes/safe/components/Settings/SpendingLimit/InfoDisplay'\r\nimport { RemoveLimitModal } from 'src/routes/safe/components/Settings/SpendingLimit/RemoveLimitModal'\r\nimport { useStyles } from 'src/routes/safe/components/Settings/SpendingLimit/style'\r\nimport { grantedSelector } from 'src/routes/safe/container/selector'\r\n\r\nimport {\r\n  generateColumns,\r\n  SPENDING_LIMIT_TABLE_BENEFICIARY_ID,\r\n  SPENDING_LIMIT_TABLE_RESET_TIME_ID,\r\n  SPENDING_LIMIT_TABLE_SPENT_ID,\r\n  SpendingLimitTable,\r\n} from './dataFetcher'\r\nimport { SpentVsAmount } from './SpentVsAmount'\r\n\r\nconst TableActionButton = styled(Button)`\r\n  background-color: transparent;\r\n  padding: 0;\r\n\r\n  &:hover {\r\n    background-color: transparent;\r\n  }\r\n`\r\n\r\ninterface SpendingLimitTableProps {\r\n  data?: SpendingLimitTable[]\r\n}\r\n\r\nexport const LimitsTable = ({ data }: SpendingLimitTableProps): ReactElement => {\r\n  const classes = useStyles()\r\n  const granted = useSelector(grantedSelector)\r\n\r\n  const columns = generateColumns()\r\n  const autoColumns = columns.filter(({ custom }) => !custom)\r\n\r\n  const [selectedRow, setSelectedRow] = useState<SpendingLimitTable>()\r\n\r\n  return (\r\n    <>\r\n      <TableContainer style={{ minHeight: '420px' }}>\r\n        <Table\r\n          columns={columns}\r\n          data={data}\r\n          defaultFixed\r\n          defaultOrderBy={SPENDING_LIMIT_TABLE_BENEFICIARY_ID}\r\n          defaultRowsPerPage={5}\r\n          label=\"Spending limits\"\r\n          noBorder\r\n          size={data?.length}\r\n        >\r\n          {(sortedData) =>\r\n            sortedData.map((row, index) => (\r\n              <TableRow\r\n                className={cn(classes.hide, index >= 3 && index === sortedData.size - 1 && classes.noBorderBottom)}\r\n                data-testid=\"spending-limit-table-row\"\r\n                key={index}\r\n                tabIndex={-1}\r\n              >\r\n                {autoColumns.map((column, index) => {\r\n                  const columnId = column.id\r\n                  const rowElement = row[columnId]\r\n\r\n                  return (\r\n                    <TableCell align={column.align} component=\"td\" key={`${columnId}-${index}`}>\r\n                      {columnId === SPENDING_LIMIT_TABLE_BENEFICIARY_ID && <AddressInfo address={rowElement} />}\r\n                      {columnId === SPENDING_LIMIT_TABLE_SPENT_ID && <SpentVsAmount {...rowElement} />}\r\n                      {columnId === SPENDING_LIMIT_TABLE_RESET_TIME_ID && (\r\n                        <Text size=\"lg\">{rowElement.relativeTime}</Text>\r\n                      )}\r\n                    </TableCell>\r\n                  )\r\n                })}\r\n                <TableCell component=\"td\">\r\n                  <Row align=\"end\" className={classes.actions}>\r\n                    {granted && (\r\n                      <TableActionButton\r\n                        size=\"md\"\r\n                        iconType=\"delete\"\r\n                        color=\"error\"\r\n                        variant=\"outlined\"\r\n                        onClick={() => setSelectedRow(row)}\r\n                        data-testid=\"remove-action\"\r\n                      >\r\n                        {null}\r\n                      </TableActionButton>\r\n                    )}\r\n                  </Row>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))\r\n          }\r\n        </Table>\r\n      </TableContainer>\r\n      {selectedRow && (\r\n        <RemoveLimitModal onClose={() => setSelectedRow(undefined)} spendingLimit={selectedRow} open={true} />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import { EthHashInfo } from '@gnosis.pm/safe-react-components'\r\nimport React, { KeyboardEvent, ReactElement, useEffect, useState } from 'react'\r\nimport { useForm, useFormState } from 'react-final-form'\r\nimport { useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\n\r\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\r\nimport { getExplorerInfo } from 'src/config'\r\nimport { addressBookSelector } from 'src/logic/addressBook/store/selectors'\r\nimport { getNameFromAddressBook } from 'src/logic/addressBook/utils'\r\nimport { AddressBookInput } from 'src/routes/safe/components/Balances/SendModal/screens/AddressBookInput'\r\nimport { sameString } from 'src/utils/strings'\r\n\r\nconst BeneficiaryInput = styled.div`\r\n  grid-area: beneficiaryInput;\r\n`\r\n\r\nconst BeneficiaryScan = styled.div`\r\n  grid-area: beneficiaryScan;\r\n`\r\n\r\nconst Beneficiary = (): ReactElement => {\r\n  const { initialValues } = useFormState()\r\n  const { mutators } = useForm()\r\n\r\n  const [selectedEntry, setSelectedEntry] = useState<{ address?: string; name?: string } | null>({\r\n    address: initialValues?.beneficiary || '',\r\n    name: '',\r\n  })\r\n\r\n  const [pristine, setPristine] = useState<boolean>(!initialValues?.beneficiary)\r\n\r\n  useEffect(() => {\r\n    if (selectedEntry === null) {\r\n      mutators?.setBeneficiary?.('')\r\n\r\n      if (pristine) {\r\n        setPristine(false)\r\n      }\r\n    }\r\n  }, [mutators, pristine, selectedEntry])\r\n\r\n  const addressBook = useSelector(addressBookSelector)\r\n\r\n  const handleScan = (value, closeQrModal) => {\r\n    const scannedAddress = value.startsWith('ethereum:') ? value.replace('ethereum:', '') : value\r\n    const scannedName = addressBook\r\n      ? getNameFromAddressBook(addressBook, scannedAddress, { filterOnlyValidName: true }) ?? ''\r\n      : ''\r\n\r\n    mutators?.setBeneficiary?.(scannedAddress)\r\n\r\n    setSelectedEntry({\r\n      name: scannedName,\r\n      address: scannedAddress,\r\n    })\r\n\r\n    closeQrModal()\r\n  }\r\n\r\n  const handleOnKeyDown = (e: KeyboardEvent<HTMLElement>): void => {\r\n    if (sameString(e.key, 'Tab')) {\r\n      return\r\n    }\r\n    setSelectedEntry(null)\r\n  }\r\n\r\n  const handleOnClick = () => {\r\n    setSelectedEntry(null)\r\n  }\r\n\r\n  return selectedEntry?.address ? (\r\n    <BeneficiaryInput\r\n      role=\"button\"\r\n      aria-pressed=\"false\"\r\n      tabIndex={0}\r\n      onKeyDown={handleOnKeyDown}\r\n      onClick={handleOnClick}\r\n    >\r\n      <EthHashInfo\r\n        hash={selectedEntry.address}\r\n        name={selectedEntry.name}\r\n        showCopyBtn\r\n        showAvatar\r\n        textSize=\"lg\"\r\n        explorerUrl={getExplorerInfo(selectedEntry.address)}\r\n      />\r\n    </BeneficiaryInput>\r\n  ) : (\r\n    <>\r\n      <BeneficiaryInput>\r\n        <AddressBookInput\r\n          fieldMutator={mutators?.setBeneficiary}\r\n          pristine={pristine}\r\n          setSelectedEntry={setSelectedEntry}\r\n          setIsValidAddress={() => {}}\r\n          label=\"Beneficiary\"\r\n        />\r\n      </BeneficiaryInput>\r\n      <BeneficiaryScan>\r\n        <ScanQRWrapper handleScan={handleScan} />\r\n      </BeneficiaryScan>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Beneficiary\r\n","import React, { ReactElement } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\n\r\nimport TokenSelectField from 'src/routes/safe/components/Balances/SendModal/screens/SendFunds/TokenSelectField'\r\nimport { extendedSafeTokensSelector } from 'src/routes/safe/container/selector'\r\n\r\nconst TokenInput = styled.div`\r\n  grid-area: tokenInput;\r\n`\r\n\r\nconst Token = (): ReactElement => {\r\n  const tokens = useSelector(extendedSafeTokensSelector)\r\n\r\n  return (\r\n    <TokenInput>\r\n      <TokenSelectField tokens={tokens} />\r\n    </TokenInput>\r\n  )\r\n}\r\n\r\nexport default Token\r\n","import { Text } from '@gnosis.pm/safe-react-components'\r\nimport { FormState, Mutator } from 'final-form'\r\nimport React, { ReactElement } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport GnoForm from 'src/components/forms/GnoForm'\r\nimport { Modal } from 'src/components/Modal'\r\nimport { Amount, Beneficiary, ResetTime, Token } from 'src/routes/safe/components/Settings/SpendingLimit/FormFields'\r\n\r\nconst FormContainer = styled.div`\r\n  padding: 24px 8px 24px 24px;\r\n  align-items: center;\r\n  display: grid;\r\n  grid-template-columns: 4fr 1fr;\r\n  grid-template-rows: 6fr;\r\n  gap: 16px 8px;\r\n  grid-template-areas:\r\n    'beneficiaryInput beneficiaryScan'\r\n    'tokenInput .'\r\n    'amountInput .'\r\n    'resetTimeLabel resetTimeLabel'\r\n    'resetTimeToggle resetTimeToggle'\r\n    'resetTimeOption resetTimeOption';\r\n`\r\n\r\nconst formMutators: Record<string, Mutator<{ beneficiary: { name: string } }>> = {\r\n  setBeneficiary: (args, state, utils) => {\r\n    utils.changeValue(state, 'beneficiary', () => args[0])\r\n  },\r\n}\r\n\r\ninterface NewSpendingLimitProps {\r\n  initialValues?: Record<string, string>\r\n  onCancel: () => void\r\n  onReview: (values) => void\r\n}\r\n\r\nconst canReview = ({\r\n  invalid,\r\n  submitting,\r\n  dirtyFieldsSinceLastSubmit,\r\n  values: { beneficiary, token, amount },\r\n}: FormState<{ beneficiary: string; token: string; amount: string }>): boolean =>\r\n  !(submitting || invalid || !beneficiary || !token || !amount || !dirtyFieldsSinceLastSubmit)\r\n\r\nconst Create = ({ initialValues, onCancel, onReview }: NewSpendingLimitProps): ReactElement => {\r\n  return (\r\n    <>\r\n      <Modal.Header onClose={onCancel}>\r\n        <Modal.Header.Title>\r\n          New spending limit\r\n          <Text size=\"lg\" color=\"secondaryLight\" as=\"span\">\r\n            1 of 2\r\n          </Text>\r\n        </Modal.Header.Title>\r\n      </Modal.Header>\r\n\r\n      <GnoForm formMutators={formMutators} onSubmit={onReview} initialValues={initialValues}>\r\n        {(...args) => {\r\n          return (\r\n            <>\r\n              <FormContainer>\r\n                <Beneficiary />\r\n                <Token />\r\n                <Amount />\r\n                <ResetTime />\r\n              </FormContainer>\r\n\r\n              <Modal.Footer>\r\n                <Modal.Footer.Buttons\r\n                  cancelButtonProps={{ onClick: onCancel }}\r\n                  confirmButtonProps={{ disabled: !canReview(args[2]), text: 'Review' }}\r\n                />\r\n              </Modal.Footer>\r\n            </>\r\n          )\r\n        }}\r\n      </GnoForm>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Create\r\n","import { Text } from '@gnosis.pm/safe-react-components'\r\nimport React, { ReactElement, useEffect, useMemo, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Col from 'src/components/layout/Col'\r\nimport Row from 'src/components/layout/Row'\r\nimport { ButtonStatus, Modal } from 'src/components/Modal'\r\nimport { createTransaction, CreateTransactionArgs } from 'src/logic/safe/store/actions/createTransaction'\r\nimport { SafeRecordProps, SpendingLimit } from 'src/logic/safe/store/models/safe'\r\nimport {\r\n  addSpendingLimitBeneficiaryMultiSendTx,\r\n  currentMinutes,\r\n  enableSpendingLimitModuleMultiSendTx,\r\n  getResetSpendingLimitTx,\r\n  setSpendingLimitMultiSendTx,\r\n  setSpendingLimitTx,\r\n  spendingLimitMultiSendTx,\r\n  SpendingLimitRow,\r\n} from 'src/logic/safe/utils/spendingLimits'\r\nimport { MultiSendTx } from 'src/logic/safe/utils/upgradeSafe'\r\nimport { makeToken, Token } from 'src/logic/tokens/store/model/token'\r\nimport { fromTokenUnit, toTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\r\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\r\nimport { getResetTimeOptions } from 'src/routes/safe/components/Settings/SpendingLimit/FormFields/ResetTime'\r\nimport { AddressInfo, ResetTimeInfo, TokenInfo } from 'src/routes/safe/components/Settings/SpendingLimit/InfoDisplay'\r\nimport { useStyles } from 'src/routes/safe/components/Settings/SpendingLimit/style'\r\nimport { safeParamAddressFromStateSelector, safeSpendingLimitsSelector } from 'src/logic/safe/store/selectors'\r\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\r\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\r\n\r\nimport { ActionCallback, CREATE } from '.'\r\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\r\nimport { TransactionFees } from 'src/components/TransactionsFees'\r\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\r\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\r\n\r\nconst useExistentSpendingLimit = ({\r\n  spendingLimits,\r\n  txToken,\r\n  values,\r\n}: {\r\n  spendingLimits?: SafeRecordProps['spendingLimits']\r\n  txToken: Token\r\n  values: ReviewSpendingLimitProps['values']\r\n}) => {\r\n  // undefined: before setting a value\r\n  // null: if no previous value\r\n  // SpendingLimit: if previous value exists\r\n  return useMemo<SpendingLimit | null>(() => {\r\n    // if `delegate` already exist, check what tokens were delegated to the _beneficiary_ `getTokens(safe, delegate)`\r\n    const currentDelegate = spendingLimits?.find(\r\n      ({ delegate, token }) => sameAddress(delegate, values.beneficiary) && sameAddress(token, values.token),\r\n    )\r\n\r\n    // let the user know that is about to replace an existent allowance\r\n    if (currentDelegate !== undefined) {\r\n      return {\r\n        ...currentDelegate,\r\n        amount: fromTokenUnit(currentDelegate.amount, txToken.decimals),\r\n      }\r\n    } else {\r\n      return null\r\n    }\r\n  }, [spendingLimits, txToken.decimals, values.beneficiary, values.token])\r\n}\r\n\r\nconst calculateSpendingLimitsTxData = (\r\n  safeAddress: string,\r\n  spendingLimits: SpendingLimit[] | null | undefined,\r\n  existentSpendingLimit: SpendingLimit | null,\r\n  txToken: Token,\r\n  values: Record<string, string>,\r\n  txParameters?: TxParameters,\r\n): {\r\n  spendingLimitTxData: CreateTransactionArgs\r\n  transactions: MultiSendTx[]\r\n  spendingLimitArgs: {\r\n    beneficiary: string\r\n    token: string\r\n    spendingLimitInWei: string\r\n    resetTimeMin: number\r\n    resetBaseMin: number\r\n  }\r\n} => {\r\n  // enabled if it's an array with at least one element\r\n  const isSpendingLimitEnabled = !!spendingLimits?.length\r\n  const transactions: MultiSendTx[] = []\r\n\r\n  // is spendingLimit module enabled? -> if not, create the tx to enable it, and encode it\r\n  if (!isSpendingLimitEnabled && safeAddress) {\r\n    transactions.push(enableSpendingLimitModuleMultiSendTx(safeAddress))\r\n  }\r\n\r\n  // does `delegate` already exist? (`getDelegates`, previously queried to build the table with allowances (??))\r\n  //                                  ^ - shall we rely on this or query the list of delegates once again?\r\n  const isDelegateAlreadyAdded =\r\n    spendingLimits?.some(({ delegate }) => sameAddress(delegate, values?.beneficiary)) ?? false\r\n\r\n  // if `delegate` does not exist, add it by calling `addDelegate(beneficiary)`\r\n  if (!isDelegateAlreadyAdded && values?.beneficiary) {\r\n    transactions.push(addSpendingLimitBeneficiaryMultiSendTx(values.beneficiary))\r\n  }\r\n\r\n  if (existentSpendingLimit && existentSpendingLimit.spent !== '0') {\r\n    transactions.push(getResetSpendingLimitTx(existentSpendingLimit.delegate, txToken.address))\r\n  }\r\n\r\n  // prepare the setAllowance tx\r\n  const startTime = currentMinutes() - 30\r\n  const spendingLimitArgs = {\r\n    beneficiary: values.beneficiary,\r\n    token: values.token,\r\n    spendingLimitInWei: toTokenUnit(values.amount, txToken.decimals),\r\n    resetTimeMin: values.withResetTime ? +values.resetTime : 0,\r\n    resetBaseMin: values.withResetTime ? startTime : 0,\r\n  }\r\n\r\n  let spendingLimitTxData\r\n  if (safeAddress) {\r\n    // if there's no tx for enable module or adding a delegate, then we avoid using multiSend Tx\r\n    if (transactions.length === 0) {\r\n      spendingLimitTxData = setSpendingLimitTx({ spendingLimitArgs, safeAddress })\r\n    } else {\r\n      const encodedTxForMultisend = setSpendingLimitMultiSendTx({ spendingLimitArgs, safeAddress })\r\n      transactions.push(encodedTxForMultisend)\r\n      spendingLimitTxData = spendingLimitMultiSendTx({ transactions, safeAddress })\r\n    }\r\n\r\n    if (txParameters) {\r\n      spendingLimitTxData.txNonce = txParameters.safeNonce\r\n      spendingLimitTxData.safeTxGas = txParameters.safeTxGas ? Number(txParameters.safeTxGas) : undefined\r\n      spendingLimitTxData.ethParameters = txParameters\r\n    }\r\n  }\r\n  return {\r\n    spendingLimitTxData,\r\n    transactions,\r\n    spendingLimitArgs,\r\n  }\r\n}\r\n\r\ninterface ReviewSpendingLimitProps {\r\n  onBack: ActionCallback\r\n  onClose: () => void\r\n  txToken: Token\r\n  values: Record<string, string>\r\n  existentSpendingLimit?: SpendingLimitRow\r\n}\r\n\r\nexport const ReviewSpendingLimits = ({ onBack, onClose, txToken, values }: ReviewSpendingLimitProps): ReactElement => {\r\n  const classes = useStyles()\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const safeAddress = useSelector(safeParamAddressFromStateSelector)\r\n  const spendingLimits = useSelector(safeSpendingLimitsSelector)\r\n  const existentSpendingLimit = useExistentSpendingLimit({ spendingLimits, txToken, values })\r\n  const [estimateGasArgs, setEstimateGasArgs] = useState<Partial<CreateTransactionArgs>>({\r\n    to: '',\r\n    txData: '',\r\n  })\r\n  const [manualSafeTxGas, setManualSafeTxGas] = useState(0)\r\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\r\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\r\n\r\n  const {\r\n    gasCostFormatted,\r\n    txEstimationExecutionStatus,\r\n    isExecution,\r\n    isCreation,\r\n    isOffChainSignature,\r\n    gasPrice,\r\n    gasPriceFormatted,\r\n    gasLimit,\r\n    gasEstimation,\r\n  } = useEstimateTransactionGas({\r\n    txData: estimateGasArgs.txData as string,\r\n    txRecipient: estimateGasArgs.to as string,\r\n    operation: estimateGasArgs.operation,\r\n    safeTxGas: manualSafeTxGas,\r\n    manualGasPrice,\r\n    manualGasLimit,\r\n  })\r\n\r\n  const [buttonStatus] = useEstimationStatus(txEstimationExecutionStatus)\r\n\r\n  useEffect(() => {\r\n    const { spendingLimitTxData } = calculateSpendingLimitsTxData(\r\n      safeAddress,\r\n      spendingLimits,\r\n      existentSpendingLimit,\r\n      txToken,\r\n      values,\r\n    )\r\n    setEstimateGasArgs(spendingLimitTxData)\r\n  }, [safeAddress, spendingLimits, existentSpendingLimit, txToken, values])\r\n\r\n  const handleSubmit = (txParameters: TxParameters): void => {\r\n    const { ethGasPrice, ethGasLimit, ethGasPriceInGWei } = txParameters\r\n    const advancedOptionsTxParameters = {\r\n      ...txParameters,\r\n      ethGasPrice: ethGasPrice || gasPrice,\r\n      ethGasPriceInGWei: ethGasPriceInGWei || gasPriceFormatted,\r\n      ethGasLimit: ethGasLimit || gasLimit,\r\n    }\r\n\r\n    if (safeAddress) {\r\n      const { spendingLimitTxData } = calculateSpendingLimitsTxData(\r\n        safeAddress,\r\n        spendingLimits,\r\n        existentSpendingLimit,\r\n        txToken,\r\n        values,\r\n        advancedOptionsTxParameters,\r\n      )\r\n\r\n      dispatch(createTransaction(spendingLimitTxData))\r\n    }\r\n  }\r\n\r\n  const resetTimeLabel = useMemo(\r\n    () => (values.withResetTime ? getResetTimeOptions().find(({ value }) => value === values.resetTime)?.label : ''),\r\n    [values.resetTime, values.withResetTime],\r\n  )\r\n\r\n  const previousResetTime = (existentSpendingLimit: SpendingLimit) =>\r\n    getResetTimeOptions().find(({ value }) => value === (+existentSpendingLimit.resetTimeMin).toString())?.label ??\r\n    'One-time spending limit'\r\n\r\n  const closeEditModalCallback = (txParameters: TxParameters) => {\r\n    const oldGasPrice = Number(gasPriceFormatted)\r\n    const newGasPrice = Number(txParameters.ethGasPrice)\r\n    const oldSafeTxGas = Number(gasEstimation)\r\n    const newSafeTxGas = Number(txParameters.safeTxGas)\r\n\r\n    if (newGasPrice && oldGasPrice !== newGasPrice) {\r\n      setManualGasPrice(txParameters.ethGasPrice)\r\n    }\r\n\r\n    if (txParameters.ethGasLimit && gasLimit !== txParameters.ethGasLimit) {\r\n      setManualGasLimit(txParameters.ethGasLimit)\r\n    }\r\n\r\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\r\n      setManualSafeTxGas(newSafeTxGas)\r\n    }\r\n  }\r\n\r\n  let confirmButtonText = 'Submit'\r\n  if (ButtonStatus.LOADING === buttonStatus) {\r\n    confirmButtonText = txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : 'Submitting'\r\n  }\r\n\r\n  return (\r\n    <EditableTxParameters\r\n      isOffChainSignature={isOffChainSignature}\r\n      isExecution={isExecution}\r\n      ethGasLimit={gasLimit}\r\n      ethGasPrice={gasPriceFormatted}\r\n      safeTxGas={gasEstimation.toString()}\r\n      closeEditModalCallback={closeEditModalCallback}\r\n    >\r\n      {(txParameters, toggleEditMode) => (\r\n        <>\r\n          <Modal.Header onClose={onClose}>\r\n            <Modal.Header.Title>\r\n              New spending limit\r\n              <Text size=\"lg\" color=\"secondaryLight\" as=\"span\">\r\n                2 of 2\r\n              </Text>\r\n            </Modal.Header.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Col margin=\"lg\">\r\n              <AddressInfo address={values.beneficiary} title=\"Beneficiary\" />\r\n            </Col>\r\n            <Col margin=\"lg\">\r\n              <TokenInfo\r\n                amount={fromTokenUnit(toTokenUnit(values.amount, txToken.decimals), txToken.decimals)}\r\n                title=\"Amount\"\r\n                token={txToken}\r\n              />\r\n              {existentSpendingLimit && (\r\n                <Text size=\"lg\" color=\"error\">\r\n                  Previous Amount: {existentSpendingLimit.amount}\r\n                </Text>\r\n              )}\r\n            </Col>\r\n            <Col margin=\"lg\">\r\n              <ResetTimeInfo title=\"Reset Time\" label={resetTimeLabel} />\r\n              {existentSpendingLimit && (\r\n                <Row align=\"center\" margin=\"md\">\r\n                  <Text size=\"lg\" color=\"error\">\r\n                    Previous Reset Time: {previousResetTime(existentSpendingLimit)}\r\n                  </Text>\r\n                </Row>\r\n              )}\r\n            </Col>\r\n\r\n            {existentSpendingLimit && (\r\n              <Col margin=\"md\">\r\n                <Text size=\"xl\" color=\"error\" center strong>\r\n                  You are about to replace an existent spending limit\r\n                </Text>\r\n              </Col>\r\n            )}\r\n            {/* Tx Parameters */}\r\n            <TxParametersDetail\r\n              txParameters={txParameters}\r\n              onEdit={toggleEditMode}\r\n              isTransactionCreation={isCreation}\r\n              isTransactionExecution={isExecution}\r\n              isOffChainSignature={isOffChainSignature}\r\n            />\r\n          </Modal.Body>\r\n          <div className={classes.gasCostsContainer}>\r\n            <TransactionFees\r\n              gasCostFormatted={gasCostFormatted}\r\n              isExecution={isExecution}\r\n              isCreation={isCreation}\r\n              isOffChainSignature={isOffChainSignature}\r\n              txEstimationExecutionStatus={txEstimationExecutionStatus}\r\n            />\r\n          </div>\r\n\r\n          <Modal.Footer withoutBorder={buttonStatus !== ButtonStatus.LOADING}>\r\n            <Modal.Footer.Buttons\r\n              cancelButtonProps={{\r\n                onClick: () => onBack({ values: {}, txToken: makeToken(), step: CREATE }),\r\n                text: 'Back',\r\n              }}\r\n              confirmButtonProps={{\r\n                onClick: () => handleSubmit(txParameters),\r\n                disabled: existentSpendingLimit === undefined,\r\n                status: buttonStatus,\r\n                text: confirmButtonText,\r\n              }}\r\n            />\r\n          </Modal.Footer>\r\n        </>\r\n      )}\r\n    </EditableTxParameters>\r\n  )\r\n}\r\n","import { List } from 'immutable'\r\nimport React, { ReactElement, Reducer, useCallback, useReducer } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { Modal } from 'src/components/Modal'\r\nimport { makeToken, Token } from 'src/logic/tokens/store/model/token'\r\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\r\nimport { extendedSafeTokensSelector } from 'src/routes/safe/container/selector'\r\n\r\nimport Create from './Create'\r\nimport { ReviewSpendingLimits } from './Review'\r\n\r\nexport const CREATE = 'CREATE' as const\r\nexport const REVIEW = 'REVIEW' as const\r\n\r\ntype Step = typeof CREATE | typeof REVIEW\r\n\r\ntype State = {\r\n  step: Step\r\n  values: Record<string, string>\r\n  txToken: Token\r\n}\r\n\r\ntype Action = {\r\n  type: Step\r\n  newState: State\r\n  tokens: List<Token>\r\n}\r\n\r\nconst newLimitModalReducer = (state: State, action: Action): State => {\r\n  const { type, newState, tokens } = action\r\n\r\n  switch (type) {\r\n    case CREATE: {\r\n      return {\r\n        ...state,\r\n        step: CREATE,\r\n      }\r\n    }\r\n\r\n    case REVIEW: {\r\n      return {\r\n        ...state,\r\n        ...newState,\r\n        // we lookup into the list of tokens for the selected token info\r\n        txToken: tokens.find((token) => sameAddress(token.address, newState.values.token)) ?? state.txToken,\r\n        step: REVIEW,\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport type ActionCallback = (state: State) => void\r\ntype NewLimitModalHook = [State, { create: ActionCallback; review: ActionCallback }]\r\n\r\nconst useNewLimitModal = (initialStep: Step): NewLimitModalHook => {\r\n  // globally stored tokens\r\n  const tokens = useSelector(extendedSafeTokensSelector)\r\n\r\n  // setup the reducer with initial values\r\n  const [state, dispatch] = useReducer<Reducer<State, Action>, State>(\r\n    newLimitModalReducer,\r\n    {\r\n      step: initialStep,\r\n      txToken: makeToken(),\r\n      values: {},\r\n    },\r\n    (state) => state,\r\n  )\r\n\r\n  // define actions\r\n  const create = useCallback<ActionCallback>((newState) => dispatch({ type: CREATE, newState, tokens }), [tokens])\r\n  const review = useCallback<ActionCallback>((newState) => dispatch({ type: REVIEW, newState, tokens }), [tokens])\r\n\r\n  // returns state and dispatch\r\n  return [state, { create, review }]\r\n}\r\n\r\ninterface SpendingLimitModalProps {\r\n  close: () => void\r\n  open: boolean\r\n}\r\n\r\nexport const NewLimitModal = ({ close, open }: SpendingLimitModalProps): ReactElement => {\r\n  // state and dispatch\r\n  const [{ step, txToken, values }, { create, review }] = useNewLimitModal(CREATE)\r\n\r\n  const handleReview = async (values) => {\r\n    // if form is valid, we update the state to REVIEW and sets values\r\n    review({ step, txToken, values })\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      handleClose={close}\r\n      open={open}\r\n      title=\"New spending limit\"\r\n      description=\"set rules for specific beneficiaries to access funds from this Safe without having to collect all signatures\"\r\n    >\r\n      {step === CREATE && <Create initialValues={values} onCancel={close} onReview={handleReview} />}\r\n      {step === REVIEW && <ReviewSpendingLimits onBack={create} onClose={close} txToken={txToken} values={values} />}\r\n    </Modal>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/asset-amount.7abaa1ae.svg\";","export default __webpack_public_path__ + \"static/media/beneficiary.12f838b7.svg\";","export default __webpack_public_path__ + \"static/media/time.70bc4994.svg\";","import { Text } from '@gnosis.pm/safe-react-components'\r\nimport React, { ReactElement } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Img from 'src/components/layout/Img'\r\nimport AssetAmount from './assets/asset-amount.svg'\r\nimport Beneficiary from './assets/beneficiary.svg'\r\nimport Time from './assets/time.svg'\r\n\r\nconst StepWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  margin-top: 20px;\r\n  max-width: 720px;\r\n  text-align: center;\r\n`\r\n\r\nconst Step = styled.div`\r\n  width: 24%;\r\n  min-width: 120px;\r\n  max-width: 164px;\r\n`\r\n\r\nconst StepsLine = styled.div`\r\n  height: 2px;\r\n  flex: 1;\r\n  background: #d4d5d3;\r\n  margin: 46px 0;\r\n`\r\n\r\nexport const NewLimitSteps = (): ReactElement => (\r\n  <StepWrapper>\r\n    <Step>\r\n      <Img alt=\"Select Beneficiary\" title=\"Beneficiary\" height={96} src={Beneficiary} />\r\n\r\n      <Text size=\"lg\" color=\"placeHolder\" strong center>\r\n        Select Beneficiary\r\n      </Text>\r\n\r\n      <Text size=\"lg\" color=\"placeHolder\" center>\r\n        Define beneficiary that will be able to use the allowance.\r\n      </Text>\r\n\r\n      <Text size=\"lg\" color=\"placeHolder\" center>\r\n        The beneficiary does not have to be an owner of this Safe\r\n      </Text>\r\n    </Step>\r\n\r\n    <StepsLine />\r\n\r\n    <Step>\r\n      <Img alt=\"Select asset and amount\" title=\"Asset and Amount\" height={96} src={AssetAmount} />\r\n\r\n      <Text size=\"lg\" color=\"placeHolder\" strong center>\r\n        Select asset and amount\r\n      </Text>\r\n\r\n      <Text size=\"lg\" color=\"placeHolder\" center>\r\n        You can set a spending limit for any asset stored in your Safe\r\n      </Text>\r\n    </Step>\r\n\r\n    <StepsLine />\r\n\r\n    <Step>\r\n      <Img alt=\"Select time\" title=\"Time\" height={96} src={Time} />\r\n\r\n      <Text size=\"lg\" color=\"placeHolder\" strong center>\r\n        Select time\r\n      </Text>\r\n\r\n      <Text size=\"lg\" color=\"placeHolder\" center>\r\n        You can choose to set a one-time spending limit or to have it automatically refill after a defined time-period\r\n      </Text>\r\n    </Step>\r\n  </StepWrapper>\r\n)\r\n","import { Button, Text, Title } from '@gnosis.pm/safe-react-components'\r\nimport React, { ReactElement, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\n\r\nimport Block from 'src/components/layout/Block'\r\nimport Col from 'src/components/layout/Col'\r\nimport Row from 'src/components/layout/Row'\r\nimport { safeSpendingLimitsSelector } from 'src/logic/safe/store/selectors'\r\nimport { grantedSelector } from 'src/routes/safe/container/selector'\r\n\r\nimport { LimitsTable } from './LimitsTable'\r\nimport { getSpendingLimitData } from './LimitsTable/dataFetcher'\r\nimport { NewLimitModal } from './NewLimitModal'\r\nimport { NewLimitSteps } from './NewLimitSteps'\r\nimport { useStyles } from './style'\r\n\r\nconst InfoText = styled(Text)`\r\n  margin-top: 16px;\r\n`\r\n\r\nexport const SpendingLimitSettings = (): ReactElement => {\r\n  const classes = useStyles()\r\n  const granted = useSelector(grantedSelector)\r\n  const allowances = useSelector(safeSpendingLimitsSelector)\r\n  const spendingLimitData = getSpendingLimitData(allowances)\r\n\r\n  const [showNewSpendingLimitModal, setShowNewSpendingLimitModal] = useState(false)\r\n  const openNewSpendingLimitModal = () => {\r\n    setShowNewSpendingLimitModal(true)\r\n  }\r\n  const closeNewSpendingLimitModal = () => {\r\n    setShowNewSpendingLimitModal(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Block className={classes.container} grow=\"grow\">\r\n        <Title size=\"xs\" withoutMargin>\r\n          Spending limit\r\n        </Title>\r\n        <InfoText size=\"lg\">\r\n          You can set rules for specific beneficiaries to access funds from this Safe without having to collect all\r\n          signatures.\r\n        </InfoText>\r\n        {spendingLimitData?.length ? <LimitsTable data={spendingLimitData} /> : <NewLimitSteps />}\r\n      </Block>\r\n\r\n      {granted && (\r\n        <>\r\n          <Row align=\"end\" className={classes.buttonRow} grow>\r\n            <Col end=\"xs\">\r\n              <Button\r\n                className={classes.actionButton}\r\n                color=\"primary\"\r\n                size=\"md\"\r\n                data-testid=\"new-spending-limit-button\"\r\n                onClick={openNewSpendingLimitModal}\r\n                variant=\"contained\"\r\n              >\r\n                New spending limit\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          {showNewSpendingLimitModal && <NewLimitModal close={closeNewSpendingLimitModal} open={true} />}\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/bin.a31af619.svg\";","import { lg, md, secondaryText, sm } from 'src/theme/variables'\r\nimport { createStyles } from '@material-ui/core'\r\n\r\nexport const styles = createStyles({\r\n  heading: {\r\n    padding: `${sm} ${lg}`,\r\n    justifyContent: 'flex-start',\r\n    boxSizing: 'border-box',\r\n    height: '74px',\r\n  },\r\n  annotation: {\r\n    color: secondaryText,\r\n    marginRight: 'auto',\r\n    marginLeft: '20px',\r\n    lineHeight: 'normal',\r\n  },\r\n  manage: {\r\n    fontSize: lg,\r\n  },\r\n  closeIcon: {\r\n    height: '35px',\r\n    width: '35px',\r\n  },\r\n  formContainer: {\r\n    padding: `${md} ${lg}`,\r\n    minHeight: '340px',\r\n  },\r\n  buttonRow: {\r\n    height: '84px',\r\n    justifyContent: 'center',\r\n    gap: '16px',\r\n  },\r\n})\r\n","import IconButton from '@material-ui/core/IconButton'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Close from '@material-ui/icons/Close'\r\nimport { Mutator } from 'final-form'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { OnChange } from 'react-final-form-listeners'\r\n\r\nimport { styles } from './style'\r\n\r\nimport { getNetworkId } from 'src/config'\r\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\r\nimport AddressInput from 'src/components/forms/AddressInput'\r\nimport Field from 'src/components/forms/Field'\r\nimport GnoForm from 'src/components/forms/GnoForm'\r\nimport TextField from 'src/components/forms/TextField'\r\nimport {\r\n  addressIsNotCurrentSafe,\r\n  composeValidators,\r\n  required,\r\n  uniqueAddress,\r\n  validAddressBookName,\r\n} from 'src/components/forms/validator'\r\nimport Block from 'src/components/layout/Block'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { addressBookMapSelector } from 'src/logic/addressBook/store/selectors'\r\nimport { safeOwnersSelector, safeParamAddressFromStateSelector } from 'src/logic/safe/store/selectors'\r\nimport { web3ReadOnly } from 'src/logic/wallets/getWeb3'\r\n\r\nimport { OwnerValues } from '../..'\r\nimport { Modal } from 'src/components/Modal'\r\n\r\nexport const ADD_OWNER_NAME_INPUT_TEST_ID = 'add-owner-name-input'\r\nexport const ADD_OWNER_ADDRESS_INPUT_TEST_ID = 'add-owner-address-testid'\r\nexport const ADD_OWNER_NEXT_BTN_TEST_ID = 'add-owner-next-btn'\r\n\r\nconst formMutators: Record<\r\n  string,\r\n  Mutator<{ setOwnerAddress: { address: string }; setOwnerName: { name: string } }>\r\n> = {\r\n  setOwnerAddress: (args, state, utils) => {\r\n    utils.changeValue(state, 'ownerAddress', () => args[0])\r\n  },\r\n  setOwnerName: (args, state, utils) => {\r\n    utils.changeValue(state, 'ownerName', () => args[0])\r\n  },\r\n}\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst chainId = getNetworkId()\r\n\r\ntype OwnerFormProps = {\r\n  onClose: () => void\r\n  onSubmit: (values) => void\r\n  initialValues?: OwnerValues\r\n}\r\n\r\nexport const OwnerForm = ({ onClose, onSubmit, initialValues }: OwnerFormProps): React.ReactElement => {\r\n  const classes = useStyles()\r\n  const handleSubmit = (values) => {\r\n    onSubmit(values)\r\n  }\r\n  const addressBookMap = useSelector(addressBookMapSelector)\r\n  const owners = useSelector(safeOwnersSelector)\r\n  const safeAddress = useSelector(safeParamAddressFromStateSelector)\r\n  const ownerDoesntExist = uniqueAddress(owners)\r\n  const ownerAddressIsNotSafeAddress = addressIsNotCurrentSafe(safeAddress)\r\n\r\n  return (\r\n    <>\r\n      <Row align=\"center\" className={classes.heading} grow>\r\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\r\n          Add new owner\r\n        </Paragraph>\r\n        <Paragraph className={classes.annotation}>1 of 3</Paragraph>\r\n        <IconButton disableRipple onClick={onClose}>\r\n          <Close className={classes.closeIcon} />\r\n        </IconButton>\r\n      </Row>\r\n      <Hairline />\r\n      <GnoForm\r\n        formMutators={formMutators}\r\n        initialValues={{\r\n          ownerName: initialValues?.ownerName,\r\n          ownerAddress: initialValues?.ownerAddress,\r\n        }}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {(...args) => {\r\n          const mutators = args[3]\r\n\r\n          const handleScan = (value, closeQrModal) => {\r\n            let scannedAddress = value\r\n\r\n            if (scannedAddress.startsWith('ethereum:')) {\r\n              scannedAddress = scannedAddress.replace('ethereum:', '')\r\n            }\r\n            mutators.setOwnerAddress(scannedAddress)\r\n            closeQrModal()\r\n          }\r\n\r\n          return (\r\n            <>\r\n              <Block className={classes.formContainer}>\r\n                <Row margin=\"md\">\r\n                  <Paragraph>Add a new owner to the active Safe</Paragraph>\r\n                </Row>\r\n                <Row margin=\"md\">\r\n                  <Col xs={8}>\r\n                    <Field\r\n                      component={TextField}\r\n                      name=\"ownerName\"\r\n                      placeholder=\"Owner name*\"\r\n                      testId={ADD_OWNER_NAME_INPUT_TEST_ID}\r\n                      text=\"Owner name*\"\r\n                      type=\"text\"\r\n                      validate={composeValidators(required, validAddressBookName)}\r\n                    />\r\n                    <OnChange name=\"ownerAddress\">\r\n                      {async (address: string) => {\r\n                        if (web3ReadOnly.utils.isAddress(address)) {\r\n                          const { name: ownerName } = addressBookMap[chainId][address]\r\n                          if (ownerName) {\r\n                            mutators.setOwnerName(ownerName)\r\n                          }\r\n                        }\r\n                      }}\r\n                    </OnChange>\r\n                  </Col>\r\n                </Row>\r\n                <Row margin=\"md\">\r\n                  <Col xs={8}>\r\n                    <AddressInput\r\n                      fieldMutator={mutators.setOwnerAddress}\r\n                      name=\"ownerAddress\"\r\n                      placeholder=\"Owner address*\"\r\n                      testId={ADD_OWNER_ADDRESS_INPUT_TEST_ID}\r\n                      text=\"Owner address*\"\r\n                      validators={[ownerDoesntExist, ownerAddressIsNotSafeAddress]}\r\n                    />\r\n                  </Col>\r\n                  <Col center=\"xs\" className={classes} middle=\"xs\" xs={1}>\r\n                    <ScanQRWrapper handleScan={handleScan} />\r\n                  </Col>\r\n                </Row>\r\n              </Block>\r\n              <Hairline />\r\n              <Row align=\"center\" className={classes.buttonRow}>\r\n                <Modal.Footer.Buttons\r\n                  cancelButtonProps={{ onClick: onClose, text: 'Cancel' }}\r\n                  confirmButtonProps={{\r\n                    type: 'submit',\r\n                    text: 'Next',\r\n                    testId: ADD_OWNER_NEXT_BTN_TEST_ID,\r\n                  }}\r\n                />\r\n              </Row>\r\n            </>\r\n          )\r\n        }}\r\n      </GnoForm>\r\n    </>\r\n  )\r\n}\r\n","import { background, border, lg, secondaryText, sm } from 'src/theme/variables'\r\nimport { createStyles } from '@material-ui/core/styles'\r\n\r\nexport const styles = createStyles({\r\n  root: {\r\n    height: '372px',\r\n  },\r\n  heading: {\r\n    padding: `${sm} ${lg}`,\r\n    justifyContent: 'flex-start',\r\n    boxSizing: 'border-box',\r\n    height: '74px',\r\n  },\r\n  annotation: {\r\n    color: secondaryText,\r\n    marginRight: 'auto',\r\n    marginLeft: '20px',\r\n    lineHeight: 'normal',\r\n  },\r\n  manage: {\r\n    fontSize: lg,\r\n  },\r\n  closeIcon: {\r\n    height: '35px',\r\n    width: '35px',\r\n  },\r\n  info: {\r\n    backgroundColor: background,\r\n    padding: sm,\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    flexDirection: 'column',\r\n  },\r\n  buttonRow: {\r\n    height: '84px',\r\n    justifyContent: 'center',\r\n    gap: '16px',\r\n  },\r\n  details: {\r\n    padding: lg,\r\n    borderRight: `solid 2px ${border}`,\r\n    height: '100%',\r\n  },\r\n  owners: {\r\n    overflow: 'auto',\r\n    height: '100%',\r\n  },\r\n  ownersTitle: {\r\n    padding: lg,\r\n  },\r\n  owner: {\r\n    padding: sm,\r\n    alignItems: 'center',\r\n  },\r\n  name: {\r\n    textOverflow: 'ellipsis',\r\n    overflow: 'hidden',\r\n  },\r\n  selectedOwner: {\r\n    padding: sm,\r\n    alignItems: 'center',\r\n    backgroundColor: '#f7f5f5',\r\n  },\r\n  open: {\r\n    paddingLeft: sm,\r\n    width: 'auto',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n  gasCostsContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    width: '100%',\r\n    backgroundColor: background,\r\n  },\r\n})\r\n","import IconButton from '@material-ui/core/IconButton'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Close from '@material-ui/icons/Close'\r\nimport React, { ReactElement, useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { EthHashInfo } from '@gnosis.pm/safe-react-components'\r\n\r\nimport { getExplorerInfo, getNetworkId } from 'src/config'\r\nimport Block from 'src/components/layout/Block'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\r\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\r\nimport { useSafeName } from 'src/logic/addressBook/hooks/useSafeName'\r\nimport {\r\n  safeOwnersWithAddressBookDataSelector,\r\n  safeParamAddressFromStateSelector,\r\n} from 'src/logic/safe/store/selectors'\r\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\r\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\r\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\r\nimport { Modal } from 'src/components/Modal'\r\nimport { TransactionFees } from 'src/components/TransactionsFees'\r\n\r\nimport { OwnerValues } from '../..'\r\nimport { styles } from './style'\r\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\r\n\r\nexport const ADD_OWNER_SUBMIT_BTN_TEST_ID = 'add-owner-submit-btn'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst chainId = getNetworkId()\r\n\r\ntype ReviewAddOwnerProps = {\r\n  onClickBack: () => void\r\n  onClose: () => void\r\n  onSubmit: (txParameters: TxParameters) => void\r\n  values: OwnerValues\r\n}\r\n\r\nexport const ReviewAddOwner = ({ onClickBack, onClose, onSubmit, values }: ReviewAddOwnerProps): ReactElement => {\r\n  const classes = useStyles()\r\n  const [data, setData] = useState('')\r\n  const safeAddress = useSelector(safeParamAddressFromStateSelector) as string\r\n  const safeName = useSafeName(safeAddress)\r\n  const owners = useSelector((state) => safeOwnersWithAddressBookDataSelector(state, chainId))\r\n  const [manualSafeTxGas, setManualSafeTxGas] = useState(0)\r\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\r\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\r\n\r\n  const {\r\n    gasLimit,\r\n    gasEstimation,\r\n    gasCostFormatted,\r\n    gasPriceFormatted,\r\n    txEstimationExecutionStatus,\r\n    isExecution,\r\n    isOffChainSignature,\r\n    isCreation,\r\n  } = useEstimateTransactionGas({\r\n    txData: data,\r\n    txRecipient: safeAddress,\r\n    safeTxGas: manualSafeTxGas,\r\n    manualGasPrice,\r\n    manualGasLimit,\r\n  })\r\n\r\n  const [buttonStatus] = useEstimationStatus(txEstimationExecutionStatus)\r\n\r\n  useEffect(() => {\r\n    let isCurrent = true\r\n\r\n    const calculateAddOwnerData = () => {\r\n      try {\r\n        const safeInstance = getGnosisSafeInstanceAt(safeAddress)\r\n        const txData = safeInstance.methods.addOwnerWithThreshold(values.ownerAddress, values.threshold).encodeABI()\r\n\r\n        if (isCurrent) {\r\n          setData(txData)\r\n        }\r\n      } catch (error) {\r\n        console.error('Error calculating ERC721 transfer data:', error.message)\r\n      }\r\n    }\r\n    calculateAddOwnerData()\r\n\r\n    return () => {\r\n      isCurrent = false\r\n    }\r\n  }, [safeAddress, values.ownerAddress, values.threshold])\r\n\r\n  const closeEditModalCallback = (txParameters: TxParameters) => {\r\n    const oldGasPrice = Number(gasPriceFormatted)\r\n    const newGasPrice = Number(txParameters.ethGasPrice)\r\n    const oldSafeTxGas = Number(gasEstimation)\r\n    const newSafeTxGas = Number(txParameters.safeTxGas)\r\n\r\n    if (newGasPrice && oldGasPrice !== newGasPrice) {\r\n      setManualGasPrice(txParameters.ethGasPrice)\r\n    }\r\n\r\n    if (txParameters.ethGasLimit && gasLimit !== txParameters.ethGasLimit) {\r\n      setManualGasLimit(txParameters.ethGasLimit)\r\n    }\r\n\r\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\r\n      setManualSafeTxGas(newSafeTxGas)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <EditableTxParameters\r\n      isOffChainSignature={isOffChainSignature}\r\n      isExecution={isExecution}\r\n      ethGasLimit={gasLimit}\r\n      ethGasPrice={gasPriceFormatted}\r\n      safeTxGas={gasEstimation.toString()}\r\n      closeEditModalCallback={closeEditModalCallback}\r\n    >\r\n      {(txParameters, toggleEditMode) => (\r\n        <>\r\n          <Row align=\"center\" className={classes.heading} grow>\r\n            <Paragraph className={classes.manage} noMargin weight=\"bolder\">\r\n              Add new owner\r\n            </Paragraph>\r\n            <Paragraph className={classes.annotation}>3 of 3</Paragraph>\r\n            <IconButton disableRipple onClick={onClose}>\r\n              <Close className={classes.closeIcon} />\r\n            </IconButton>\r\n          </Row>\r\n          <Hairline />\r\n          <Block>\r\n            <Row className={classes.root}>\r\n              <Col layout=\"column\" xs={4}>\r\n                <Block className={classes.details}>\r\n                  <Block margin=\"lg\">\r\n                    <Paragraph color=\"primary\" noMargin size=\"lg\">\r\n                      Details\r\n                    </Paragraph>\r\n                  </Block>\r\n                  <Block margin=\"lg\">\r\n                    <Paragraph color=\"disabled\" noMargin size=\"sm\">\r\n                      Safe name\r\n                    </Paragraph>\r\n                    <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\r\n                      {safeName}\r\n                    </Paragraph>\r\n                  </Block>\r\n                  <Block margin=\"lg\">\r\n                    <Paragraph color=\"disabled\" noMargin size=\"sm\">\r\n                      Any transaction requires the confirmation of:\r\n                    </Paragraph>\r\n                    <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\r\n                      {`${values.threshold} out of ${(owners?.length || 0) + 1} owner(s)`}\r\n                    </Paragraph>\r\n                  </Block>\r\n                </Block>\r\n              </Col>\r\n              <Col className={classes.owners} layout=\"column\" xs={8}>\r\n                <Row className={classes.ownersTitle}>\r\n                  <Paragraph color=\"primary\" noMargin size=\"lg\">\r\n                    {`${(owners?.length || 0) + 1} Safe owner(s)`}\r\n                  </Paragraph>\r\n                </Row>\r\n                <Hairline />\r\n                {owners?.map((owner) => (\r\n                  <React.Fragment key={owner.address}>\r\n                    <Row className={classes.owner}>\r\n                      <Col align=\"center\" xs={12}>\r\n                        <EthHashInfo\r\n                          hash={owner.address}\r\n                          name={owner.name}\r\n                          showCopyBtn\r\n                          showAvatar\r\n                          explorerUrl={getExplorerInfo(owner.address)}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Hairline />\r\n                  </React.Fragment>\r\n                ))}\r\n                <Row align=\"center\" className={classes.info}>\r\n                  <Paragraph color=\"primary\" noMargin size=\"md\" weight=\"bolder\">\r\n                    ADDING NEW OWNER &darr;\r\n                  </Paragraph>\r\n                </Row>\r\n                <Hairline />\r\n                <Row className={classes.selectedOwner}>\r\n                  <Col align=\"center\" xs={12}>\r\n                    <EthHashInfo\r\n                      hash={values.ownerAddress}\r\n                      name={values.ownerName}\r\n                      showCopyBtn\r\n                      showAvatar\r\n                      explorerUrl={getExplorerInfo(values.ownerAddress)}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Hairline />\r\n              </Col>\r\n            </Row>\r\n          </Block>\r\n          <Hairline />\r\n\r\n          {/* Tx Parameters */}\r\n          <TxParametersDetail\r\n            txParameters={txParameters}\r\n            onEdit={toggleEditMode}\r\n            compact={false}\r\n            isTransactionCreation={isCreation}\r\n            isTransactionExecution={isExecution}\r\n            isOffChainSignature={isOffChainSignature}\r\n          />\r\n\r\n          <Block className={classes.gasCostsContainer}>\r\n            <TransactionFees\r\n              gasCostFormatted={gasCostFormatted}\r\n              isExecution={isExecution}\r\n              isCreation={isCreation}\r\n              isOffChainSignature={isOffChainSignature}\r\n              txEstimationExecutionStatus={txEstimationExecutionStatus}\r\n            />\r\n          </Block>\r\n          <Hairline />\r\n          <Row align=\"center\" className={classes.buttonRow}>\r\n            <Modal.Footer.Buttons\r\n              cancelButtonProps={{ onClick: onClickBack, text: 'Back' }}\r\n              confirmButtonProps={{\r\n                onClick: () => onSubmit(txParameters),\r\n                status: buttonStatus,\r\n                text: txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : undefined,\r\n                testId: ADD_OWNER_SUBMIT_BTN_TEST_ID,\r\n              }}\r\n            />\r\n          </Row>\r\n        </>\r\n      )}\r\n    </EditableTxParameters>\r\n  )\r\n}\r\n","import { lg, md, secondaryText, sm } from 'src/theme/variables'\r\nimport { createStyles } from '@material-ui/core'\r\n\r\nexport const styles = createStyles({\r\n  heading: {\r\n    padding: `${sm} ${lg}`,\r\n    justifyContent: 'flex-start',\r\n    boxSizing: 'border-box',\r\n    height: '74px',\r\n  },\r\n  annotation: {\r\n    color: secondaryText,\r\n    marginRight: 'auto',\r\n    marginLeft: '20px',\r\n    lineHeight: 'normal',\r\n  },\r\n  manage: {\r\n    fontSize: lg,\r\n  },\r\n  closeIcon: {\r\n    height: '35px',\r\n    width: '35px',\r\n  },\r\n  headingText: {\r\n    fontSize: md,\r\n  },\r\n  formContainer: {\r\n    padding: `${md} ${lg}`,\r\n    minHeight: '340px',\r\n  },\r\n  ownersText: {\r\n    marginLeft: sm,\r\n  },\r\n  buttonRow: {\r\n    height: '84px',\r\n    justifyContent: 'center',\r\n    gap: '16px',\r\n  },\r\n  inputRow: {\r\n    position: 'relative',\r\n  },\r\n  errorText: {\r\n    position: 'absolute',\r\n    bottom: '-25px',\r\n  },\r\n})\r\n","import IconButton from '@material-ui/core/IconButton'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Close from '@material-ui/icons/Close'\r\nimport React, { ReactElement } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { styles } from './style'\r\n\r\nimport Field from 'src/components/forms/Field'\r\nimport GnoForm from 'src/components/forms/GnoForm'\r\nimport SelectField from 'src/components/forms/SelectField'\r\nimport { composeValidators, maxValue, minValue, mustBeInteger, required } from 'src/components/forms/validator'\r\nimport Block from 'src/components/layout/Block'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { safeOwnersSelector, safeThresholdSelector } from 'src/logic/safe/store/selectors'\r\nimport { Modal } from 'src/components/Modal'\r\n\r\nexport const ADD_OWNER_THRESHOLD_NEXT_BTN_TEST_ID = 'add-owner-threshold-next-btn'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\ntype SubmitProps = {\r\n  threshold: number\r\n}\r\n\r\ntype ThresholdValues = {\r\n  threshold: string\r\n}\r\n\r\ntype Props = {\r\n  onClickBack: () => void\r\n  onClose: () => void\r\n  onSubmit: (values: SubmitProps) => void\r\n  initialValues: ThresholdValues\r\n}\r\n\r\nexport const ThresholdForm = ({ onClickBack, onClose, onSubmit, initialValues }: Props): ReactElement => {\r\n  const classes = useStyles()\r\n  const threshold = useSelector(safeThresholdSelector) as number\r\n  const owners = useSelector(safeOwnersSelector)\r\n  const numOptions = owners ? owners.length + 1 : 0\r\n\r\n  const handleSubmit = (values: SubmitProps) => {\r\n    onSubmit(values)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row align=\"center\" className={classes.heading} grow>\r\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\r\n          Add new owner\r\n        </Paragraph>\r\n        <Paragraph className={classes.annotation}>2 of 3</Paragraph>\r\n        <IconButton disableRipple onClick={onClose}>\r\n          <Close className={classes.closeIcon} />\r\n        </IconButton>\r\n      </Row>\r\n      <Hairline />\r\n      <GnoForm initialValues={{ threshold: initialValues.threshold || threshold.toString() }} onSubmit={handleSubmit}>\r\n        {() => (\r\n          <>\r\n            <Block className={classes.formContainer}>\r\n              <Row>\r\n                <Paragraph className={classes.headingText} weight=\"bolder\">\r\n                  Set the required owner confirmations:\r\n                </Paragraph>\r\n              </Row>\r\n              <Row>\r\n                <Paragraph weight=\"bolder\">Any transaction requires the confirmation of:</Paragraph>\r\n              </Row>\r\n              <Row align=\"center\" className={classes.inputRow} margin=\"xl\">\r\n                <Col xs={2}>\r\n                  <Field\r\n                    data-testid=\"threshold-select-input\"\r\n                    name=\"threshold\"\r\n                    render={(props) => (\r\n                      <>\r\n                        <SelectField {...props} disableError>\r\n                          {[...Array(Number(numOptions))].map((x, index) => (\r\n                            <MenuItem key={index} value={`${index + 1}`}>\r\n                              {index + 1}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </SelectField>\r\n                        {props.meta.error && props.meta.touched && (\r\n                          <Paragraph className={classes.errorText} color=\"error\" noMargin>\r\n                            {props.meta.error}\r\n                          </Paragraph>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                    validate={composeValidators(required, mustBeInteger, minValue(1), maxValue(numOptions))}\r\n                  />\r\n                </Col>\r\n                <Col xs={10}>\r\n                  <Paragraph className={classes.ownersText} color=\"primary\" noMargin size=\"lg\">\r\n                    out of {numOptions} owner(s)\r\n                  </Paragraph>\r\n                </Col>\r\n              </Row>\r\n            </Block>\r\n            <Hairline />\r\n            <Row align=\"center\" className={classes.buttonRow}>\r\n              <Modal.Footer.Buttons\r\n                cancelButtonProps={{ onClick: onClickBack, text: 'Back' }}\r\n                confirmButtonProps={{\r\n                  type: 'submit',\r\n                  text: 'Review',\r\n                  testId: ADD_OWNER_THRESHOLD_NEXT_BTN_TEST_ID,\r\n                }}\r\n              />\r\n            </Row>\r\n          </>\r\n        )}\r\n      </GnoForm>\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Modal from 'src/components/Modal'\r\nimport { addressBookAddOrUpdate } from 'src/logic/addressBook/store/actions'\r\nimport { getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\r\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\r\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\r\nimport { safeParamAddressFromStateSelector } from 'src/logic/safe/store/selectors'\r\nimport { checksumAddress } from 'src/utils/checksumAddress'\r\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\r\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\r\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\r\n\r\nimport { OwnerForm } from './screens/OwnerForm'\r\nimport { ReviewAddOwner } from './screens/Review'\r\nimport { ThresholdForm } from './screens/ThresholdForm'\r\n\r\nexport type OwnerValues = {\r\n  ownerAddress: string\r\n  ownerName: string\r\n  threshold: string\r\n}\r\n\r\nexport const sendAddOwner = async (\r\n  values: OwnerValues,\r\n  safeAddress: string,\r\n  txParameters: TxParameters,\r\n  dispatch: Dispatch,\r\n): Promise<void> => {\r\n  const gnosisSafe = getGnosisSafeInstanceAt(safeAddress)\r\n  const txData = gnosisSafe.methods.addOwnerWithThreshold(values.ownerAddress, values.threshold).encodeABI()\r\n\r\n  const txHash = await dispatch(\r\n    createTransaction({\r\n      safeAddress,\r\n      to: safeAddress,\r\n      valueInWei: '0',\r\n      txData,\r\n      txNonce: txParameters.safeNonce,\r\n      safeTxGas: txParameters.safeTxGas ? Number(txParameters.safeTxGas) : undefined,\r\n      ethParameters: txParameters,\r\n      notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\r\n    }),\r\n  )\r\n\r\n  if (txHash) {\r\n    dispatch(addressBookAddOrUpdate(makeAddressBookEntry({ address: values.ownerAddress, name: values.ownerName })))\r\n  }\r\n}\r\n\r\ntype Props = {\r\n  isOpen: boolean\r\n  onClose: () => void\r\n}\r\n\r\nexport const AddOwnerModal = ({ isOpen, onClose }: Props): React.ReactElement => {\r\n  const [activeScreen, setActiveScreen] = useState('selectOwner')\r\n  const [values, setValues] = useState<OwnerValues>({ ownerName: '', ownerAddress: '', threshold: '' })\r\n  const dispatch = useDispatch()\r\n  const safeAddress = useSelector(safeParamAddressFromStateSelector)\r\n\r\n  useEffect(\r\n    () => () => {\r\n      setActiveScreen('selectOwner')\r\n      setValues({ ownerName: '', ownerAddress: '', threshold: '' })\r\n    },\r\n    [isOpen],\r\n  )\r\n\r\n  const onClickBack = () => {\r\n    if (activeScreen === 'reviewAddOwner') {\r\n      setActiveScreen('selectThreshold')\r\n    } else if (activeScreen === 'selectThreshold') {\r\n      setActiveScreen('selectOwner')\r\n    }\r\n  }\r\n\r\n  const ownerSubmitted = (newValues) => {\r\n    setValues((stateValues) => ({\r\n      ...stateValues,\r\n      ownerName: newValues.ownerName,\r\n      ownerAddress: checksumAddress(newValues.ownerAddress),\r\n    }))\r\n    setActiveScreen('selectThreshold')\r\n  }\r\n\r\n  const thresholdSubmitted = (newValues) => {\r\n    setValues((stateValues) => ({\r\n      ...stateValues,\r\n      threshold: newValues.threshold,\r\n    }))\r\n    setActiveScreen('reviewAddOwner')\r\n  }\r\n\r\n  const onAddOwner = async (txParameters: TxParameters) => {\r\n    onClose()\r\n\r\n    try {\r\n      await sendAddOwner(values, safeAddress, txParameters, dispatch)\r\n      dispatch(addressBookAddOrUpdate(makeAddressBookEntry({ name: values.ownerName, address: values.ownerAddress })))\r\n    } catch (error) {\r\n      console.error('Error while removing an owner', error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      description=\"Add owner to Safe\"\r\n      handleClose={onClose}\r\n      open={isOpen}\r\n      paperClassName=\"bigger-modal-window\"\r\n      title=\"Add owner to Safe\"\r\n    >\r\n      <>\r\n        {activeScreen === 'selectOwner' && (\r\n          <OwnerForm initialValues={values} onClose={onClose} onSubmit={ownerSubmitted} />\r\n        )}\r\n        {activeScreen === 'selectThreshold' && (\r\n          <ThresholdForm\r\n            onClickBack={onClickBack}\r\n            initialValues={{ threshold: values.threshold }}\r\n            onClose={onClose}\r\n            onSubmit={thresholdSubmitted}\r\n          />\r\n        )}\r\n        {activeScreen === 'reviewAddOwner' && (\r\n          <ReviewAddOwner onClickBack={onClickBack} onClose={onClose} onSubmit={onAddOwner} values={values} />\r\n        )}\r\n      </>\r\n    </Modal>\r\n  )\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core'\r\n\r\nimport { lg, md } from 'src/theme/variables'\r\n\r\nexport const useStyles = makeStyles(\r\n  createStyles({\r\n    heading: {\r\n      padding: lg,\r\n      justifyContent: 'space-between',\r\n      boxSizing: 'border-box',\r\n      height: '74px',\r\n    },\r\n    manage: {\r\n      fontSize: lg,\r\n    },\r\n    container: {\r\n      padding: `${md} ${lg}`,\r\n      minHeight: '200px',\r\n    },\r\n    close: {\r\n      height: '35px',\r\n      width: '35px',\r\n    },\r\n  }),\r\n)\r\n","import IconButton from '@material-ui/core/IconButton'\r\nimport Close from '@material-ui/icons/Close'\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport Field from 'src/components/forms/Field'\r\nimport GnoForm from 'src/components/forms/GnoForm'\r\nimport TextField from 'src/components/forms/TextField'\r\nimport { composeValidators, required, validAddressBookName } from 'src/components/forms/validator'\r\nimport Block from 'src/components/layout/Block'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport Modal, { Modal as GenericModal } from 'src/components/Modal'\r\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\r\nimport { addressBookAddOrUpdate } from 'src/logic/addressBook/store/actions'\r\nimport { NOTIFICATIONS } from 'src/logic/notifications'\r\nimport enqueueSnackbar from 'src/logic/notifications/store/actions/enqueueSnackbar'\r\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\r\n\r\nimport { useStyles } from './style'\r\nimport { getExplorerInfo } from 'src/config'\r\nimport { EthHashInfo } from '@gnosis.pm/safe-react-components'\r\n\r\nexport const RENAME_OWNER_INPUT_TEST_ID = 'rename-owner-input'\r\nexport const SAVE_OWNER_CHANGES_BTN_TEST_ID = 'save-owner-changes-btn'\r\n\r\ntype OwnProps = {\r\n  isOpen: boolean\r\n  onClose: () => void\r\n  owner: OwnerData\r\n}\r\n\r\nexport const EditOwnerModal = ({ isOpen, onClose, owner }: OwnProps): React.ReactElement => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleSubmit = ({ ownerName }: { ownerName: string }): void => {\r\n    // Update the value only if the ownerName really changed\r\n    if (ownerName !== owner.name) {\r\n      dispatch(addressBookAddOrUpdate(makeAddressBookEntry({ address: owner.address, name: ownerName })))\r\n      dispatch(enqueueSnackbar(NOTIFICATIONS.OWNER_NAME_CHANGE_EXECUTED_MSG))\r\n    }\r\n    onClose()\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      description=\"Edit owner from Safe\"\r\n      handleClose={onClose}\r\n      open={isOpen}\r\n      paperClassName=\"smaller-modal-window\"\r\n      title=\"Edit owner from Safe\"\r\n    >\r\n      <Row align=\"center\" className={classes.heading} grow>\r\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\r\n          Edit owner name\r\n        </Paragraph>\r\n        <IconButton disableRipple onClick={onClose}>\r\n          <Close className={classes.close} />\r\n        </IconButton>\r\n      </Row>\r\n      <Hairline />\r\n      <GnoForm onSubmit={handleSubmit} subscription={{ pristine: true }}>\r\n        {(...args) => {\r\n          const pristine = args[2].pristine\r\n          return (\r\n            <>\r\n              <Block className={classes.container}>\r\n                <Row margin=\"md\">\r\n                  <Field\r\n                    component={TextField}\r\n                    initialValue={owner.name}\r\n                    name=\"ownerName\"\r\n                    placeholder=\"Owner name*\"\r\n                    testId={RENAME_OWNER_INPUT_TEST_ID}\r\n                    text=\"Owner name*\"\r\n                    type=\"text\"\r\n                    validate={composeValidators(required, validAddressBookName)}\r\n                  />\r\n                </Row>\r\n                <Row>\r\n                  <Block justify=\"center\">\r\n                    <EthHashInfo\r\n                      hash={owner.address}\r\n                      showCopyBtn\r\n                      showAvatar\r\n                      explorerUrl={getExplorerInfo(owner.address)}\r\n                    />\r\n                  </Block>\r\n                </Row>\r\n              </Block>\r\n              <GenericModal.Footer>\r\n                <GenericModal.Footer.Buttons\r\n                  cancelButtonProps={{ onClick: onClose }}\r\n                  confirmButtonProps={{ disabled: pristine, testId: SAVE_OWNER_CHANGES_BTN_TEST_ID, text: 'Save' }}\r\n                />\r\n              </GenericModal.Footer>\r\n            </>\r\n          )\r\n        }}\r\n      </GnoForm>\r\n    </Modal>\r\n  )\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core'\r\n\r\nimport { lg, md, secondaryText, sm } from 'src/theme/variables'\r\n\r\nexport const useStyles = makeStyles(\r\n  createStyles({\r\n    heading: {\r\n      padding: `${sm} ${lg}`,\r\n      justifyContent: 'flex-start',\r\n      boxSizing: 'border-box',\r\n      height: '74px',\r\n    },\r\n    annotation: {\r\n      lineHeight: 'normal',\r\n      color: secondaryText,\r\n      marginRight: 'auto',\r\n      marginLeft: '20px',\r\n    },\r\n    manage: {\r\n      fontSize: lg,\r\n    },\r\n    closeIcon: {\r\n      height: '35px',\r\n      width: '35px',\r\n    },\r\n    formContainer: {\r\n      padding: `${md} ${lg}`,\r\n      minHeight: '340px',\r\n    },\r\n  }),\r\n)\r\n","import IconButton from '@material-ui/core/IconButton'\r\nimport Close from '@material-ui/icons/Close'\r\nimport React, { ReactElement } from 'react'\r\n\r\nimport Block from 'src/components/layout/Block'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\r\n\r\nimport { useStyles } from './style'\r\nimport { EthHashInfo } from '@gnosis.pm/safe-react-components'\r\nimport { getExplorerInfo } from 'src/config'\r\nimport { Modal } from 'src/components/Modal'\r\n\r\nexport const REMOVE_OWNER_MODAL_NEXT_BTN_TEST_ID = 'remove-owner-next-btn'\r\n\r\ninterface CheckOwnerProps {\r\n  onClose: () => void\r\n  onSubmit: () => void\r\n  owner: OwnerData\r\n}\r\n\r\nexport const CheckOwner = ({ onClose, onSubmit, owner }: CheckOwnerProps): ReactElement => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <>\r\n      <Row align=\"center\" className={classes.heading} grow>\r\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\r\n          Remove owner\r\n        </Paragraph>\r\n        <Paragraph className={classes.annotation}>1 of 3</Paragraph>\r\n        <IconButton disableRipple onClick={onClose}>\r\n          <Close className={classes.closeIcon} />\r\n        </IconButton>\r\n      </Row>\r\n      <Hairline />\r\n      <Block className={classes.formContainer}>\r\n        <Row margin=\"md\">\r\n          <Paragraph size=\"lg\">Review the owner you want to remove from the active Safe:</Paragraph>\r\n        </Row>\r\n        <Row>\r\n          <Col align=\"center\" xs={12}>\r\n            <EthHashInfo\r\n              hash={owner.address}\r\n              name={owner.name}\r\n              showCopyBtn\r\n              showAvatar\r\n              explorerUrl={getExplorerInfo(owner.address)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Block>\r\n      <Modal.Footer>\r\n        <Modal.Footer.Buttons\r\n          cancelButtonProps={{ onClick: onClose }}\r\n          confirmButtonProps={{ onClick: onSubmit, testId: REMOVE_OWNER_MODAL_NEXT_BTN_TEST_ID, text: 'Next' }}\r\n        />\r\n      </Modal.Footer>\r\n    </>\r\n  )\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core'\r\n\r\nimport { background, border, lg, secondaryText, sm } from 'src/theme/variables'\r\n\r\nexport const useStyles = makeStyles(\r\n  createStyles({\r\n    root: {\r\n      height: '372px',\r\n    },\r\n    heading: {\r\n      padding: `${sm} ${lg}`,\r\n      justifyContent: 'flex-start',\r\n      boxSizing: 'border-box',\r\n      height: '74px',\r\n    },\r\n    annotation: {\r\n      lineHeight: 'normal',\r\n      color: secondaryText,\r\n      marginRight: 'auto',\r\n      marginLeft: '20px',\r\n    },\r\n    manage: {\r\n      fontSize: lg,\r\n    },\r\n    closeIcon: {\r\n      height: '35px',\r\n      width: '35px',\r\n    },\r\n    info: {\r\n      backgroundColor: background,\r\n      padding: sm,\r\n      justifyContent: 'center',\r\n      textAlign: 'center',\r\n      flexDirection: 'column',\r\n    },\r\n    details: {\r\n      padding: lg,\r\n      borderRight: `solid 1px ${border}`,\r\n      height: '100%',\r\n    },\r\n    owners: {\r\n      overflow: 'auto',\r\n      height: '100%',\r\n    },\r\n    ownersTitle: {\r\n      padding: lg,\r\n    },\r\n    owner: {\r\n      padding: sm,\r\n      alignItems: 'center',\r\n    },\r\n    name: {\r\n      textOverflow: 'ellipsis',\r\n      overflow: 'hidden',\r\n    },\r\n    selectedOwner: {\r\n      padding: sm,\r\n      alignItems: 'center',\r\n      backgroundColor: '#ffe6ea',\r\n    },\r\n    gasCostsContainer: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      textAlign: 'center',\r\n      width: '100%',\r\n      backgroundColor: background,\r\n    },\r\n  }),\r\n)\r\n","import IconButton from '@material-ui/core/IconButton'\r\nimport Close from '@material-ui/icons/Close'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { EthHashInfo } from '@gnosis.pm/safe-react-components'\r\n\r\nimport { getExplorerInfo, getNetworkId } from 'src/config'\r\nimport Block from 'src/components/layout/Block'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { getGnosisSafeInstanceAt, SENTINEL_ADDRESS } from 'src/logic/contracts/safeContracts'\r\nimport {\r\n  safeOwnersWithAddressBookDataSelector,\r\n  safeParamAddressFromStateSelector,\r\n} from 'src/logic/safe/store/selectors'\r\nimport { useSafeName } from 'src/logic/addressBook/hooks/useSafeName'\r\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\r\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\r\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\r\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\r\n\r\nimport { useStyles } from './style'\r\nimport { Modal } from 'src/components/Modal'\r\nimport { TransactionFees } from 'src/components/TransactionsFees'\r\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\r\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\r\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\r\n\r\nexport const REMOVE_OWNER_REVIEW_BTN_TEST_ID = 'remove-owner-review-btn'\r\n\r\nconst chainId = getNetworkId()\r\n\r\ntype ReviewRemoveOwnerProps = {\r\n  onClickBack: () => void\r\n  onClose: () => void\r\n  onSubmit: (txParameters: TxParameters) => void\r\n  owner: OwnerData\r\n  threshold?: number\r\n}\r\n\r\nexport const ReviewRemoveOwnerModal = ({\r\n  onClickBack,\r\n  onClose,\r\n  onSubmit,\r\n  owner,\r\n  threshold = 1,\r\n}: ReviewRemoveOwnerProps): React.ReactElement => {\r\n  const classes = useStyles()\r\n  const [data, setData] = useState('')\r\n  const safeAddress = useSelector(safeParamAddressFromStateSelector)\r\n  const safeName = useSafeName(safeAddress)\r\n  const owners = useSelector((state) => safeOwnersWithAddressBookDataSelector(state, chainId))\r\n  const numOptions = owners ? owners.length - 1 : 0\r\n  const [manualSafeTxGas, setManualSafeTxGas] = useState(0)\r\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\r\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\r\n\r\n  const {\r\n    gasLimit,\r\n    gasEstimation,\r\n    gasPriceFormatted,\r\n    gasCostFormatted,\r\n    txEstimationExecutionStatus,\r\n    isExecution,\r\n    isCreation,\r\n    isOffChainSignature,\r\n  } = useEstimateTransactionGas({\r\n    txData: data,\r\n    txRecipient: safeAddress,\r\n    safeTxGas: manualSafeTxGas,\r\n    manualGasPrice,\r\n    manualGasLimit,\r\n  })\r\n\r\n  const [buttonStatus] = useEstimationStatus(txEstimationExecutionStatus)\r\n\r\n  useEffect(() => {\r\n    let isCurrent = true\r\n\r\n    if (!threshold) {\r\n      console.error(\"Threshold value was not define, tx can't be executed\")\r\n      return\r\n    }\r\n\r\n    const calculateRemoveOwnerData = async () => {\r\n      try {\r\n        // FixMe: if the order returned by the service is the same as in the contracts\r\n        //  the data lookup can be removed from here\r\n        const gnosisSafe = getGnosisSafeInstanceAt(safeAddress)\r\n        const safeOwners = await gnosisSafe.methods.getOwners().call()\r\n        const index = safeOwners.findIndex((ownerAddress) => sameAddress(ownerAddress, owner.address))\r\n        const prevAddress = index === 0 ? SENTINEL_ADDRESS : safeOwners[index - 1]\r\n        const txData = gnosisSafe.methods.removeOwner(prevAddress, owner.address, threshold).encodeABI()\r\n\r\n        if (isCurrent) {\r\n          setData(txData)\r\n        }\r\n      } catch (error) {\r\n        console.error('Error calculating ERC721 transfer data:', error.message)\r\n      }\r\n    }\r\n    calculateRemoveOwnerData()\r\n\r\n    return () => {\r\n      isCurrent = false\r\n    }\r\n  }, [safeAddress, owner.address, threshold])\r\n\r\n  const closeEditModalCallback = (txParameters: TxParameters) => {\r\n    const oldGasPrice = Number(gasPriceFormatted)\r\n    const newGasPrice = Number(txParameters.ethGasPrice)\r\n    const oldSafeTxGas = Number(gasEstimation)\r\n    const newSafeTxGas = Number(txParameters.safeTxGas)\r\n\r\n    if (newGasPrice && oldGasPrice !== newGasPrice) {\r\n      setManualGasPrice(txParameters.ethGasPrice)\r\n    }\r\n\r\n    if (txParameters.ethGasLimit && gasLimit !== txParameters.ethGasLimit) {\r\n      setManualGasLimit(txParameters.ethGasLimit)\r\n    }\r\n\r\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\r\n      setManualSafeTxGas(newSafeTxGas)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <EditableTxParameters\r\n      isOffChainSignature={isOffChainSignature}\r\n      isExecution={isExecution}\r\n      ethGasLimit={gasLimit}\r\n      ethGasPrice={gasPriceFormatted}\r\n      safeTxGas={gasEstimation.toString()}\r\n      closeEditModalCallback={closeEditModalCallback}\r\n    >\r\n      {(txParameters, toggleEditMode) => (\r\n        <>\r\n          <Row align=\"center\" className={classes.heading} grow>\r\n            <Paragraph className={classes.manage} noMargin weight=\"bolder\">\r\n              Remove owner\r\n            </Paragraph>\r\n            <Paragraph className={classes.annotation}>3 of 3</Paragraph>\r\n            <IconButton disableRipple onClick={onClose}>\r\n              <Close className={classes.closeIcon} />\r\n            </IconButton>\r\n          </Row>\r\n          <Hairline />\r\n          <Block>\r\n            <Row className={classes.root}>\r\n              {/* Details */}\r\n              <Col layout=\"column\" xs={4}>\r\n                <Block className={classes.details}>\r\n                  <Block margin=\"lg\">\r\n                    <Paragraph color=\"primary\" noMargin size=\"lg\">\r\n                      Details\r\n                    </Paragraph>\r\n                  </Block>\r\n                  <Block margin=\"lg\">\r\n                    <Paragraph color=\"disabled\" noMargin size=\"sm\">\r\n                      Safe name\r\n                    </Paragraph>\r\n                    <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\r\n                      {safeName}\r\n                    </Paragraph>\r\n                  </Block>\r\n                  <Block margin=\"lg\">\r\n                    <Paragraph color=\"disabled\" noMargin size=\"sm\">\r\n                      Any transaction requires the confirmation of:\r\n                    </Paragraph>\r\n                    <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\r\n                      {`${threshold} out of ${numOptions} owner(s)`}\r\n                    </Paragraph>\r\n                  </Block>\r\n                </Block>\r\n              </Col>\r\n              {/* Owners */}\r\n              <Col className={classes.owners} layout=\"column\" xs={8}>\r\n                <Row className={classes.ownersTitle}>\r\n                  <Paragraph color=\"primary\" noMargin size=\"lg\">\r\n                    {`${numOptions} Safe owner(s)`}\r\n                  </Paragraph>\r\n                </Row>\r\n                <Hairline />\r\n                {owners?.map(\r\n                  (safeOwner) =>\r\n                    !sameAddress(safeOwner.address, owner.address) && (\r\n                      <React.Fragment key={safeOwner.address}>\r\n                        <Row className={classes.owner}>\r\n                          <Col align=\"center\" xs={12}>\r\n                            <EthHashInfo\r\n                              hash={safeOwner.address}\r\n                              name={safeOwner.name}\r\n                              showCopyBtn\r\n                              showAvatar\r\n                              explorerUrl={getExplorerInfo(safeOwner.address)}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                        <Hairline />\r\n                      </React.Fragment>\r\n                    ),\r\n                )}\r\n                <Row align=\"center\" className={classes.info}>\r\n                  <Paragraph color=\"primary\" noMargin size=\"md\" weight=\"bolder\">\r\n                    REMOVING OWNER &darr;\r\n                  </Paragraph>\r\n                </Row>\r\n                <Hairline />\r\n                <Row className={classes.selectedOwner}>\r\n                  <Col align=\"center\" xs={12}>\r\n                    <EthHashInfo\r\n                      hash={owner.address}\r\n                      name={owner.name}\r\n                      showCopyBtn\r\n                      showAvatar\r\n                      explorerUrl={getExplorerInfo(owner.address)}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Hairline />\r\n              </Col>\r\n            </Row>\r\n          </Block>\r\n          <Hairline />\r\n\r\n          {/* Tx Parameters */}\r\n          <TxParametersDetail\r\n            txParameters={txParameters}\r\n            onEdit={toggleEditMode}\r\n            compact={false}\r\n            isTransactionCreation={isCreation}\r\n            isTransactionExecution={isExecution}\r\n            isOffChainSignature={isOffChainSignature}\r\n          />\r\n\r\n          {txEstimationExecutionStatus === EstimationStatus.LOADING ? null : (\r\n            <Block className={classes.gasCostsContainer}>\r\n              <TransactionFees\r\n                gasCostFormatted={gasCostFormatted}\r\n                isExecution={isExecution}\r\n                isCreation={isCreation}\r\n                isOffChainSignature={isOffChainSignature}\r\n                txEstimationExecutionStatus={txEstimationExecutionStatus}\r\n              />\r\n            </Block>\r\n          )}\r\n          <Modal.Footer withoutBorder>\r\n            <Modal.Footer.Buttons\r\n              cancelButtonProps={{ onClick: onClickBack, text: 'Back' }}\r\n              confirmButtonProps={{\r\n                onClick: () => onSubmit(txParameters),\r\n                status: buttonStatus,\r\n                text: txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : undefined,\r\n                type: 'submit',\r\n                testId: REMOVE_OWNER_REVIEW_BTN_TEST_ID,\r\n              }}\r\n            />\r\n          </Modal.Footer>\r\n        </>\r\n      )}\r\n    </EditableTxParameters>\r\n  )\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { lg, md, secondaryText, sm } from 'src/theme/variables'\r\n\r\nexport const useStyles = makeStyles(\r\n  createStyles({\r\n    heading: {\r\n      padding: `${sm} ${lg}`,\r\n      justifyContent: 'flex-start',\r\n      boxSizing: 'border-box',\r\n      height: '74px',\r\n    },\r\n    manage: {\r\n      fontSize: lg,\r\n    },\r\n    annotation: {\r\n      lineHeight: 'normal',\r\n      color: secondaryText,\r\n      marginRight: 'auto',\r\n      marginLeft: '20px',\r\n    },\r\n    closeIcon: {\r\n      height: '35px',\r\n      width: '35px',\r\n    },\r\n    headingText: {\r\n      fontSize: md,\r\n    },\r\n    formContainer: {\r\n      padding: `${md} ${lg}`,\r\n      minHeight: '340px',\r\n    },\r\n    ownersText: {\r\n      marginLeft: sm,\r\n    },\r\n    inputRow: {\r\n      position: 'relative',\r\n    },\r\n    errorText: {\r\n      position: 'absolute',\r\n      bottom: '-25px',\r\n    },\r\n  }),\r\n)\r\n","import IconButton from '@material-ui/core/IconButton'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Close from '@material-ui/icons/Close'\r\nimport React, { ReactElement } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { useStyles } from './style'\r\n\r\nimport Field from 'src/components/forms/Field'\r\nimport GnoForm from 'src/components/forms/GnoForm'\r\nimport SelectField from 'src/components/forms/SelectField'\r\nimport { composeValidators, maxValue, minValue, mustBeInteger, required } from 'src/components/forms/validator'\r\nimport Block from 'src/components/layout/Block'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { Modal } from 'src/components/Modal'\r\nimport { safeOwnersSelector, safeThresholdSelector } from 'src/logic/safe/store/selectors'\r\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\r\n\r\nexport const REMOVE_OWNER_THRESHOLD_NEXT_BTN_TEST_ID = 'remove-owner-threshold-next-btn'\r\n\r\ntype ThresholdValues = {\r\n  threshold: string\r\n}\r\n\r\ntype Props = {\r\n  onClickBack: () => void\r\n  onClose: () => void\r\n  onSubmit: (txParameters: TxParameters) => void\r\n  initialValues: ThresholdValues\r\n}\r\n\r\nexport const ThresholdForm = ({ onClickBack, onClose, onSubmit, initialValues }: Props): ReactElement => {\r\n  const classes = useStyles()\r\n  const owners = useSelector(safeOwnersSelector)\r\n  const ownersCount = owners?.length ?? 0\r\n  const threshold = useSelector(safeThresholdSelector) as number\r\n  const handleSubmit = (values) => {\r\n    onSubmit(values)\r\n  }\r\n  const defaultThreshold = threshold > 1 && threshold === ownersCount ? threshold - 1 : threshold\r\n\r\n  return (\r\n    <>\r\n      <Row align=\"center\" className={classes.heading} grow>\r\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\r\n          Remove owner\r\n        </Paragraph>\r\n        <Paragraph className={classes.annotation}>2 of 3</Paragraph>\r\n        <IconButton disableRipple onClick={onClose}>\r\n          <Close className={classes.closeIcon} />\r\n        </IconButton>\r\n      </Row>\r\n      <Hairline />\r\n      <GnoForm\r\n        initialValues={{ threshold: initialValues.threshold || defaultThreshold.toString() }}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {() => {\r\n          const numOptions = ownersCount > 1 ? ownersCount - 1 : 1\r\n\r\n          return (\r\n            <>\r\n              <Block className={classes.formContainer}>\r\n                <Row>\r\n                  <Paragraph className={classes.headingText} weight=\"bolder\">\r\n                    Set the required owner confirmations:\r\n                  </Paragraph>\r\n                </Row>\r\n                <Row>\r\n                  <Paragraph weight=\"bolder\">Any transaction requires the confirmation of:</Paragraph>\r\n                </Row>\r\n                <Row align=\"center\" className={classes.inputRow} margin=\"xl\">\r\n                  <Col xs={2}>\r\n                    <Field\r\n                      data-testid=\"threshold-select-input\"\r\n                      name=\"threshold\"\r\n                      render={(props) => (\r\n                        <>\r\n                          <SelectField {...props} disableError>\r\n                            {[...Array(Number(numOptions))].map((x, index) => (\r\n                              <MenuItem key={index} value={`${index + 1}`}>\r\n                                {index + 1}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </SelectField>\r\n                          {props.meta.error && props.meta.touched && (\r\n                            <Paragraph className={classes.errorText} color=\"error\" noMargin>\r\n                              {props.meta.error}\r\n                            </Paragraph>\r\n                          )}\r\n                        </>\r\n                      )}\r\n                      validate={composeValidators(required, mustBeInteger, minValue(1), maxValue(numOptions))}\r\n                    />\r\n                  </Col>\r\n                  <Col xs={10}>\r\n                    <Paragraph className={classes.ownersText} color=\"primary\" noMargin size=\"lg\">\r\n                      out of {ownersCount ? ownersCount - 1 : 0} owner(s)\r\n                    </Paragraph>\r\n                  </Col>\r\n                </Row>\r\n              </Block>\r\n              <Modal.Footer>\r\n                <Modal.Footer.Buttons\r\n                  cancelButtonProps={{ onClick: onClickBack, text: 'Back' }}\r\n                  confirmButtonProps={{ testId: REMOVE_OWNER_THRESHOLD_NEXT_BTN_TEST_ID, text: 'Review' }}\r\n                />\r\n              </Modal.Footer>\r\n            </>\r\n          )\r\n        }}\r\n      </GnoForm>\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\r\n\r\nimport { CheckOwner } from './screens/CheckOwner'\r\nimport { ReviewRemoveOwnerModal } from './screens/Review'\r\nimport { ThresholdForm } from './screens/ThresholdForm'\r\n\r\nimport Modal from 'src/components/Modal'\r\nimport { SENTINEL_ADDRESS, getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\r\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\r\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\r\nimport { safeParamAddressFromStateSelector } from 'src/logic/safe/store/selectors'\r\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\r\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\r\n\r\ntype OwnerValues = OwnerData & {\r\n  threshold: string\r\n}\r\n\r\nexport const sendRemoveOwner = async (\r\n  values: OwnerValues,\r\n  safeAddress: string,\r\n  ownerAddressToRemove: string,\r\n  ownerNameToRemove: string,\r\n  dispatch: Dispatch,\r\n  txParameters: TxParameters,\r\n): Promise<void> => {\r\n  const gnosisSafe = getGnosisSafeInstanceAt(safeAddress)\r\n  const safeOwners = await gnosisSafe.methods.getOwners().call()\r\n  const index = safeOwners.findIndex(\r\n    (ownerAddress) => ownerAddress.toLowerCase() === ownerAddressToRemove.toLowerCase(),\r\n  )\r\n  const prevAddress = index === 0 ? SENTINEL_ADDRESS : safeOwners[index - 1]\r\n  const txData = gnosisSafe.methods.removeOwner(prevAddress, ownerAddressToRemove, values.threshold).encodeABI()\r\n\r\n  dispatch(\r\n    createTransaction({\r\n      safeAddress,\r\n      to: safeAddress,\r\n      valueInWei: '0',\r\n      txData,\r\n      txNonce: txParameters.safeNonce,\r\n      safeTxGas: txParameters.safeTxGas ? Number(txParameters.safeTxGas) : undefined,\r\n      ethParameters: txParameters,\r\n      notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\r\n    }),\r\n  )\r\n}\r\n\r\ntype RemoveOwnerProps = {\r\n  isOpen: boolean\r\n  onClose: () => void\r\n  owner: OwnerData\r\n}\r\n\r\nexport const RemoveOwnerModal = ({ isOpen, onClose, owner }: RemoveOwnerProps): React.ReactElement => {\r\n  const [activeScreen, setActiveScreen] = useState('checkOwner')\r\n  const [values, setValues] = useState<OwnerValues>({ ...owner, threshold: '' })\r\n  const dispatch = useDispatch()\r\n  const safeAddress = useSelector(safeParamAddressFromStateSelector)\r\n\r\n  useEffect(\r\n    () => () => {\r\n      setActiveScreen('checkOwner')\r\n    },\r\n    [isOpen],\r\n  )\r\n\r\n  const onClickBack = () => {\r\n    if (activeScreen === 'reviewRemoveOwner') {\r\n      setActiveScreen('selectThreshold')\r\n    } else if (activeScreen === 'selectThreshold') {\r\n      setActiveScreen('checkOwner')\r\n    }\r\n  }\r\n\r\n  const ownerSubmitted = () => {\r\n    setActiveScreen('selectThreshold')\r\n  }\r\n\r\n  const thresholdSubmitted = (newValues) => {\r\n    const cpValues = { ...values, threshold: newValues.threshold }\r\n    setValues(cpValues)\r\n    setActiveScreen('reviewRemoveOwner')\r\n  }\r\n\r\n  const onRemoveOwner = (txParameters: TxParameters) => {\r\n    onClose()\r\n    sendRemoveOwner(values, safeAddress, owner.address, owner.name, dispatch, txParameters)\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      description=\"Remove owner from Safe\"\r\n      handleClose={onClose}\r\n      open={isOpen}\r\n      paperClassName=\"bigger-modal-window\"\r\n      title=\"Remove owner from Safe\"\r\n    >\r\n      <>\r\n        {activeScreen === 'checkOwner' && <CheckOwner onClose={onClose} onSubmit={ownerSubmitted} owner={owner} />}\r\n        {activeScreen === 'selectThreshold' && (\r\n          <ThresholdForm\r\n            onClickBack={onClickBack}\r\n            initialValues={{ threshold: values.threshold }}\r\n            onClose={onClose}\r\n            onSubmit={thresholdSubmitted}\r\n          />\r\n        )}\r\n        {activeScreen === 'reviewRemoveOwner' && (\r\n          <ReviewRemoveOwnerModal\r\n            onClickBack={onClickBack}\r\n            onClose={onClose}\r\n            onSubmit={onRemoveOwner}\r\n            owner={owner}\r\n            threshold={Number(values.threshold)}\r\n          />\r\n        )}\r\n      </>\r\n    </Modal>\r\n  )\r\n}\r\n","import { lg, md, secondaryText, sm } from 'src/theme/variables'\r\nimport { createStyles, makeStyles } from '@material-ui/core'\r\n\r\nexport const useStyles = makeStyles(\r\n  createStyles({\r\n    heading: {\r\n      padding: `${sm} ${lg}`,\r\n      justifyContent: 'flex-start',\r\n      boxSizing: 'border-box',\r\n      height: '74px',\r\n    },\r\n    annotation: {\r\n      color: secondaryText,\r\n      marginRight: 'auto',\r\n      marginLeft: '20px',\r\n      lineHeight: 'normal',\r\n    },\r\n    manage: {\r\n      fontSize: lg,\r\n    },\r\n    closeIcon: {\r\n      height: '35px',\r\n      width: '35px',\r\n    },\r\n    formContainer: {\r\n      padding: `${md} ${lg}`,\r\n      minHeight: '340px',\r\n    },\r\n    owner: {\r\n      alignItems: 'center',\r\n    },\r\n    address: {\r\n      marginRight: sm,\r\n    },\r\n  }),\r\n)\r\n","import IconButton from '@material-ui/core/IconButton'\r\nimport Close from '@material-ui/icons/Close'\r\nimport { Mutator } from 'final-form'\r\nimport React, { ReactElement } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { OnChange } from 'react-final-form-listeners'\r\n\r\nimport AddressInput from 'src/components/forms/AddressInput'\r\nimport Field from 'src/components/forms/Field'\r\nimport GnoForm from 'src/components/forms/GnoForm'\r\nimport TextField from 'src/components/forms/TextField'\r\nimport {\r\n  addressIsNotCurrentSafe,\r\n  composeValidators,\r\n  required,\r\n  uniqueAddress,\r\n  validAddressBookName,\r\n} from 'src/components/forms/validator'\r\nimport Block from 'src/components/layout/Block'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\r\nimport { Modal } from 'src/components/Modal'\r\nimport { safeOwnersSelector, safeParamAddressFromStateSelector } from 'src/logic/safe/store/selectors'\r\nimport { addressBookMapSelector } from 'src/logic/addressBook/store/selectors'\r\nimport { web3ReadOnly } from 'src/logic/wallets/getWeb3'\r\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\r\n\r\nimport { useStyles } from './style'\r\nimport { getExplorerInfo, getNetworkId } from 'src/config'\r\nimport { EthHashInfo } from '@gnosis.pm/safe-react-components'\r\n\r\nexport const REPLACE_OWNER_NAME_INPUT_TEST_ID = 'replace-owner-name-input'\r\nexport const REPLACE_OWNER_ADDRESS_INPUT_TEST_ID = 'replace-owner-address-testid'\r\nexport const REPLACE_OWNER_NEXT_BTN_TEST_ID = 'replace-owner-next-btn'\r\n\r\nimport { OwnerValues } from '../..'\r\n\r\nconst formMutators: Record<\r\n  string,\r\n  Mutator<{ setOwnerAddress: { address: string }; setOwnerName: { name: string } }>\r\n> = {\r\n  setOwnerAddress: (args, state, utils) => {\r\n    utils.changeValue(state, 'ownerAddress', () => args[0])\r\n  },\r\n  setOwnerName: (args, state, utils) => {\r\n    utils.changeValue(state, 'ownerName', () => args[0])\r\n  },\r\n}\r\n\r\nconst chainId = getNetworkId()\r\n\r\ntype NewOwnerProps = {\r\n  ownerAddress: string\r\n  ownerName: string\r\n}\r\n\r\ntype OwnerFormProps = {\r\n  onClose: () => void\r\n  onSubmit: (values: NewOwnerProps) => void\r\n  owner: OwnerData\r\n  initialValues?: OwnerValues\r\n}\r\n\r\nexport const OwnerForm = ({ onClose, onSubmit, owner, initialValues }: OwnerFormProps): ReactElement => {\r\n  const classes = useStyles()\r\n\r\n  const handleSubmit = (values: NewOwnerProps) => {\r\n    onSubmit(values)\r\n  }\r\n  const addressBookMap = useSelector(addressBookMapSelector)\r\n  const owners = useSelector(safeOwnersSelector)\r\n  const ownerDoesntExist = uniqueAddress(owners)\r\n\r\n  const safeAddress = useSelector(safeParamAddressFromStateSelector)\r\n  const ownerAddressIsNotSafeAddress = addressIsNotCurrentSafe(safeAddress)\r\n\r\n  return (\r\n    <>\r\n      <Row align=\"center\" className={classes.heading} grow>\r\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\r\n          Replace owner\r\n        </Paragraph>\r\n        <Paragraph className={classes.annotation}>1 of 2</Paragraph>\r\n        <IconButton disableRipple onClick={onClose}>\r\n          <Close className={classes.closeIcon} />\r\n        </IconButton>\r\n      </Row>\r\n      <Hairline />\r\n      <GnoForm\r\n        formMutators={formMutators}\r\n        onSubmit={handleSubmit}\r\n        initialValues={{\r\n          ownerName: initialValues?.name,\r\n          ownerAddress: initialValues?.address,\r\n        }}\r\n      >\r\n        {(...args) => {\r\n          const mutators = args[3]\r\n\r\n          const handleScan = (value, closeQrModal) => {\r\n            let scannedAddress = value\r\n\r\n            if (scannedAddress.startsWith('ethereum:')) {\r\n              scannedAddress = scannedAddress.replace('ethereum:', '')\r\n            }\r\n\r\n            mutators.setOwnerAddress(scannedAddress)\r\n            closeQrModal()\r\n          }\r\n\r\n          return (\r\n            <>\r\n              <Block className={classes.formContainer}>\r\n                <Row>\r\n                  <Paragraph>\r\n                    Review the owner you want to replace from the active Safe. Then specify the new owner you want to\r\n                    replace it with:\r\n                  </Paragraph>\r\n                </Row>\r\n                <Row>\r\n                  <Paragraph>Current owner</Paragraph>\r\n                </Row>\r\n                <Row className={classes.owner}>\r\n                  <Col align=\"center\" xs={12}>\r\n                    <EthHashInfo\r\n                      hash={owner.address}\r\n                      name={owner.name}\r\n                      showCopyBtn\r\n                      showAvatar\r\n                      explorerUrl={getExplorerInfo(owner.address)}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Paragraph>New owner</Paragraph>\r\n                </Row>\r\n                <Row margin=\"md\">\r\n                  <Col xs={8}>\r\n                    <Field\r\n                      component={TextField}\r\n                      name=\"ownerName\"\r\n                      placeholder=\"Owner name*\"\r\n                      testId={REPLACE_OWNER_NAME_INPUT_TEST_ID}\r\n                      text=\"Owner name*\"\r\n                      type=\"text\"\r\n                      validate={composeValidators(required, validAddressBookName)}\r\n                    />\r\n                    <OnChange name=\"ownerAddress\">\r\n                      {async (address: string) => {\r\n                        if (web3ReadOnly.utils.isAddress(address)) {\r\n                          const ownerName = addressBookMap?.[chainId]?.[address]?.name\r\n                          if (ownerName) {\r\n                            mutators.setOwnerName(ownerName)\r\n                          }\r\n                        }\r\n                      }}\r\n                    </OnChange>\r\n                  </Col>\r\n                </Row>\r\n                <Row margin=\"md\">\r\n                  <Col xs={8}>\r\n                    <AddressInput\r\n                      fieldMutator={mutators.setOwnerAddress}\r\n                      name=\"ownerAddress\"\r\n                      placeholder=\"Owner address*\"\r\n                      testId={REPLACE_OWNER_ADDRESS_INPUT_TEST_ID}\r\n                      text=\"Owner address*\"\r\n                      validators={[ownerDoesntExist, ownerAddressIsNotSafeAddress]}\r\n                    />\r\n                  </Col>\r\n                  <Col center=\"xs\" className={classes} middle=\"xs\" xs={1}>\r\n                    <ScanQRWrapper handleScan={handleScan} />\r\n                  </Col>\r\n                </Row>\r\n              </Block>\r\n              <Modal.Footer>\r\n                <Modal.Footer.Buttons\r\n                  cancelButtonProps={{ onClick: onClose }}\r\n                  confirmButtonProps={{ testId: REPLACE_OWNER_NEXT_BTN_TEST_ID, text: 'Next' }}\r\n                />\r\n              </Modal.Footer>\r\n            </>\r\n          )\r\n        }}\r\n      </GnoForm>\r\n    </>\r\n  )\r\n}\r\n","import { background, border, lg, secondaryText, sm } from 'src/theme/variables'\r\nimport { createStyles, makeStyles } from '@material-ui/core'\r\n\r\nexport const useStyles = makeStyles(\r\n  createStyles({\r\n    root: {\r\n      height: '372px',\r\n    },\r\n    heading: {\r\n      padding: `${sm} ${lg}`,\r\n      justifyContent: 'flex-start',\r\n      boxSizing: 'border-box',\r\n      height: '74px',\r\n    },\r\n    annotation: {\r\n      color: secondaryText,\r\n      marginRight: 'auto',\r\n      marginLeft: '20px',\r\n      lineHeight: 'normal',\r\n    },\r\n    manage: {\r\n      fontSize: lg,\r\n    },\r\n    closeIcon: {\r\n      height: '35px',\r\n      width: '35px',\r\n    },\r\n    info: {\r\n      backgroundColor: background,\r\n      padding: sm,\r\n      justifyContent: 'center',\r\n      textAlign: 'center',\r\n      flexDirection: 'column',\r\n    },\r\n    details: {\r\n      padding: lg,\r\n      borderRight: `solid 1px ${border}`,\r\n      height: '100%',\r\n    },\r\n    owners: {\r\n      overflow: 'auto',\r\n      height: '100%',\r\n    },\r\n    ownersTitle: {\r\n      padding: lg,\r\n    },\r\n    owner: {\r\n      padding: sm,\r\n      alignItems: 'center',\r\n    },\r\n    name: {\r\n      textOverflow: 'ellipsis',\r\n      overflow: 'hidden',\r\n    },\r\n    selectedOwnerRemoved: {\r\n      padding: sm,\r\n      alignItems: 'center',\r\n      backgroundColor: '#ffe6ea',\r\n    },\r\n    selectedOwnerAdded: {\r\n      padding: sm,\r\n      alignItems: 'center',\r\n      backgroundColor: '#f7f5f5',\r\n    },\r\n    gasCostsContainer: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      textAlign: 'center',\r\n      width: '100%',\r\n      backgroundColor: background,\r\n    },\r\n  }),\r\n)\r\n","import IconButton from '@material-ui/core/IconButton'\r\nimport Close from '@material-ui/icons/Close'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { EthHashInfo } from '@gnosis.pm/safe-react-components'\r\n\r\nimport { getExplorerInfo, getNetworkId } from 'src/config'\r\nimport Block from 'src/components/layout/Block'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { getGnosisSafeInstanceAt, SENTINEL_ADDRESS } from 'src/logic/contracts/safeContracts'\r\nimport {\r\n  safeOwnersWithAddressBookDataSelector,\r\n  safeParamAddressFromStateSelector,\r\n  safeThresholdSelector,\r\n} from 'src/logic/safe/store/selectors'\r\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\r\nimport { useSafeName } from 'src/logic/addressBook/hooks/useSafeName'\r\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\r\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\r\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\r\nimport { Modal } from 'src/components/Modal'\r\nimport { TransactionFees } from 'src/components/TransactionsFees'\r\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\r\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\r\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\r\n\r\nimport { useStyles } from './style'\r\n\r\nexport const REPLACE_OWNER_SUBMIT_BTN_TEST_ID = 'replace-owner-submit-btn'\r\n\r\nconst chainId = getNetworkId()\r\n\r\ntype ReplaceOwnerProps = {\r\n  onClose: () => void\r\n  onClickBack: () => void\r\n  onSubmit: (txParameters: TxParameters) => void\r\n  owner: OwnerData\r\n  newOwner: {\r\n    address: string\r\n    name: string\r\n  }\r\n}\r\n\r\nexport const ReviewReplaceOwnerModal = ({\r\n  onClickBack,\r\n  onClose,\r\n  onSubmit,\r\n  owner,\r\n  newOwner,\r\n}: ReplaceOwnerProps): React.ReactElement => {\r\n  const classes = useStyles()\r\n  const [data, setData] = useState('')\r\n  const safeAddress = useSelector(safeParamAddressFromStateSelector)\r\n  const safeName = useSafeName(safeAddress)\r\n  const owners = useSelector((state) => safeOwnersWithAddressBookDataSelector(state, chainId))\r\n  const threshold = useSelector(safeThresholdSelector) || 1\r\n  const [manualSafeTxGas, setManualSafeTxGas] = useState(0)\r\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\r\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\r\n\r\n  const {\r\n    gasLimit,\r\n    gasEstimation,\r\n    gasPriceFormatted,\r\n    gasCostFormatted,\r\n    txEstimationExecutionStatus,\r\n    isExecution,\r\n    isCreation,\r\n    isOffChainSignature,\r\n  } = useEstimateTransactionGas({\r\n    txData: data,\r\n    txRecipient: safeAddress,\r\n    safeTxGas: manualSafeTxGas,\r\n    manualGasPrice,\r\n    manualGasLimit,\r\n  })\r\n\r\n  const [buttonStatus] = useEstimationStatus(txEstimationExecutionStatus)\r\n\r\n  useEffect(() => {\r\n    let isCurrent = true\r\n    const calculateReplaceOwnerData = async () => {\r\n      const gnosisSafe = getGnosisSafeInstanceAt(safeAddress)\r\n      const safeOwners = await gnosisSafe.methods.getOwners().call()\r\n      const index = safeOwners.findIndex((ownerAddress) => sameAddress(ownerAddress, owner.address))\r\n      const prevAddress = index === 0 ? SENTINEL_ADDRESS : safeOwners[index - 1]\r\n      const txData = gnosisSafe.methods.swapOwner(prevAddress, owner.address, newOwner.address).encodeABI()\r\n      if (isCurrent) {\r\n        setData(txData)\r\n      }\r\n    }\r\n\r\n    calculateReplaceOwnerData()\r\n    return () => {\r\n      isCurrent = false\r\n    }\r\n  }, [owner.address, safeAddress, newOwner.address])\r\n\r\n  const closeEditModalCallback = (txParameters: TxParameters) => {\r\n    const oldGasPrice = Number(gasPriceFormatted)\r\n    const newGasPrice = Number(txParameters.ethGasPrice)\r\n    const oldSafeTxGas = Number(gasEstimation)\r\n    const newSafeTxGas = Number(txParameters.safeTxGas)\r\n\r\n    if (newGasPrice && oldGasPrice !== newGasPrice) {\r\n      setManualGasPrice(txParameters.ethGasPrice)\r\n    }\r\n\r\n    if (txParameters.ethGasLimit && gasLimit !== txParameters.ethGasLimit) {\r\n      setManualGasLimit(txParameters.ethGasLimit)\r\n    }\r\n\r\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\r\n      setManualSafeTxGas(newSafeTxGas)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <EditableTxParameters\r\n      isOffChainSignature={isOffChainSignature}\r\n      isExecution={isExecution}\r\n      ethGasLimit={gasLimit}\r\n      ethGasPrice={gasPriceFormatted}\r\n      safeTxGas={gasEstimation.toString()}\r\n      closeEditModalCallback={closeEditModalCallback}\r\n    >\r\n      {(txParameters, toggleEditMode) => (\r\n        <>\r\n          <Row align=\"center\" className={classes.heading} grow>\r\n            <Paragraph className={classes.manage} noMargin weight=\"bolder\">\r\n              Replace owner\r\n            </Paragraph>\r\n            <Paragraph className={classes.annotation}>2 of 2</Paragraph>\r\n            <IconButton disableRipple onClick={onClose}>\r\n              <Close className={classes.closeIcon} />\r\n            </IconButton>\r\n          </Row>\r\n          <Hairline />\r\n          <Block>\r\n            <Row className={classes.root}>\r\n              <Col layout=\"column\" xs={4}>\r\n                <Block className={classes.details}>\r\n                  <Block margin=\"lg\">\r\n                    <Paragraph color=\"primary\" noMargin size=\"lg\">\r\n                      Details\r\n                    </Paragraph>\r\n                  </Block>\r\n                  <Block margin=\"lg\">\r\n                    <Paragraph color=\"disabled\" noMargin size=\"sm\">\r\n                      Safe name\r\n                    </Paragraph>\r\n                    <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\r\n                      {safeName}\r\n                    </Paragraph>\r\n                  </Block>\r\n                  <Block margin=\"lg\">\r\n                    <Paragraph color=\"disabled\" noMargin size=\"sm\">\r\n                      Any transaction requires the confirmation of:\r\n                    </Paragraph>\r\n                    <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\r\n                      {`${threshold} out of ${owners?.length || 0} owner(s)`}\r\n                    </Paragraph>\r\n                  </Block>\r\n                </Block>\r\n              </Col>\r\n              <Col className={classes.owners} layout=\"column\" xs={8}>\r\n                <Row className={classes.ownersTitle}>\r\n                  <Paragraph color=\"primary\" noMargin size=\"lg\">\r\n                    {`${owners?.length || 0} Safe owner(s)`}\r\n                  </Paragraph>\r\n                </Row>\r\n                <Hairline />\r\n                {owners?.map(\r\n                  (safeOwner) =>\r\n                    !sameAddress(safeOwner.address, owner.address) && (\r\n                      <React.Fragment key={safeOwner.address}>\r\n                        <Row className={classes.owner}>\r\n                          <Col align=\"center\" xs={12}>\r\n                            <EthHashInfo\r\n                              hash={safeOwner.address}\r\n                              name={safeOwner.name}\r\n                              showCopyBtn\r\n                              showAvatar\r\n                              explorerUrl={getExplorerInfo(safeOwner.address)}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                        <Hairline />\r\n                      </React.Fragment>\r\n                    ),\r\n                )}\r\n                <Row align=\"center\" className={classes.info}>\r\n                  <Paragraph color=\"primary\" noMargin size=\"md\" weight=\"bolder\">\r\n                    REMOVING OWNER &darr;\r\n                  </Paragraph>\r\n                </Row>\r\n                <Hairline />\r\n                <Row className={classes.selectedOwnerRemoved}>\r\n                  <Col align=\"center\" xs={12}>\r\n                    <EthHashInfo\r\n                      hash={owner.address}\r\n                      name={owner.name}\r\n                      showCopyBtn\r\n                      showAvatar\r\n                      explorerUrl={getExplorerInfo(owner.address)}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row align=\"center\" className={classes.info}>\r\n                  <Paragraph color=\"primary\" noMargin size=\"md\" weight=\"bolder\">\r\n                    ADDING NEW OWNER &darr;\r\n                  </Paragraph>\r\n                </Row>\r\n                <Hairline />\r\n                <Row className={classes.selectedOwnerAdded}>\r\n                  <Col align=\"center\" xs={12}>\r\n                    <EthHashInfo\r\n                      hash={newOwner.address}\r\n                      name={newOwner.name}\r\n                      showCopyBtn\r\n                      showAvatar\r\n                      explorerUrl={getExplorerInfo(newOwner.address)}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Hairline />\r\n              </Col>\r\n            </Row>\r\n          </Block>\r\n          <Hairline />\r\n\r\n          {/* Tx Parameters */}\r\n          <TxParametersDetail\r\n            txParameters={txParameters}\r\n            onEdit={toggleEditMode}\r\n            compact={false}\r\n            isTransactionCreation={isCreation}\r\n            isTransactionExecution={isExecution}\r\n            isOffChainSignature={isOffChainSignature}\r\n          />\r\n\r\n          <Block className={classes.gasCostsContainer}>\r\n            <TransactionFees\r\n              gasCostFormatted={gasCostFormatted}\r\n              isExecution={isExecution}\r\n              isCreation={isCreation}\r\n              isOffChainSignature={isOffChainSignature}\r\n              txEstimationExecutionStatus={txEstimationExecutionStatus}\r\n            />\r\n          </Block>\r\n          <Modal.Footer withoutBorder>\r\n            <Modal.Footer.Buttons\r\n              cancelButtonProps={{ onClick: onClickBack, text: 'Back' }}\r\n              confirmButtonProps={{\r\n                onClick: () => onSubmit(txParameters),\r\n                status: buttonStatus,\r\n                text: txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : undefined,\r\n                type: 'submit',\r\n                testId: REPLACE_OWNER_SUBMIT_BTN_TEST_ID,\r\n              }}\r\n            />\r\n          </Modal.Footer>\r\n        </>\r\n      )}\r\n    </EditableTxParameters>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Modal from 'src/components/Modal'\r\nimport { addressBookAddOrUpdate } from 'src/logic/addressBook/store/actions'\r\nimport { SENTINEL_ADDRESS, getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\r\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\r\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\r\nimport { safeParamAddressFromStateSelector } from 'src/logic/safe/store/selectors'\r\nimport { checksumAddress } from 'src/utils/checksumAddress'\r\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\r\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\r\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\r\n\r\nimport { OwnerForm } from 'src/routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/OwnerForm'\r\nimport { ReviewReplaceOwnerModal } from 'src/routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/Review'\r\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\r\nimport { isValidAddress } from 'src/utils/isValidAddress'\r\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\r\n\r\nexport type OwnerValues = {\r\n  address: string\r\n  name: string\r\n}\r\n\r\nexport const sendReplaceOwner = async (\r\n  newOwner: OwnerValues,\r\n  safeAddress: string,\r\n  ownerAddressToRemove: string,\r\n  dispatch: Dispatch,\r\n  txParameters: TxParameters,\r\n): Promise<void> => {\r\n  const gnosisSafe = getGnosisSafeInstanceAt(safeAddress)\r\n  const safeOwners = await gnosisSafe.methods.getOwners().call()\r\n  const index = safeOwners.findIndex((ownerAddress) => sameAddress(ownerAddress, ownerAddressToRemove))\r\n  const prevAddress = index === 0 ? SENTINEL_ADDRESS : safeOwners[index - 1]\r\n  const txData = gnosisSafe.methods.swapOwner(prevAddress, ownerAddressToRemove, newOwner.address).encodeABI()\r\n\r\n  const txHash = await dispatch(\r\n    createTransaction({\r\n      safeAddress,\r\n      to: safeAddress,\r\n      valueInWei: '0',\r\n      txData,\r\n      txNonce: txParameters.safeNonce,\r\n      safeTxGas: txParameters.safeTxGas ? Number(txParameters.safeTxGas) : undefined,\r\n      ethParameters: txParameters,\r\n      notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\r\n    }),\r\n  )\r\n\r\n  if (txHash) {\r\n    // update the AB\r\n    dispatch(addressBookAddOrUpdate(makeAddressBookEntry(newOwner)))\r\n  }\r\n}\r\n\r\ntype ReplaceOwnerProps = {\r\n  isOpen: boolean\r\n  onClose: () => void\r\n  owner: OwnerData\r\n}\r\n\r\nexport const ReplaceOwnerModal = ({ isOpen, onClose, owner }: ReplaceOwnerProps): React.ReactElement => {\r\n  const [activeScreen, setActiveScreen] = useState('checkOwner')\r\n  const [newOwner, setNewOwner] = useState({ address: '', name: '' })\r\n  const dispatch = useDispatch()\r\n  const safeAddress = useSelector(safeParamAddressFromStateSelector)\r\n\r\n  useEffect(\r\n    () => () => {\r\n      setActiveScreen('checkOwner')\r\n      setNewOwner({ address: '', name: '' })\r\n    },\r\n    [isOpen],\r\n  )\r\n\r\n  const onClickBack = () => setActiveScreen('checkOwner')\r\n\r\n  const ownerSubmitted = (newValues) => {\r\n    const { ownerAddress, ownerName } = newValues\r\n\r\n    if (isValidAddress(ownerAddress)) {\r\n      const checksumAddr = checksumAddress(ownerAddress)\r\n      setNewOwner({ address: checksumAddr, name: ownerName })\r\n      setActiveScreen('reviewReplaceOwner')\r\n    }\r\n  }\r\n\r\n  const onReplaceOwner = async (txParameters: TxParameters) => {\r\n    onClose()\r\n    try {\r\n      await sendReplaceOwner(newOwner, safeAddress, owner.address, dispatch, txParameters)\r\n      dispatch(addressBookAddOrUpdate(makeAddressBookEntry(newOwner)))\r\n    } catch (error) {\r\n      console.error('Error while removing an owner', error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      description=\"Replace owner from Safe\"\r\n      handleClose={onClose}\r\n      open={isOpen}\r\n      paperClassName=\"bigger-modal-window\"\r\n      title=\"Replace owner from Safe\"\r\n    >\r\n      <>\r\n        {activeScreen === 'checkOwner' && (\r\n          <OwnerForm onClose={onClose} onSubmit={ownerSubmitted} initialValues={newOwner} owner={owner} />\r\n        )}\r\n        {activeScreen === 'reviewReplaceOwner' && (\r\n          <ReviewReplaceOwnerModal\r\n            onClickBack={onClickBack}\r\n            onClose={onClose}\r\n            onSubmit={onReplaceOwner}\r\n            owner={owner}\r\n            newOwner={newOwner}\r\n          />\r\n        )}\r\n      </>\r\n    </Modal>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/rename-owner.ef6f1a0a.svg\";","export default __webpack_public_path__ + \"static/media/replace-owner.9b722463.svg\";","import { List } from 'immutable'\r\n\r\nimport { TableColumn } from 'src/components/Table/types.d'\r\nimport { AddressBookState } from 'src/logic/addressBook/model/addressBook'\r\n\r\nexport const OWNERS_TABLE_NAME_ID = 'name'\r\nexport const OWNERS_TABLE_ADDRESS_ID = 'address'\r\nexport const OWNERS_TABLE_ACTIONS_ID = 'actions'\r\n\r\nexport type OwnerData = { address: string; name: string }\r\n\r\nexport const getOwnerData = (owners: AddressBookState): OwnerData[] => {\r\n  return owners.map((owner) => ({\r\n    [OWNERS_TABLE_NAME_ID]: owner.name,\r\n    [OWNERS_TABLE_ADDRESS_ID]: owner.address,\r\n  }))\r\n}\r\n\r\nexport const generateColumns = (): List<TableColumn> => {\r\n  const nameColumn: TableColumn = {\r\n    id: OWNERS_TABLE_NAME_ID,\r\n    order: false,\r\n    formatTypeSort: (value: string) => value.toLowerCase(),\r\n    disablePadding: false,\r\n    label: 'Name',\r\n    width: 150,\r\n    custom: false,\r\n    align: 'left',\r\n  }\r\n\r\n  const addressColumn: TableColumn = {\r\n    id: OWNERS_TABLE_ADDRESS_ID,\r\n    order: false,\r\n    disablePadding: false,\r\n    label: 'Address',\r\n    custom: false,\r\n    align: 'left',\r\n  }\r\n\r\n  const actionsColumn: TableColumn = {\r\n    id: OWNERS_TABLE_ACTIONS_ID,\r\n    order: false,\r\n    disablePadding: false,\r\n    label: '',\r\n    custom: true,\r\n  }\r\n\r\n  return List([nameColumn, addressColumn, actionsColumn])\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core'\r\n\r\nimport { lg, sm } from 'src/theme/variables'\r\n\r\nexport const useStyles = makeStyles(\r\n  createStyles({\r\n    formContainer: {\r\n      minHeight: '420px',\r\n    },\r\n    title: {\r\n      padding: lg,\r\n      paddingBottom: 0,\r\n    },\r\n    annotation: {\r\n      paddingLeft: lg,\r\n    },\r\n    hide: {\r\n      '&:hover': {\r\n        backgroundColor: '#f7f5f5',\r\n      },\r\n      '&:hover $actions': {\r\n        visibility: 'initial',\r\n      },\r\n    },\r\n    actions: {\r\n      justifyContent: 'flex-end',\r\n      visibility: 'hidden',\r\n      minWidth: '100px',\r\n    },\r\n    noBorderBottom: {\r\n      '& > td': {\r\n        borderBottom: 'none',\r\n      },\r\n    },\r\n    editOwnerIcon: {\r\n      cursor: 'pointer',\r\n    },\r\n    replaceOwnerIcon: {\r\n      marginLeft: lg,\r\n      cursor: 'pointer',\r\n    },\r\n    controlsRow: {\r\n      backgroundColor: 'white',\r\n      padding: lg,\r\n      borderRadius: sm,\r\n    },\r\n    removeOwnerIcon: {\r\n      marginLeft: lg,\r\n      cursor: 'pointer',\r\n    },\r\n  }),\r\n)\r\n","import React, { useState, useEffect, ReactElement } from 'react'\r\nimport { EthHashInfo } from '@gnosis.pm/safe-react-components'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport cn from 'classnames'\r\n\r\nimport RemoveOwnerIcon from '../assets/icons/bin.svg'\r\n\r\nimport { AddOwnerModal } from './AddOwnerModal'\r\nimport { EditOwnerModal } from './EditOwnerModal'\r\nimport { RemoveOwnerModal } from './RemoveOwnerModal'\r\nimport { ReplaceOwnerModal } from './ReplaceOwnerModal'\r\nimport RenameOwnerIcon from './assets/icons/rename-owner.svg'\r\nimport ReplaceOwnerIcon from './assets/icons/replace-owner.svg'\r\nimport { OWNERS_TABLE_ADDRESS_ID, generateColumns, getOwnerData, OwnerData } from './dataFetcher'\r\nimport { useStyles } from './style'\r\n\r\nimport { getExplorerInfo } from 'src/config'\r\nimport Table from 'src/components/Table'\r\nimport { cellWidth } from 'src/components/Table/TableHead'\r\nimport Block from 'src/components/layout/Block'\r\nimport Button from 'src/components/layout/Button'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Heading from 'src/components/layout/Heading'\r\nimport Img from 'src/components/layout/Img'\r\nimport Paragraph from 'src/components/layout/Paragraph/index'\r\nimport Row from 'src/components/layout/Row'\r\nimport { useAnalytics, SAFE_NAVIGATION_EVENT } from 'src/utils/googleAnalytics'\r\nimport { AddressBookState } from 'src/logic/addressBook/model/addressBook'\r\n\r\nexport const RENAME_OWNER_BTN_TEST_ID = 'rename-owner-btn'\r\nexport const REMOVE_OWNER_BTN_TEST_ID = 'remove-owner-btn'\r\nexport const ADD_OWNER_BTN_TEST_ID = 'add-owner-btn'\r\nexport const REPLACE_OWNER_BTN_TEST_ID = 'replace-owner-btn'\r\nexport const OWNERS_ROW_TEST_ID = 'owners-row'\r\n\r\ntype Props = {\r\n  granted: boolean\r\n  owners: AddressBookState\r\n}\r\n\r\nconst ManageOwners = ({ granted, owners }: Props): ReactElement => {\r\n  const { trackEvent } = useAnalytics()\r\n  const classes = useStyles()\r\n\r\n  const [selectedOwner, setSelectedOwner] = useState<OwnerData | undefined>()\r\n  const [modalsStatus, setModalStatus] = useState({\r\n    showAddOwner: false,\r\n    showRemoveOwner: false,\r\n    showReplaceOwner: false,\r\n    showEditOwner: false,\r\n  })\r\n\r\n  const onShow = (action, row?: OwnerData) => () => {\r\n    setModalStatus((prevState) => ({\r\n      ...prevState,\r\n      [`show${action}`]: !prevState[`show${action}`],\r\n    }))\r\n    if (row) {\r\n      setSelectedOwner(row)\r\n    }\r\n  }\r\n\r\n  const onHide = (action) => () => {\r\n    setModalStatus((prevState) => ({\r\n      ...prevState,\r\n      [`show${action}`]: !Boolean(prevState[`show${action}`]),\r\n    }))\r\n    setSelectedOwner(undefined)\r\n  }\r\n\r\n  useEffect(() => {\r\n    trackEvent({ category: SAFE_NAVIGATION_EVENT, action: 'Settings', label: 'Owners' })\r\n  }, [trackEvent])\r\n\r\n  const columns = generateColumns()\r\n  const autoColumns = columns.filter((c) => !c.custom)\r\n  const ownerData = getOwnerData(owners)\r\n\r\n  return (\r\n    <>\r\n      <Block className={classes.formContainer}>\r\n        <Heading className={classes.title} tag=\"h2\">\r\n          Manage Safe Owners\r\n        </Heading>\r\n        <Paragraph className={classes.annotation}>\r\n          Add, remove and replace owners or rename existing owners. Owner names are only stored locally and never shared\r\n          with Gnosis or any third parties.\r\n        </Paragraph>\r\n        <TableContainer>\r\n          <Table\r\n            columns={columns}\r\n            data={ownerData}\r\n            defaultFixed\r\n            defaultOrderBy={OWNERS_TABLE_ADDRESS_ID}\r\n            disablePagination\r\n            label=\"Owners\"\r\n            noBorder\r\n            size={ownerData.length}\r\n          >\r\n            {(sortedData) =>\r\n              sortedData.map((row, index) => (\r\n                <TableRow\r\n                  className={cn(classes.hide, index >= 3 && index === sortedData.size - 1 && classes.noBorderBottom)}\r\n                  data-testid={OWNERS_ROW_TEST_ID}\r\n                  key={index}\r\n                >\r\n                  {autoColumns.map((column: any) => (\r\n                    <TableCell align={column.align} component=\"td\" key={column.id} style={cellWidth(column.width)}>\r\n                      {column.id === OWNERS_TABLE_ADDRESS_ID ? (\r\n                        <Block justify=\"left\">\r\n                          <EthHashInfo\r\n                            hash={row[column.id]}\r\n                            showCopyBtn\r\n                            showAvatar\r\n                            explorerUrl={getExplorerInfo(row[column.id])}\r\n                          />\r\n                        </Block>\r\n                      ) : (\r\n                        row[column.id]\r\n                      )}\r\n                    </TableCell>\r\n                  ))}\r\n                  <TableCell component=\"td\">\r\n                    <Row align=\"end\" className={classes.actions}>\r\n                      <Img\r\n                        alt=\"Edit owner\"\r\n                        className={classes.editOwnerIcon}\r\n                        onClick={onShow('EditOwner', row)}\r\n                        src={RenameOwnerIcon}\r\n                        testId={RENAME_OWNER_BTN_TEST_ID}\r\n                      />\r\n                      {granted && (\r\n                        <>\r\n                          <Img\r\n                            alt=\"Replace owner\"\r\n                            className={classes.replaceOwnerIcon}\r\n                            onClick={onShow('ReplaceOwner', row)}\r\n                            src={ReplaceOwnerIcon}\r\n                            testId={REPLACE_OWNER_BTN_TEST_ID}\r\n                          />\r\n                          {ownerData.length > 1 && (\r\n                            <Img\r\n                              alt=\"Remove owner\"\r\n                              className={classes.removeOwnerIcon}\r\n                              onClick={onShow('RemoveOwner', row)}\r\n                              src={RemoveOwnerIcon}\r\n                              testId={REMOVE_OWNER_BTN_TEST_ID}\r\n                            />\r\n                          )}\r\n                        </>\r\n                      )}\r\n                    </Row>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n            }\r\n          </Table>\r\n        </TableContainer>\r\n      </Block>\r\n      {granted && (\r\n        <>\r\n          <Hairline />\r\n          <Row align=\"end\" className={classes.controlsRow} grow>\r\n            <Col end=\"xs\">\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={onShow('AddOwner')}\r\n                size=\"small\"\r\n                testId={ADD_OWNER_BTN_TEST_ID}\r\n                variant=\"contained\"\r\n              >\r\n                Add new owner\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n      <AddOwnerModal isOpen={modalsStatus.showAddOwner} onClose={onHide('AddOwner')} />\r\n      {selectedOwner && (\r\n        <>\r\n          <RemoveOwnerModal\r\n            isOpen={modalsStatus.showRemoveOwner}\r\n            onClose={onHide('RemoveOwner')}\r\n            owner={selectedOwner}\r\n          />\r\n          <ReplaceOwnerModal\r\n            isOpen={modalsStatus.showReplaceOwner}\r\n            onClose={onHide('ReplaceOwner')}\r\n            owner={selectedOwner}\r\n          />\r\n          <EditOwnerModal isOpen={modalsStatus.showEditOwner} onClose={onHide('EditOwner')} owner={selectedOwner} />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ManageOwners\r\n","import { createStyles, makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { lg, md, sm } from 'src/theme/variables'\r\n\r\nexport const useStyles = makeStyles(\r\n  createStyles({\r\n    heading: {\r\n      boxSizing: 'border-box',\r\n      justifyContent: 'space-between',\r\n      minHeight: '74px',\r\n      padding: `${sm} ${lg}`,\r\n    },\r\n    container: {\r\n      minHeight: '369px',\r\n      padding: `${sm}`,\r\n    },\r\n    manage: {\r\n      fontSize: lg,\r\n    },\r\n    close: {\r\n      height: '35px',\r\n      width: '35px',\r\n    },\r\n    owner: {\r\n      padding: md,\r\n      alignItems: 'center',\r\n    },\r\n    description: {\r\n      padding: md,\r\n    },\r\n  }),\r\n)\r\n","import { Action, Dispatch } from 'redux'\r\nimport { loadStoredSafes } from 'src/logic/safe/utils'\r\nimport removeSafe from 'src/logic/safe/store/actions/removeSafe'\r\n\r\nexport const removeLocalSafe = (safeAddress: string) => async (dispatch: Dispatch): Promise<Action | void> => {\r\n  const storedSafes = await loadStoredSafes()\r\n  if (storedSafes) {\r\n    delete storedSafes[safeAddress]\r\n  }\r\n  dispatch(removeSafe(safeAddress))\r\n}\r\n","import { EthHashInfo } from '@gnosis.pm/safe-react-components'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Close from '@material-ui/icons/Close'\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { useStyles } from './style'\r\n\r\nimport Modal, { Modal as GenericModal } from 'src/components/Modal'\r\nimport Block from 'src/components/layout/Block'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { addressBookMapSelector } from 'src/logic/addressBook/store/selectors'\r\nimport { defaultSafeSelector, safeParamAddressFromStateSelector } from 'src/logic/safe/store/selectors'\r\nimport { WELCOME_ADDRESS } from 'src/routes/routes'\r\nimport { removeLocalSafe } from 'src/logic/safe/store/actions/removeLocalSafe'\r\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\r\nimport { saveDefaultSafe } from 'src/logic/safe/utils'\r\n\r\nimport { getExplorerInfo, getNetworkId } from 'src/config'\r\nimport Col from 'src/components/layout/Col'\r\n\r\nconst chainId = getNetworkId()\r\n\r\ntype RemoveSafeModalProps = {\r\n  isOpen: boolean\r\n  onClose: () => void\r\n}\r\n\r\nexport const RemoveSafeModal = ({ isOpen, onClose }: RemoveSafeModalProps): React.ReactElement => {\r\n  const classes = useStyles()\r\n  const safeAddress = useSelector(safeParamAddressFromStateSelector)\r\n  const addressBookMap = useSelector(addressBookMapSelector)\r\n  const safeAddressBookEntry = addressBookMap[chainId]?.[safeAddress]\r\n  const safeName = safeAddressBookEntry?.name\r\n  const defaultSafe = useSelector(defaultSafeSelector)\r\n  const dispatch = useDispatch()\r\n\r\n  const onRemoveSafeHandler = async () => {\r\n    // ToDo: review if this is necessary or we should directly use the `removeSafe` action.\r\n    await dispatch(removeLocalSafe(safeAddress))\r\n\r\n    if (sameAddress(safeAddress, defaultSafe)) {\r\n      await saveDefaultSafe('')\r\n    }\r\n\r\n    onClose()\r\n    // using native redirect in order to avoid problems in several components\r\n    // trying to access references of the removed safe.\r\n    const relativePath = window.location.href.split('/#/')[0]\r\n    window.location.href = `${relativePath}/#/${WELCOME_ADDRESS}`\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      description=\"Remove the selected Safe\"\r\n      handleClose={onClose}\r\n      open={isOpen}\r\n      paperClassName=\"modal\"\r\n      title=\"Remove Safe\"\r\n    >\r\n      <Row align=\"center\" className={classes.heading} grow>\r\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\r\n          Remove Safe\r\n        </Paragraph>\r\n        <IconButton disableRipple onClick={onClose}>\r\n          <Close className={classes.close} />\r\n        </IconButton>\r\n      </Row>\r\n      <Hairline />\r\n      <Block className={classes.container}>\r\n        <Row className={classes.owner}>\r\n          <Col align=\"center\" xs={12}>\r\n            <EthHashInfo\r\n              hash={safeAddress}\r\n              name={safeName}\r\n              showAvatar\r\n              showCopyBtn\r\n              explorerUrl={getExplorerInfo(safeAddress)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className={classes.description}>\r\n          <Paragraph noMargin size=\"lg\">\r\n            Removing a Safe only removes it from your interface. <b>It does not delete the Safe</b>. You can always add\r\n            it back using the Safe&apos;s address.\r\n          </Paragraph>\r\n        </Row>\r\n      </Block>\r\n      <GenericModal.Footer>\r\n        <GenericModal.Footer.Buttons\r\n          cancelButtonProps={{ onClick: onClose }}\r\n          confirmButtonProps={{\r\n            onClick: onRemoveSafeHandler,\r\n            color: 'error',\r\n            text: 'Remove',\r\n          }}\r\n        />\r\n      </GenericModal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n","import { createStyles } from '@material-ui/core/styles'\r\nimport { boldFont, border, lg, sm } from 'src/theme/variables'\r\n\r\nexport const styles = createStyles({\r\n  formContainer: {\r\n    padding: lg,\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n    maxWidth: '460px',\r\n  },\r\n  saveBtn: {\r\n    fontWeight: boldFont,\r\n    marginRight: sm,\r\n  },\r\n  controlsRow: {\r\n    borderTop: `2px solid ${border}`,\r\n    bottom: 0,\r\n    boxSizing: 'border-box',\r\n    padding: lg,\r\n    position: 'absolute',\r\n    width: '100%',\r\n  },\r\n})\r\n","import { background, lg, md, secondaryText, sm } from 'src/theme/variables'\r\nimport { createStyles } from '@material-ui/core'\r\n\r\nexport const styles = createStyles({\r\n  heading: {\r\n    padding: `${sm} ${lg}`,\r\n    justifyContent: 'space-between',\r\n    boxSizing: 'border-box',\r\n    maxHeight: '75px',\r\n  },\r\n  annotation: {\r\n    letterSpacing: '-1px',\r\n    color: secondaryText,\r\n    marginRight: 'auto',\r\n    marginLeft: '20px',\r\n  },\r\n  headingText: {\r\n    fontSize: '20px',\r\n  },\r\n  close: {\r\n    height: '35px',\r\n    width: '35px',\r\n  },\r\n  modalContent: {\r\n    padding: `${md} ${lg}`,\r\n  },\r\n  ownersText: {\r\n    marginLeft: sm,\r\n  },\r\n  buttonRow: {\r\n    height: '84px',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRow: {\r\n    position: 'relative',\r\n  },\r\n  errorText: {\r\n    position: 'absolute',\r\n    bottom: '-25px',\r\n  },\r\n  gasCostsContainer: {\r\n    backgroundColor: background,\r\n    padding: `0 ${lg}`,\r\n  },\r\n})\r\n","import IconButton from '@material-ui/core/IconButton'\r\nimport Close from '@material-ui/icons/Close'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { styles } from './style'\r\n\r\nimport GnoForm from 'src/components/forms/GnoForm'\r\nimport Block from 'src/components/layout/Block'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { getUpgradeSafeTransactionHash } from 'src/logic/safe/utils/upgradeSafe'\r\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { ButtonStatus, Modal } from 'src/components/Modal'\r\nimport { TransactionFees } from 'src/components/TransactionsFees'\r\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\r\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\r\nimport { MULTI_SEND_ADDRESS } from 'src/logic/contracts/safeContracts'\r\nimport { DELEGATE_CALL } from 'src/logic/safe/transactions'\r\nimport { EMPTY_DATA } from 'src/logic/wallets/ethTransactions'\r\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\r\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\r\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\ntype Props = {\r\n  onClose: () => void\r\n  safeAddress: string\r\n}\r\n\r\nexport const UpdateSafeModal = ({ onClose, safeAddress }: Props): React.ReactElement => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const [multiSendCallData, setMultiSendCallData] = useState(EMPTY_DATA)\r\n\r\n  const {\r\n    gasCostFormatted,\r\n    txEstimationExecutionStatus,\r\n    isExecution,\r\n    isCreation,\r\n    isOffChainSignature,\r\n    gasPriceFormatted,\r\n    gasLimit,\r\n    gasEstimation,\r\n  } = useEstimateTransactionGas({\r\n    txData: multiSendCallData,\r\n    txRecipient: safeAddress,\r\n  })\r\n\r\n  const [buttonStatus] = useEstimationStatus(txEstimationExecutionStatus)\r\n\r\n  useEffect(() => {\r\n    const calculateUpgradeSafeModal = async () => {\r\n      const encodeMultiSendCallData = await getUpgradeSafeTransactionHash(safeAddress)\r\n      setMultiSendCallData(encodeMultiSendCallData)\r\n    }\r\n    calculateUpgradeSafeModal()\r\n  }, [safeAddress])\r\n\r\n  const handleSubmit = (txParameters: TxParameters) => {\r\n    // Call the update safe method\r\n    dispatch(\r\n      createTransaction({\r\n        safeAddress,\r\n        to: MULTI_SEND_ADDRESS,\r\n        valueInWei: '0',\r\n        txData: multiSendCallData,\r\n        txNonce: txParameters.safeNonce,\r\n        safeTxGas: txParameters.safeTxGas ? Number(txParameters.safeTxGas) : undefined,\r\n        ethParameters: txParameters,\r\n        notifiedTransaction: 'STANDARD_TX',\r\n        operation: DELEGATE_CALL,\r\n      }),\r\n    )\r\n    onClose()\r\n  }\r\n\r\n  let confirmButtonText = 'Update Safe'\r\n  if (ButtonStatus.LOADING === buttonStatus) {\r\n    confirmButtonText = txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : 'Updating'\r\n  }\r\n\r\n  return (\r\n    <EditableTxParameters\r\n      isOffChainSignature={isOffChainSignature}\r\n      isExecution={isExecution}\r\n      ethGasLimit={gasLimit}\r\n      ethGasPrice={gasPriceFormatted}\r\n      safeTxGas={gasEstimation.toString()}\r\n    >\r\n      {(txParameters, toggleEditMode) => (\r\n        <>\r\n          <Row align=\"center\" className={classes.heading} grow>\r\n            <Paragraph className={classes.headingText} noMargin weight=\"bolder\">\r\n              Update to new Safe version\r\n            </Paragraph>\r\n            <IconButton disableRipple onClick={onClose}>\r\n              <Close className={classes.close} />\r\n            </IconButton>\r\n          </Row>\r\n          <Hairline />\r\n          <GnoForm onSubmit={() => handleSubmit(txParameters)}>\r\n            {() => (\r\n              <>\r\n                <Block className={classes.modalContent}>\r\n                  <Row>\r\n                    <Paragraph>\r\n                      Update now to take advantage of new features and the highest security standards available.\r\n                    </Paragraph>\r\n                    <Block>\r\n                      This update includes:\r\n                      <ul>\r\n                        <li>Compatibility with new asset types (ERC-721 / ERC-1155)</li>\r\n                        <li>Improved interoperability with modules</li>\r\n                        <li>Minor security improvements</li>\r\n                      </ul>\r\n                    </Block>\r\n                    <Paragraph>\r\n                      You will need to confirm this update just like any other transaction. This means other owners will\r\n                      have to confirm the update in case more than one confirmation is required for this Safe.\r\n                    </Paragraph>\r\n                  </Row>\r\n                  {/* Tx Parameters */}\r\n                  <TxParametersDetail\r\n                    txParameters={txParameters}\r\n                    onEdit={toggleEditMode}\r\n                    compact={false}\r\n                    isTransactionCreation={isCreation}\r\n                    isTransactionExecution={isExecution}\r\n                    isOffChainSignature={isOffChainSignature}\r\n                  />\r\n                </Block>\r\n                {txEstimationExecutionStatus === EstimationStatus.LOADING ? null : (\r\n                  <Block className={classes.gasCostsContainer}>\r\n                    <TransactionFees\r\n                      gasCostFormatted={gasCostFormatted}\r\n                      isExecution={isExecution}\r\n                      isCreation={isCreation}\r\n                      isOffChainSignature={isOffChainSignature}\r\n                      txEstimationExecutionStatus={txEstimationExecutionStatus}\r\n                    />\r\n                  </Block>\r\n                )}\r\n                <Row align=\"center\" className={classes.buttonRow}>\r\n                  <Modal.Footer.Buttons\r\n                    cancelButtonProps={{\r\n                      onClick: onClose,\r\n                      text: 'Back',\r\n                    }}\r\n                    confirmButtonProps={{\r\n                      status: buttonStatus,\r\n                      text: confirmButtonText,\r\n                    }}\r\n                  />\r\n                </Row>\r\n              </>\r\n            )}\r\n          </GnoForm>\r\n        </>\r\n      )}\r\n    </EditableTxParameters>\r\n  )\r\n}\r\n","import { Icon, Link, Text } from '@gnosis.pm/safe-react-components'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport React, { ReactElement, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\n\r\nimport { styles } from './style'\r\n\r\nimport Modal from 'src/components/Modal'\r\nimport Field from 'src/components/forms/Field'\r\nimport GnoForm from 'src/components/forms/GnoForm'\r\nimport TextField from 'src/components/forms/TextField'\r\nimport { composeValidators, required, validAddressBookName } from 'src/components/forms/validator'\r\nimport Block from 'src/components/layout/Block'\r\nimport Button from 'src/components/layout/Button'\r\nimport Col from 'src/components/layout/Col'\r\nimport Heading from 'src/components/layout/Heading'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\r\nimport { addressBookAddOrUpdate } from 'src/logic/addressBook/store/actions'\r\nimport enqueueSnackbar from 'src/logic/notifications/store/actions/enqueueSnackbar'\r\nimport { getNotificationsFromTxType, enhanceSnackbarForAction } from 'src/logic/notifications'\r\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\r\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\r\nimport { UpdateSafeModal } from 'src/routes/safe/components/Settings/UpdateSafeModal'\r\nimport { grantedSelector } from 'src/routes/safe/container/selector'\r\nimport { updateSafe } from 'src/logic/safe/store/actions/updateSafe'\r\n\r\nimport { useSafeName } from 'src/logic/addressBook/hooks/useSafeName'\r\nimport {\r\n  latestMasterContractVersionSelector,\r\n  safeCurrentVersionSelector,\r\n  safeNeedsUpdateSelector,\r\n  safeParamAddressFromStateSelector,\r\n} from 'src/logic/safe/store/selectors'\r\nimport { useAnalytics, SAFE_NAVIGATION_EVENT } from 'src/utils/googleAnalytics'\r\nimport { fetchMasterCopies, MasterCopy, MasterCopyDeployer } from 'src/logic/contracts/api/masterCopies'\r\nimport { getMasterCopyAddressFromProxyAddress } from 'src/logic/contracts/safeContracts'\r\n\r\nexport const SAFE_NAME_INPUT_TEST_ID = 'safe-name-input'\r\nexport const SAFE_NAME_SUBMIT_BTN_TEST_ID = 'change-safe-name-btn'\r\nexport const SAFE_NAME_UPDATE_SAFE_BTN_TEST_ID = 'update-safe-name-btn'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst StyledLink = styled(Link)`\r\n  margin: 12px 0 0 0;\r\n`\r\nconst StyledIcon = styled(Icon)`\r\n  position: relative;\r\n  top: 3px;\r\n  left: 6px;\r\n`\r\n\r\nconst SafeDetails = (): ReactElement => {\r\n  const classes = useStyles()\r\n  const isUserOwner = useSelector(grantedSelector)\r\n  const latestMasterContractVersion = useSelector(latestMasterContractVersionSelector)\r\n  const dispatch = useDispatch()\r\n  const safeAddress = useSelector(safeParamAddressFromStateSelector)\r\n  const safeName = useSafeName(safeAddress)\r\n  const safeNeedsUpdate = useSelector(safeNeedsUpdateSelector)\r\n  const safeCurrentVersion = useSelector(safeCurrentVersionSelector)\r\n  const { trackEvent } = useAnalytics()\r\n\r\n  const [isModalOpen, setModalOpen] = useState(false)\r\n  const [safeInfo, setSafeInfo] = useState<MasterCopy | undefined>()\r\n\r\n  const toggleModal = () => {\r\n    setModalOpen((prevOpen) => !prevOpen)\r\n  }\r\n\r\n  const handleSubmit = (values) => {\r\n    dispatch(addressBookAddOrUpdate(makeAddressBookEntry({ address: safeAddress, name: values.safeName })))\r\n    // setting `loadedViaUrl` to `false` as setting a safe's name is considered to intentionally add the safe\r\n    dispatch(updateSafe({ address: safeAddress, loadedViaUrl: false }))\r\n\r\n    const notification = getNotificationsFromTxType(TX_NOTIFICATION_TYPES.SAFE_NAME_CHANGE_TX)\r\n    dispatch(enqueueSnackbar(enhanceSnackbarForAction(notification.afterExecution.noMoreConfirmationsNeeded)))\r\n  }\r\n\r\n  const handleUpdateSafe = () => {\r\n    setModalOpen(true)\r\n  }\r\n\r\n  const getSafeVersion = () => {\r\n    if (!safeInfo) {\r\n      return ''\r\n    }\r\n    return safeInfo.deployer === MasterCopyDeployer.GNOSIS\r\n      ? safeCurrentVersion\r\n      : `${safeCurrentVersion}-${safeInfo.deployer}`\r\n  }\r\n\r\n  const getSafeVersionUpdate = () => {\r\n    if (!safeInfo) {\r\n      return ''\r\n    }\r\n    return safeInfo.deployer === MasterCopyDeployer.GNOSIS && safeNeedsUpdate\r\n      ? ` (there's a newer version: ${latestMasterContractVersion})`\r\n      : ''\r\n  }\r\n\r\n  useEffect(() => {\r\n    trackEvent({ category: SAFE_NAVIGATION_EVENT, action: 'Settings', label: 'Details' })\r\n  }, [trackEvent])\r\n\r\n  useEffect(() => {\r\n    const getMasterCopyInfo = async () => {\r\n      const masterCopies = await fetchMasterCopies()\r\n      const masterCopyAddress = await getMasterCopyAddressFromProxyAddress(safeAddress)\r\n      const masterCopy = masterCopies?.find((mc) => sameAddress(mc.address, masterCopyAddress))\r\n      setSafeInfo(masterCopy)\r\n    }\r\n\r\n    if (safeAddress) {\r\n      getMasterCopyInfo()\r\n    }\r\n  }, [safeAddress])\r\n\r\n  return (\r\n    <GnoForm onSubmit={handleSubmit}>\r\n      {() => (\r\n        <>\r\n          <Block className={classes.formContainer}>\r\n            <Heading tag=\"h2\">Contract Version</Heading>\r\n            <Row align=\"end\" grow>\r\n              <StyledLink rel=\"noreferrer noopener\" target=\"_blank\" href={safeInfo?.deployerRepoUrl}>\r\n                <Text size=\"xl\" as=\"span\" color=\"primary\">\r\n                  {getSafeVersion()}\r\n                  {getSafeVersionUpdate()}\r\n                </Text>\r\n                <StyledIcon size=\"sm\" type=\"externalLink\" color=\"primary\" />\r\n              </StyledLink>\r\n            </Row>\r\n            {safeNeedsUpdate && isUserOwner ? (\r\n              <Row align=\"end\" grow>\r\n                <Paragraph>\r\n                  <Button\r\n                    className={classes.saveBtn}\r\n                    color=\"primary\"\r\n                    onClick={handleUpdateSafe}\r\n                    size=\"small\"\r\n                    testId={SAFE_NAME_UPDATE_SAFE_BTN_TEST_ID}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Update Safe\r\n                  </Button>\r\n                </Paragraph>\r\n              </Row>\r\n            ) : null}\r\n          </Block>\r\n          <Block className={classes.formContainer}>\r\n            <Heading tag=\"h2\">Modify Safe name</Heading>\r\n            <Paragraph size=\"lg\">\r\n              You can change the name of this Safe. This name is only stored locally <br />\r\n              and never shared with Gnosis or any third parties.\r\n            </Paragraph>\r\n            <Block className={classes.root}>\r\n              <Field\r\n                component={TextField}\r\n                defaultValue={safeName}\r\n                name=\"safeName\"\r\n                placeholder=\"Safe name*\"\r\n                testId={SAFE_NAME_INPUT_TEST_ID}\r\n                text=\"Safe name*\"\r\n                type=\"text\"\r\n                validate={composeValidators(required, validAddressBookName)}\r\n              />\r\n            </Block>\r\n          </Block>\r\n          <Row align=\"end\" className={classes.controlsRow} grow>\r\n            <Col end=\"xs\">\r\n              <Button\r\n                className={classes.saveBtn}\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                testId={SAFE_NAME_SUBMIT_BTN_TEST_ID}\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n              >\r\n                Save\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Modal description=\"Update Safe\" handleClose={toggleModal} open={isModalOpen} title=\"Update Safe\">\r\n            <UpdateSafeModal onClose={toggleModal} safeAddress={safeAddress} />\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </GnoForm>\r\n  )\r\n}\r\n\r\nexport default SafeDetails\r\n","import { createStyles, makeStyles } from '@material-ui/core'\r\n\r\nimport { background, lg, md, sm } from 'src/theme/variables'\r\n\r\nexport const useStyles = makeStyles(\r\n  createStyles({\r\n    heading: {\r\n      padding: `${sm} ${lg}`,\r\n      justifyContent: 'space-between',\r\n      boxSizing: 'border-box',\r\n      height: '74px',\r\n    },\r\n    headingText: {\r\n      fontSize: '20px',\r\n    },\r\n    close: {\r\n      height: '35px',\r\n      width: '35px',\r\n    },\r\n    modalContent: {\r\n      padding: `${md} ${lg}`,\r\n    },\r\n    ownersText: {\r\n      marginLeft: sm,\r\n    },\r\n    inputRow: {\r\n      position: 'relative',\r\n    },\r\n    gasCostsContainer: {\r\n      backgroundColor: background,\r\n      padding: `${sm} ${lg}`,\r\n    },\r\n  }),\r\n)\r\n","import IconButton from '@material-ui/core/IconButton'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Close from '@material-ui/icons/Close'\r\nimport React, { ReactElement, useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport Field from 'src/components/forms/Field'\r\nimport GnoForm from 'src/components/forms/GnoForm'\r\nimport SelectField from 'src/components/forms/SelectField'\r\nimport { composeValidators, differentFrom, minValue, mustBeInteger, required } from 'src/components/forms/validator'\r\nimport Block from 'src/components/layout/Block'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\r\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\r\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\r\nimport { ButtonStatus, Modal } from 'src/components/Modal'\r\nimport { TransactionFees } from 'src/components/TransactionsFees'\r\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\r\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\r\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\r\n\r\nimport { useStyles } from './style'\r\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\r\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\r\n\r\nconst THRESHOLD_FIELD_NAME = 'threshold'\r\n\r\ntype ChangeThresholdModalProps = {\r\n  onClose: () => void\r\n  ownersCount?: number\r\n  safeAddress: string\r\n  threshold?: number\r\n}\r\n\r\nexport const ChangeThresholdModal = ({\r\n  onClose,\r\n  ownersCount = 0,\r\n  safeAddress,\r\n  threshold = 1,\r\n}: ChangeThresholdModalProps): ReactElement => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const [data, setData] = useState('')\r\n  const [manualSafeTxGas, setManualSafeTxGas] = useState(0)\r\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\r\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\r\n  const [editedThreshold, setEditedThreshold] = useState<number>(threshold)\r\n  const [disabledSubmitForm, setDisabledSubmitForm] = useState<boolean>(true)\r\n\r\n  const {\r\n    gasCostFormatted,\r\n    txEstimationExecutionStatus,\r\n    isCreation,\r\n    isExecution,\r\n    isOffChainSignature,\r\n    gasLimit,\r\n    gasPriceFormatted,\r\n    gasEstimation,\r\n  } = useEstimateTransactionGas({\r\n    txData: data,\r\n    txRecipient: safeAddress,\r\n    safeTxGas: manualSafeTxGas,\r\n    manualGasPrice,\r\n    manualGasLimit,\r\n  })\r\n\r\n  const [buttonStatus] = useEstimationStatus(txEstimationExecutionStatus)\r\n\r\n  useEffect(() => {\r\n    let isCurrent = true\r\n    const calculateChangeThresholdData = () => {\r\n      const safeInstance = getGnosisSafeInstanceAt(safeAddress)\r\n      const txData = safeInstance.methods.changeThreshold(editedThreshold).encodeABI()\r\n      if (isCurrent) {\r\n        setData(txData)\r\n      }\r\n    }\r\n\r\n    calculateChangeThresholdData()\r\n    return () => {\r\n      isCurrent = false\r\n    }\r\n  }, [safeAddress, editedThreshold])\r\n\r\n  const handleThreshold = ({ target }) => {\r\n    const value = parseInt(target.value)\r\n    setDisabledSubmitForm(value === editedThreshold || value === threshold)\r\n    setEditedThreshold(value)\r\n  }\r\n\r\n  const handleSubmit = ({ txParameters }) => {\r\n    dispatch(\r\n      createTransaction({\r\n        safeAddress,\r\n        to: safeAddress,\r\n        valueInWei: '0',\r\n        txData: data,\r\n        txNonce: txParameters.safeNonce,\r\n        safeTxGas: txParameters.safeTxGas ? Number(txParameters.safeTxGas) : undefined,\r\n        ethParameters: txParameters,\r\n        notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\r\n      }),\r\n    )\r\n    onClose()\r\n  }\r\n\r\n  const closeEditModalCallback = (txParameters: TxParameters) => {\r\n    const oldGasPrice = Number(gasPriceFormatted)\r\n    const newGasPrice = Number(txParameters.ethGasPrice)\r\n    const oldSafeTxGas = Number(gasEstimation)\r\n    const newSafeTxGas = Number(txParameters.safeTxGas)\r\n\r\n    if (newGasPrice && oldGasPrice !== newGasPrice) {\r\n      setManualGasPrice(txParameters.ethGasPrice)\r\n    }\r\n\r\n    if (txParameters.ethGasLimit && gasLimit !== txParameters.ethGasLimit) {\r\n      setManualGasLimit(txParameters.ethGasLimit)\r\n    }\r\n\r\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\r\n      setManualSafeTxGas(newSafeTxGas)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <EditableTxParameters\r\n      isOffChainSignature={isOffChainSignature}\r\n      isExecution={isExecution}\r\n      ethGasLimit={gasLimit}\r\n      ethGasPrice={gasPriceFormatted}\r\n      safeTxGas={gasEstimation.toString()}\r\n      closeEditModalCallback={closeEditModalCallback}\r\n    >\r\n      {(txParameters, toggleEditMode) => (\r\n        <>\r\n          <Row align=\"center\" className={classes.heading} grow>\r\n            <Paragraph className={classes.headingText} noMargin weight=\"bolder\">\r\n              Change required confirmations\r\n            </Paragraph>\r\n            <IconButton disableRipple onClick={onClose}>\r\n              <Close className={classes.close} />\r\n            </IconButton>\r\n          </Row>\r\n          <Hairline />\r\n          <GnoForm initialValues={{ threshold: editedThreshold.toString(), txParameters }} onSubmit={handleSubmit}>\r\n            {() => (\r\n              <>\r\n                <Block className={classes.modalContent}>\r\n                  <Row>\r\n                    <Paragraph weight=\"bolder\">Any transaction requires the confirmation of:</Paragraph>\r\n                  </Row>\r\n                  <Row align=\"center\" className={classes.inputRow} margin=\"xl\">\r\n                    <Col xs={2}>\r\n                      <Field\r\n                        data-testid=\"threshold-select-input\"\r\n                        name={THRESHOLD_FIELD_NAME}\r\n                        onChange={handleThreshold}\r\n                        render={(props) => (\r\n                          <>\r\n                            <SelectField {...props} disableError>\r\n                              {[...Array(Number(ownersCount))].map((x, index) => (\r\n                                <MenuItem key={index} value={`${index + 1}`}>\r\n                                  {index + 1}\r\n                                </MenuItem>\r\n                              ))}\r\n                            </SelectField>\r\n                          </>\r\n                        )}\r\n                        validate={composeValidators(required, mustBeInteger, minValue(1), differentFrom(threshold))}\r\n                      />\r\n                    </Col>\r\n                    <Col xs={10}>\r\n                      <Paragraph className={classes.ownersText} color=\"primary\" noMargin size=\"lg\">\r\n                        {`out of ${ownersCount} owner(s)`}\r\n                      </Paragraph>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  {/* Tx Parameters */}\r\n                  <TxParametersDetail\r\n                    txParameters={txParameters}\r\n                    onEdit={toggleEditMode}\r\n                    isTransactionCreation={isCreation}\r\n                    isTransactionExecution={isExecution}\r\n                    isOffChainSignature={isOffChainSignature}\r\n                  />\r\n                </Block>\r\n                {txEstimationExecutionStatus !== EstimationStatus.LOADING && (\r\n                  <div className={classes.gasCostsContainer}>\r\n                    <TransactionFees\r\n                      gasCostFormatted={gasCostFormatted}\r\n                      isExecution={isExecution}\r\n                      isCreation={isCreation}\r\n                      isOffChainSignature={isOffChainSignature}\r\n                      txEstimationExecutionStatus={txEstimationExecutionStatus}\r\n                    />\r\n                  </div>\r\n                )}\r\n\r\n                <Modal.Footer withoutBorder={buttonStatus !== ButtonStatus.LOADING}>\r\n                  <Modal.Footer.Buttons\r\n                    cancelButtonProps={{ onClick: onClose }}\r\n                    confirmButtonProps={{\r\n                      disabled: disabledSubmitForm,\r\n                      status: buttonStatus,\r\n                      text: txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : undefined,\r\n                    }}\r\n                  />\r\n                </Modal.Footer>\r\n              </>\r\n            )}\r\n          </GnoForm>\r\n        </>\r\n      )}\r\n    </EditableTxParameters>\r\n  )\r\n}\r\n","import { createStyles } from '@material-ui/core/styles'\r\nimport { border, fontColor, lg, secondaryText, smallFontSize, xl } from 'src/theme/variables'\r\n\r\nexport const styles = createStyles({\r\n  ownersText: {\r\n    color: secondaryText,\r\n    '& b': {\r\n      color: fontColor,\r\n    },\r\n  },\r\n  container: {\r\n    padding: lg,\r\n  },\r\n  buttonRow: {\r\n    padding: lg,\r\n    position: 'absolute',\r\n    left: 0,\r\n    bottom: 0,\r\n    boxSizing: 'border-box',\r\n    width: '100%',\r\n    justifyContent: 'flex-end',\r\n    borderTop: `2px solid ${border}`,\r\n  },\r\n  modifyBtn: {\r\n    height: xl,\r\n    fontSize: smallFontSize,\r\n  },\r\n})\r\n","import { makeStyles } from '@material-ui/core/styles'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport Modal from 'src/components/Modal'\r\nimport Block from 'src/components/layout/Block'\r\nimport Bold from 'src/components/layout/Bold'\r\nimport Button from 'src/components/layout/Button'\r\nimport Heading from 'src/components/layout/Heading'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { grantedSelector } from 'src/routes/safe/container/selector'\r\nimport {\r\n  safeOwnersSelector,\r\n  safeParamAddressFromStateSelector,\r\n  safeThresholdSelector,\r\n} from 'src/logic/safe/store/selectors'\r\nimport { useAnalytics, SAFE_NAVIGATION_EVENT } from 'src/utils/googleAnalytics'\r\n\r\nimport { ChangeThresholdModal } from './ChangeThreshold'\r\nimport { styles } from './style'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst ThresholdSettings = (): React.ReactElement => {\r\n  const classes = useStyles()\r\n  const [isModalOpen, setModalOpen] = useState(false)\r\n  const threshold = useSelector(safeThresholdSelector) || 1\r\n  const safeAddress = useSelector(safeParamAddressFromStateSelector)\r\n  const owners = useSelector(safeOwnersSelector)\r\n  const granted = useSelector(grantedSelector)\r\n\r\n  const toggleModal = () => {\r\n    setModalOpen((prevOpen) => !prevOpen)\r\n  }\r\n\r\n  const { trackEvent } = useAnalytics()\r\n\r\n  useEffect(() => {\r\n    trackEvent({ category: SAFE_NAVIGATION_EVENT, action: 'Settings', label: 'Owners' })\r\n  }, [trackEvent])\r\n\r\n  return (\r\n    <>\r\n      <Block className={classes.container}>\r\n        <Heading tag=\"h2\">Required confirmations</Heading>\r\n        <Paragraph>Any transaction requires the confirmation of:</Paragraph>\r\n        <Paragraph className={classes.ownersText} size=\"lg\">\r\n          <Bold>{threshold}</Bold> out of <Bold>{owners?.length || 0}</Bold> owners\r\n        </Paragraph>\r\n        {owners && owners.length > 1 && granted && (\r\n          <Row className={classes.buttonRow}>\r\n            <Button\r\n              className={classes.modifyBtn}\r\n              color=\"primary\"\r\n              minWidth={120}\r\n              onClick={toggleModal}\r\n              variant=\"contained\"\r\n            >\r\n              Change\r\n            </Button>\r\n          </Row>\r\n        )}\r\n      </Block>\r\n      <Modal\r\n        description=\"Change Required Confirmations Form\"\r\n        handleClose={toggleModal}\r\n        open={isModalOpen}\r\n        title=\"Change Required Confirmations\"\r\n      >\r\n        <ChangeThresholdModal\r\n          onClose={toggleModal}\r\n          ownersCount={owners?.length}\r\n          safeAddress={safeAddress}\r\n          threshold={threshold}\r\n        />\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ThresholdSettings\r\n","import { createStyles } from '@material-ui/core'\r\n\r\nimport {\r\n  background,\r\n  bolderFont,\r\n  border,\r\n  fontColor,\r\n  largeFontSize,\r\n  md,\r\n  screenSm,\r\n  secondary,\r\n  sm,\r\n  xs,\r\n} from 'src/theme/variables'\r\n\r\nexport const styles = createStyles({\r\n  root: {\r\n    backgroundColor: 'white',\r\n    borderRadius: sm,\r\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginBottom: '54px',\r\n    minHeight: '505px',\r\n\r\n    [`@media (min-width: ${screenSm}px)`]: {\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  settings: {\r\n    letterSpacing: '-0.5px',\r\n  },\r\n  menuWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexGrow: 0,\r\n    maxWidth: '100%',\r\n\r\n    [`@media (min-width: ${screenSm}px)`]: {\r\n      flexDirection: 'row',\r\n      maxWidth: 'unset',\r\n    },\r\n  },\r\n  menu: {\r\n    borderBottom: `solid 2px ${border}`,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexGrow: 1,\r\n    height: '100%',\r\n    width: '100%',\r\n\r\n    [`@media (min-width: ${screenSm}px)`]: {\r\n      borderBottom: 'none',\r\n      borderRight: `solid 2px ${border}`,\r\n      flexDirection: 'column',\r\n      width: '250px',\r\n    },\r\n  },\r\n  menuOption: {\r\n    alignItems: 'center',\r\n    borderRight: `solid 1px ${border}`,\r\n    boxSizing: 'border-box',\r\n    cursor: 'pointer',\r\n    flexGrow: 1,\r\n    flexShrink: 1,\r\n    fontSize: '13px',\r\n    justifyContent: 'center',\r\n    lineHeight: '1.2',\r\n    minWidth: '0',\r\n    padding: `${md} ${sm}`,\r\n    width: '100%',\r\n\r\n    [`@media (min-width: ${screenSm}px)`]: {\r\n      borderRight: 'none',\r\n      flexGrow: '0',\r\n      fontSize: largeFontSize,\r\n      justifyContent: 'flex-start',\r\n      padding: `${md} 0 ${md} ${md}`,\r\n    },\r\n    '&:last-of-type': {\r\n      borderRight: 'none',\r\n    },\r\n    '&:first-child': {\r\n      borderTopLeftRadius: sm,\r\n    },\r\n    '& svg': {\r\n      display: 'block',\r\n      marginRight: xs,\r\n      maxWidth: '16px',\r\n\r\n      [`@media (min-width: ${screenSm}px)`]: {\r\n        marginRight: sm,\r\n      },\r\n    },\r\n    '& .fill': {\r\n      fill: fontColor,\r\n    },\r\n  },\r\n  active: {\r\n    backgroundColor: background,\r\n    color: secondary,\r\n    fontWeight: bolderFont,\r\n    '& .fill': {\r\n      fill: secondary,\r\n    },\r\n  },\r\n  contents: {\r\n    width: '100%',\r\n  },\r\n  hairline: {\r\n    display: 'none',\r\n\r\n    [`@media (min-width: ${screenSm}px)`]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  container: {\r\n    flexGrow: 1,\r\n    height: '100%',\r\n    position: 'relative',\r\n  },\r\n  message: {\r\n    padding: `${md} 0`,\r\n    maxHeight: '54px', // to make it the same as row in Balances component\r\n    boxSizing: 'border-box',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  links: {\r\n    textDecoration: 'underline',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n  removeSafeBtn: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginTop: '-1px', // to make it the same as row in Balances component\r\n  },\r\n  removeSafeIcon: {\r\n    marginLeft: sm,\r\n    height: md,\r\n    cursor: 'pointer',\r\n  },\r\n  counter: {\r\n    background: border,\r\n    borderRadius: '3px',\r\n    color: fontColor,\r\n    lineHeight: 'normal',\r\n    margin: `-2px 0 -2px ${sm}`,\r\n    padding: xs,\r\n    fontSize: '11px',\r\n  },\r\n})\r\n","import * as React from 'react'\r\n\r\nclass Span extends React.PureComponent<any> {\r\n  render() {\r\n    const { children, ...props } = this.props\r\n\r\n    return <span {...props}>{children}</span>\r\n  }\r\n}\r\n\r\nexport default Span\r\n","import { IconText, Loader } from '@gnosis.pm/safe-react-components'\r\nimport { LoadingContainer } from 'src/components/LoaderContainer'\r\nimport Badge from '@material-ui/core/Badge'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport cn from 'classnames'\r\nimport * as React from 'react'\r\nimport { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { Advanced } from './Advanced'\r\nimport { SpendingLimitSettings } from './SpendingLimit'\r\nimport ManageOwners from './ManageOwners'\r\nimport { RemoveSafeModal } from './RemoveSafeModal'\r\nimport SafeDetails from './SafeDetails'\r\nimport ThresholdSettings from './ThresholdSettings'\r\nimport RemoveSafeIcon from './assets/icons/bin.svg'\r\nimport { styles } from './style'\r\n\r\nimport { getNetworkId } from 'src/config'\r\nimport Block from 'src/components/layout/Block'\r\nimport ButtonLink from 'src/components/layout/ButtonLink'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Img from 'src/components/layout/Img'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport Span from 'src/components/layout/Span'\r\nimport {\r\n  safeNeedsUpdateSelector,\r\n  safeOwnersWithAddressBookDataSelector,\r\n  safeSelector,\r\n} from 'src/logic/safe/store/selectors'\r\nimport { grantedSelector } from 'src/routes/safe/container/selector'\r\n\r\nexport const OWNERS_SETTINGS_TAB_TEST_ID = 'owner-settings-tab'\r\n\r\nconst chainId = getNetworkId()\r\n\r\nconst INITIAL_STATE = {\r\n  showRemoveSafe: false,\r\n  menuOptionIndex: 1,\r\n}\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst Settings: React.FC = () => {\r\n  const classes = useStyles()\r\n  const [state, setState] = useState(INITIAL_STATE)\r\n  const owners = useSelector((state) => safeOwnersWithAddressBookDataSelector(state, chainId))\r\n  const needsUpdate = useSelector(safeNeedsUpdateSelector)\r\n  const granted = useSelector(grantedSelector)\r\n  const safe = useSelector(safeSelector)\r\n\r\n  const handleChange = (menuOptionIndex) => () => {\r\n    setState((prevState) => ({ ...prevState, menuOptionIndex }))\r\n  }\r\n\r\n  const onShow = (action) => () => {\r\n    setState((prevState) => ({ ...prevState, [`show${action}`]: true }))\r\n  }\r\n\r\n  const onHide = (action) => () => {\r\n    setState((prevState) => ({ ...prevState, [`show${action}`]: false }))\r\n  }\r\n\r\n  const { menuOptionIndex, showRemoveSafe } = state\r\n\r\n  return !owners ? (\r\n    <LoadingContainer>\r\n      <Loader size=\"md\" />\r\n    </LoadingContainer>\r\n  ) : (\r\n    <>\r\n      <Row className={classes.message}>\r\n        {!safe?.loadedViaUrl && (\r\n          <>\r\n            <ButtonLink className={classes.removeSafeBtn} color=\"error\" onClick={onShow('RemoveSafe')} size=\"lg\">\r\n              <Span className={classes.links}>Remove Safe</Span>\r\n              <Img alt=\"Trash Icon\" className={classes.removeSafeIcon} src={RemoveSafeIcon} />\r\n            </ButtonLink>\r\n            <RemoveSafeModal isOpen={showRemoveSafe} onClose={onHide('RemoveSafe')} />\r\n          </>\r\n        )}\r\n      </Row>\r\n      <Block className={classes.root}>\r\n        <Col className={classes.menuWrapper} layout=\"column\">\r\n          <Block className={classes.menu}>\r\n            <Row className={cn(classes.menuOption, menuOptionIndex === 1 && classes.active)} onClick={handleChange(1)}>\r\n              <Badge\r\n                badgeContent=\" \"\r\n                color=\"error\"\r\n                invisible={!needsUpdate || !granted}\r\n                style={{ paddingRight: '10px' }}\r\n                variant=\"dot\"\r\n              >\r\n                <IconText\r\n                  iconSize=\"sm\"\r\n                  textSize=\"xl\"\r\n                  iconType=\"info\"\r\n                  text=\"Safe Details\"\r\n                  color={menuOptionIndex === 1 ? 'primary' : 'secondary'}\r\n                />\r\n              </Badge>\r\n            </Row>\r\n            <Hairline className={classes.hairline} />\r\n            <Row\r\n              className={cn(classes.menuOption, menuOptionIndex === 2 && classes.active)}\r\n              onClick={handleChange(2)}\r\n              testId={OWNERS_SETTINGS_TAB_TEST_ID}\r\n            >\r\n              <IconText\r\n                iconSize=\"sm\"\r\n                textSize=\"xl\"\r\n                iconType=\"owners\"\r\n                text=\"Owners\"\r\n                color={menuOptionIndex === 2 ? 'primary' : 'secondary'}\r\n              />\r\n              <Paragraph className={classes.counter} size=\"xs\">\r\n                {owners.length}\r\n              </Paragraph>\r\n            </Row>\r\n            <Hairline className={classes.hairline} />\r\n            <Row className={cn(classes.menuOption, menuOptionIndex === 3 && classes.active)} onClick={handleChange(3)}>\r\n              <IconText\r\n                iconSize=\"sm\"\r\n                textSize=\"xl\"\r\n                iconType=\"requiredConfirmations\"\r\n                text=\"Policies\"\r\n                color={menuOptionIndex === 3 ? 'primary' : 'secondary'}\r\n              />\r\n            </Row>\r\n            <Hairline className={classes.hairline} />\r\n            <Row className={cn(classes.menuOption, menuOptionIndex === 4 && classes.active)} onClick={handleChange(4)}>\r\n              <IconText\r\n                iconSize=\"sm\"\r\n                textSize=\"xl\"\r\n                iconType=\"fuelIndicator\"\r\n                text=\"Spending limit\"\r\n                color={menuOptionIndex === 4 ? 'primary' : 'secondary'}\r\n              />\r\n            </Row>\r\n            <Hairline className={classes.hairline} />\r\n            <Row className={cn(classes.menuOption, menuOptionIndex === 5 && classes.active)} onClick={handleChange(5)}>\r\n              <IconText\r\n                iconSize=\"sm\"\r\n                textSize=\"xl\"\r\n                iconType=\"settingsTool\"\r\n                text=\"Advanced\"\r\n                color={menuOptionIndex === 5 ? 'primary' : 'secondary'}\r\n              />\r\n            </Row>\r\n            <Hairline className={classes.hairline} />\r\n          </Block>\r\n        </Col>\r\n        <Col className={classes.contents} layout=\"column\">\r\n          <Block className={classes.container}>\r\n            {menuOptionIndex === 1 && <SafeDetails />}\r\n            {menuOptionIndex === 2 && <ManageOwners granted={granted} owners={owners} />}\r\n            {menuOptionIndex === 3 && <ThresholdSettings />}\r\n            {menuOptionIndex === 4 && <SpendingLimitSettings />}\r\n            {menuOptionIndex === 5 && <Advanced />}\r\n          </Block>\r\n        </Col>\r\n      </Block>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Settings\r\n"],"sourceRoot":""}