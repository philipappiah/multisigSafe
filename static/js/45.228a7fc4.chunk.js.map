{"version":3,"sources":["components/Table/TableHead.tsx","components/Table/sorting.ts","components/Table/index.tsx","assets/icons/info_red.svg","../node_modules/@material-ui/core/esm/Toolbar/Toolbar.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","../node_modules/@material-ui/lab/esm/Skeleton/Skeleton.js","routes/safe/components/Balances/AssetTableCell/index.tsx","routes/safe/components/Balances/dataFetcher.ts","routes/safe/components/Balances/Coins/styles.ts","routes/safe/components/Balances/Coins/index.tsx"],"names":["cellWidth","width","maxWidth","GnoTableHead","changeSort","property","orderAttr","onSort","props","this","columns","order","orderBy","map","column","align","key","id","padding","disablePadding","sortDirection","static","style","label","active","direction","onClick","React","desc","a","b","orderProp","format","styles","root","backgroundColor","borderTopRightRadius","sm","borderTopLeftRadius","boxShadow","selectRoot","lineHeight","xxl","white","paginationRoot","marginBottom","xl","borderBottomRightRadius","borderBottomLeftRadius","loader","backProps","nextProps","GnoTable","newOrderBy","state","defaultOrder","newOrder","setState","fixed","getEmptyStyle","height","display","justifyContent","alignItems","handleChangePage","e","page","handleChangeRowsPerPage","rowsPerPage","Number","target","value","undefined","defaultOrderBy","find","children","classes","data","defaultFixed","defaultRowsPerPage","disableLoadingOnEmptyTable","disablePagination","noBorder","size","orderByParam","orderParam","displayRows","fixedParam","paginationClasses","input","columnSort","sortedData","dataArray","cmp","fixedElems","filter","elem","List","stabilizedThis","el","index","sortedElems","sort","concat","stableSort","getSorting","formatTypeSort","slice","isEmpty","Table","aria-labelledby","className","TableHead","TableBody","Row","TablePagination","backIconButtonProps","component","count","nextIconButtonProps","onChangePage","onChangeRowsPerPage","rowsPerPageOptions","defaultProps","withStyles","Toolbar","ref","_props$component","Component","_props$disableGutters","disableGutters","_props$variant","variant","other","_objectWithoutProperties","_extends","clsx","gutters","theme","position","_defineProperty","paddingLeft","spacing","paddingRight","breakpoints","up","regular","mixins","toolbar","dense","minHeight","name","_ref","KeyboardArrowRight","_ref2","KeyboardArrowLeft","_ref3","_ref4","TablePaginationActions","useTheme","IconButton","event","disabled","color","Math","ceil","defaultLabelDisplayedRows","from","to","defaultRowsPerPageOptions","colSpan","_props$ActionsCompone","ActionsComponent","_props$backIconButton","backIconButtonText","colSpanProp","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","_props$nextIconButton","nextIconButtonText","_props$rowsPerPageOpt","_props$SelectProps","SelectProps","selectId","useId","labelId","MenuItemComponent","native","MenuItem","spacer","length","Typography","caption","Select","select","icon","selectIcon","InputBase","onChange","rowsPerPageOption","menuItem","min","actions","title","palette","text","primary","fontSize","typography","pxToRem","overflow","flex","flexShrink","marginRight","marginLeft","textAlign","textAlignLast","Skeleton","_props$animation","animation","hasChildren","Boolean","withChildren","fitContent","heightAuto","fade","type","marginTop","transformOrigin","transform","borderRadius","shape","content","rect","circle","pulse","opacity","wave","background","action","hover","bottom","left","right","top","visibility","AssetTableCell","asset","Block","justify","Img","alt","onError","setImageToPlaceholder","src","logoUri","Paragraph","noMargin","BALANCE_TABLE_ASSET_ID","BALANCE_TABLE_BALANCE_ID","BALANCE_TABLE_VALUE_ID","getBalanceData","safeTokens","currencySelected","token","balance","tokenBalance","fiatBalance","address","symbol","formatAmountInUsFormat","toString","toFixed","getTokenPriceInCurrency","createStyles","iconSmall","tooltipInfo","hide","leftIcon","currencyValueRow","StyledButton","styled","Button","useStyles","makeStyles","CurrencyTooltip","balanceWithSymbol","valueWithCurrency","replace","Tooltip","placement","InfoIcon","Coins","showReceiveFunds","showSendFunds","assetColumn","custom","balanceColumn","generateColumns","autoColumns","c","selectedCurrency","useSelector","currentCurrencySelector","extendedSafeTokensSelector","granted","grantedSelector","trackEvent","useAnalytics","useEffect","category","SAFE_NAVIGATION_EVENT","filteredData","useMemo","TableContainer","row","TableRow","data-testid","BALANCE_ROW_TEST_ID","tabIndex","cellItem","showCurrencyValueRow"],"mappings":"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","file":"static/js/45.228a7fc4.chunk.js","sourcesContent":["import TableCell from '@material-ui/core/TableCell'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\r\nimport * as React from 'react'\r\n\r\ninterface CellWidth {\r\n  maxWidth: string\r\n}\r\n\r\nexport const cellWidth = (width?: string | number): CellWidth | undefined => {\r\n  if (!width) {\r\n    return undefined\r\n  }\r\n\r\n  return {\r\n    maxWidth: `${width}px`,\r\n  }\r\n}\r\n\r\nclass GnoTableHead extends React.PureComponent<any> {\r\n  changeSort = (property, orderAttr) => () => {\r\n    const { onSort } = this.props\r\n\r\n    onSort(property, orderAttr)\r\n  }\r\n\r\n  render() {\r\n    const { columns, order, orderBy } = this.props\r\n\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          {columns.map((column) => (\r\n            <TableCell\r\n              align={column.align}\r\n              key={column.id}\r\n              padding={column.disablePadding ? 'none' : 'default'}\r\n              sortDirection={orderBy === column.id ? order : false}\r\n            >\r\n              {column.static ? (\r\n                <div style={column.style}>{column.label}</div>\r\n              ) : (\r\n                <TableSortLabel\r\n                  active={orderBy === column.id}\r\n                  direction={order}\r\n                  onClick={this.changeSort(column.id, column.order)}\r\n                  style={column.style}\r\n                >\r\n                  {column.label}\r\n                </TableSortLabel>\r\n              )}\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GnoTableHead\r\n","import { List } from 'immutable'\r\n\r\nexport const FIXED = 'fixed'\r\n\r\nexport const buildOrderFieldFrom = (attr: string): string => `${attr}Order`\r\n\r\nconst desc = (\r\n  a: string,\r\n  b: string,\r\n  orderBy: string,\r\n  orderProp: boolean,\r\n  format: (value: string | number) => string | number,\r\n): number => {\r\n  const order = orderProp ? buildOrderFieldFrom(orderBy) : orderBy\r\n\r\n  if (format(b[order]) < format(a[order])) {\r\n    return -1\r\n  }\r\n  if (format(b[order]) > format(a[order])) {\r\n    return 1\r\n  }\r\n\r\n  return 0\r\n}\r\n\r\n// eslint-disable-next-line\r\nexport const stableSort = (dataArray, cmp, fixed) => {\r\n  const fixedElems = fixed ? dataArray.filter((elem) => elem.fixed) : List([])\r\n  const data = fixed ? dataArray.filter((elem) => !elem[FIXED]) : dataArray\r\n  let stabilizedThis = data.map((el, index) => [el, index])\r\n\r\n  stabilizedThis = stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0])\r\n\r\n    if (order !== 0) {\r\n      return order\r\n    }\r\n\r\n    return a[1] - b[1]\r\n  })\r\n\r\n  const sortedElems = stabilizedThis.map((el) => el[0])\r\n\r\n  return fixedElems.concat(sortedElems)\r\n}\r\n\r\nexport const getSorting = (\r\n  order: 'desc' | 'asc',\r\n  orderBy: string,\r\n  orderProp: boolean,\r\n  format: (value: string | number) => string | number = (value) => value,\r\n): ((a: string, b: string) => number) =>\r\n  order === 'desc'\r\n    ? (a, b) => desc(a, b, orderBy, orderProp, format)\r\n    : (a, b) => -desc(a, b, orderBy, orderProp, format)\r\n","import { Loader } from '@gnosis.pm/safe-react-components'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport * as React from 'react'\r\n\r\nimport TableHead from 'src/components/Table/TableHead'\r\nimport { getSorting, stableSort } from 'src/components/Table/sorting'\r\nimport Row from 'src/components/layout/Row'\r\nimport { sm, xl, xxl } from 'src/theme/variables'\r\n\r\nconst styles = {\r\n  root: {\r\n    backgroundColor: 'white',\r\n    borderTopRightRadius: sm,\r\n    borderTopLeftRadius: sm,\r\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\r\n  },\r\n  selectRoot: {\r\n    lineHeight: xxl,\r\n    backgroundColor: 'white',\r\n  },\r\n  white: {\r\n    backgroundColor: 'white',\r\n  },\r\n  paginationRoot: {\r\n    backgroundColor: 'white',\r\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\r\n    marginBottom: xl,\r\n    borderBottomRightRadius: sm,\r\n    borderBottomLeftRadius: sm,\r\n  },\r\n  loader: {\r\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\r\n  },\r\n}\r\n\r\nconst FIXED_EMPTY_HEIGHT = 255\r\n\r\nconst backProps = {\r\n  'aria-label': 'Previous Page',\r\n}\r\n\r\nconst nextProps = {\r\n  'aria-label': 'Next Page',\r\n}\r\n\r\nclass GnoTable extends React.Component<any, any> {\r\n  static defaultProps = {\r\n    defaultOrder: 'asc',\r\n    disablePagination: false,\r\n    defaultRowsPerPage: 5,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      page: 0,\r\n      order: undefined,\r\n      orderBy: undefined,\r\n      fixed: undefined,\r\n      orderProp: false,\r\n      rowsPerPage: undefined,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { columns, defaultOrderBy } = this.props\r\n\r\n    if (defaultOrderBy && columns) {\r\n      const defaultOrderCol = columns.find(({ id }) => id === defaultOrderBy)\r\n\r\n      if (defaultOrderCol.order) {\r\n        this.setState({\r\n          orderProp: true,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  onSort = (newOrderBy, orderProp) => {\r\n    const { order, orderBy } = this.state\r\n    const { defaultOrder } = this.props\r\n    let newOrder = 'desc'\r\n\r\n    // if table was previously sorted by the user\r\n    if (order && orderBy === newOrderBy && order === 'desc') {\r\n      newOrder = 'asc'\r\n    } else if (!order && defaultOrder === 'desc') {\r\n      // if it was not sorted and defaultOrder is used\r\n      newOrder = 'asc'\r\n    }\r\n\r\n    this.setState(() => ({\r\n      order: newOrder,\r\n      orderBy: newOrderBy,\r\n      orderProp,\r\n      fixed: false,\r\n    }))\r\n  }\r\n\r\n  getEmptyStyle = () => ({\r\n    height: `calc(100vh - ${FIXED_EMPTY_HEIGHT}px)`,\r\n    borderTopRightRadius: sm,\r\n    borderTopLeftRadius: sm,\r\n    backgroundColor: 'white',\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  })\r\n\r\n  handleChangePage = (e, page) => {\r\n    this.setState({ page })\r\n  }\r\n\r\n  handleChangeRowsPerPage = (e) => {\r\n    const rowsPerPage = Number(e.target.value)\r\n    this.setState({ rowsPerPage })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      children,\r\n      classes,\r\n      columns,\r\n      data,\r\n      defaultFixed,\r\n      defaultOrder,\r\n      defaultOrderBy,\r\n      defaultRowsPerPage,\r\n      disableLoadingOnEmptyTable,\r\n      disablePagination,\r\n      label,\r\n      noBorder,\r\n      size,\r\n    }: any = this.props\r\n    const { fixed, order, orderBy, orderProp, page, rowsPerPage } = this.state\r\n    const orderByParam = orderBy || defaultOrderBy\r\n    const orderParam = order || defaultOrder\r\n    const displayRows = rowsPerPage || defaultRowsPerPage\r\n    const fixedParam = typeof fixed !== 'undefined' ? fixed : !!defaultFixed\r\n    const paginationClasses = {\r\n      selectRoot: classes.selectRoot,\r\n      root: !noBorder && classes.paginationRoot,\r\n      input: classes.white,\r\n    }\r\n    const columnSort = columns.find((column) => column.id === orderByParam)\r\n    let sortedData = stableSort(\r\n      data,\r\n      getSorting(orderParam, orderByParam, orderProp, columnSort?.formatTypeSort),\r\n      fixedParam,\r\n    )\r\n\r\n    if (!disablePagination) {\r\n      sortedData = sortedData.slice(page * displayRows, page * displayRows + displayRows)\r\n    }\r\n\r\n    const isEmpty = size === 0 && !disableLoadingOnEmptyTable\r\n\r\n    return (\r\n      <>\r\n        {!isEmpty && (\r\n          <Table aria-labelledby={label} className={noBorder ? '' : classes.root}>\r\n            <TableHead columns={columns} onSort={this.onSort} order={order} orderBy={orderByParam} />\r\n            <TableBody>{children(sortedData)}</TableBody>\r\n          </Table>\r\n        )}\r\n        {isEmpty && (\r\n          <Row className={classes.loader} style={this.getEmptyStyle()}>\r\n            <Loader size=\"sm\" />\r\n          </Row>\r\n        )}\r\n        {!disablePagination && (\r\n          <TablePagination\r\n            backIconButtonProps={backProps}\r\n            classes={paginationClasses}\r\n            component=\"div\"\r\n            count={size}\r\n            nextIconButtonProps={nextProps}\r\n            onChangePage={this.handleChangePage}\r\n            onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={displayRows}\r\n            rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n          />\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles as any)(GnoTable)\r\n","export default __webpack_public_path__ + \"static/media/info_red.2d444d88.svg\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: _defineProperty({\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `variant=\"regular\"`. */\n    regular: theme.mixins.toolbar,\n\n    /* Styles applied to the root element if `variant=\"dense\"`. */\n    dense: {\n      minHeight: 48\n    }\n  };\n};\nvar Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'regular' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[variant], className, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes = {\n  /**\n   * Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, disables gutter padding.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['regular', 'dense'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToolbar'\n})(Toolbar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/unstable_useId';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      overflow: 'auto',\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n    // TODO v5: `.selectRoot` should be merged with `.input`\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {},\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var selectId = useId();\n  var labelId = useId();\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption,\n    id: labelId\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    id: selectId,\n    labelId: labelId\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return /*#__PURE__*/React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n      value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n    }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page: page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n\n    if (count === -1) {\n      return null;\n    }\n\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { fade, withStyles } from '@material-ui/core/styles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      // Create a \"on paper\" color with sufficient contrast retaining the color\n      backgroundColor: fade(theme.palette.text.primary, theme.palette.type === 'light' ? 0.11 : 0.13),\n      height: '1.2em'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      marginTop: 0,\n      marginBottom: 0,\n      height: 'auto',\n      transformOrigin: '0 60%',\n      transform: 'scale(1, 0.60)',\n      borderRadius: theme.shape.borderRadius,\n      '&:empty:before': {\n        content: '\"\\\\00a0\"'\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"rect\"`. */\n    rect: {},\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the root element if `animation=\"pulse\"`. */\n    pulse: {\n      animation: '$pulse 1.5s ease-in-out 0.5s infinite'\n    },\n    '@keyframes pulse': {\n      '0%': {\n        opacity: 1\n      },\n      '50%': {\n        opacity: 0.4\n      },\n      '100%': {\n        opacity: 1\n      }\n    },\n\n    /* Styles applied to the root element if `animation=\"wave\"`. */\n    wave: {\n      position: 'relative',\n      overflow: 'hidden',\n      '&::after': {\n        animation: '$wave 1.6s linear 0.5s infinite',\n        background: \"linear-gradient(90deg, transparent, \".concat(theme.palette.action.hover, \", transparent)\"),\n        content: '\"\"',\n        position: 'absolute',\n        transform: 'translateX(-100%)',\n        // Avoid flash during server-side hydration\n        bottom: 0,\n        left: 0,\n        right: 0,\n        top: 0\n      }\n    },\n    '@keyframes wave': {\n      '0%': {\n        transform: 'translateX(-100%)'\n      },\n      '60%': {\n        // +0.5s of delay between each loop\n        transform: 'translateX(100%)'\n      },\n      '100%': {\n        transform: 'translateX(100%)'\n      }\n    },\n\n    /* Styles applied when the component is passed children. */\n    withChildren: {\n      '& > *': {\n        visibility: 'hidden'\n      }\n    },\n\n    /* Styles applied when the component is passed children and no width. */\n    fitContent: {\n      maxWidth: 'fit-content'\n    },\n\n    /* Styles applied when the component is passed children and no height. */\n    heightAuto: {\n      height: 'auto'\n    }\n  };\n};\nvar Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(props, ref) {\n  var _props$animation = props.animation,\n      animation = _props$animation === void 0 ? 'pulse' : _props$animation,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'span' : _props$component,\n      height = props.height,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      width = props.width,\n      other = _objectWithoutProperties(props, [\"animation\", \"classes\", \"className\", \"component\", \"height\", \"variant\", \"width\"]);\n\n  var hasChildren = Boolean(other.children);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, hasChildren && [classes.withChildren, !width && classes.fitContent, !height && classes.heightAuto], animation !== false && classes[animation])\n  }, other, {\n    style: _extends({\n      width: width,\n      height: height\n    }, other.style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes = {\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The type of content that will be rendered.\n   */\n  variant: PropTypes.oneOf(['text', 'rect', 'circle']),\n\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSkeleton'\n})(Skeleton);","import * as React from 'react'\r\n\r\nimport Block from 'src/components/layout/Block'\r\nimport Img from 'src/components/layout/Img'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\r\n\r\nconst AssetTableCell = (props) => {\r\n  const { asset } = props\r\n\r\n  return (\r\n    <Block justify=\"left\">\r\n      <Img alt={asset.name} height={26} onError={setImageToPlaceholder} src={asset.logoUri} />\r\n      <Paragraph noMargin size=\"lg\" style={{ marginLeft: 10 }}>\r\n        {asset.name}\r\n      </Paragraph>\r\n    </Block>\r\n  )\r\n}\r\n\r\nexport default AssetTableCell\r\n","import { List } from 'immutable'\r\nimport { formatAmountInUsFormat } from 'src/logic/tokens/utils/formatAmount'\r\nimport { TableColumn } from 'src/components/Table/types.d'\r\nimport { Token } from 'src/logic/tokens/store/model/token'\r\nexport const BALANCE_TABLE_ASSET_ID = 'asset'\r\nexport const BALANCE_TABLE_BALANCE_ID = 'balance'\r\nexport const BALANCE_TABLE_VALUE_ID = 'value'\r\n\r\nconst getTokenPriceInCurrency = (balance: string, currencySelected?: string): string => {\r\n  if (!currencySelected) {\r\n    return Number('').toFixed(2)\r\n  }\r\n  return `${formatAmountInUsFormat(Number(balance).toFixed(2))} ${currencySelected}`\r\n}\r\n\r\nexport interface BalanceData {\r\n  asset: { name: string; logoUri: string; address: string; symbol: string }\r\n  assetOrder: string\r\n  balance: string\r\n  balanceOrder: number\r\n  value: string\r\n  valueOrder: number\r\n}\r\n\r\nexport const getBalanceData = (safeTokens: List<Token>, currencySelected?: string): List<BalanceData> => {\r\n  return safeTokens.map((token) => {\r\n    const { tokenBalance, fiatBalance } = token.balance\r\n\r\n    return {\r\n      [BALANCE_TABLE_ASSET_ID]: {\r\n        name: token.name,\r\n        logoUri: token.logoUri,\r\n        address: token.address,\r\n        symbol: token.symbol,\r\n      },\r\n      assetOrder: token.name,\r\n      [BALANCE_TABLE_BALANCE_ID]: `${formatAmountInUsFormat(tokenBalance?.toString() || '0')} ${token.symbol}`,\r\n      balanceOrder: Number(tokenBalance),\r\n      [BALANCE_TABLE_VALUE_ID]: getTokenPriceInCurrency(fiatBalance || '0', currencySelected),\r\n      valueOrder: Number(tokenBalance),\r\n    }\r\n  })\r\n}\r\n\r\nexport const generateColumns = (): List<TableColumn> => {\r\n  const assetColumn: TableColumn = {\r\n    id: BALANCE_TABLE_ASSET_ID,\r\n    order: true,\r\n    disablePadding: false,\r\n    label: 'Asset',\r\n    custom: false,\r\n    static: true,\r\n    width: 250,\r\n  }\r\n\r\n  const balanceColumn: TableColumn = {\r\n    id: BALANCE_TABLE_BALANCE_ID,\r\n    align: 'right',\r\n    order: true,\r\n    disablePadding: false,\r\n    label: 'Balance',\r\n    custom: false,\r\n    static: true,\r\n  }\r\n\r\n  const actions: TableColumn = {\r\n    id: 'actions',\r\n    order: false,\r\n    disablePadding: false,\r\n    label: '',\r\n    custom: true,\r\n    static: true,\r\n  }\r\n\r\n  const value: TableColumn = {\r\n    id: BALANCE_TABLE_VALUE_ID,\r\n    align: 'right',\r\n    order: true,\r\n    label: 'Value',\r\n    custom: false,\r\n    static: true,\r\n    disablePadding: false,\r\n  }\r\n\r\n  return List([assetColumn, balanceColumn, value, actions])\r\n}\r\n","import { sm } from 'src/theme/variables'\r\nimport { createStyles } from '@material-ui/core'\r\n\r\nexport const styles = createStyles({\r\n  iconSmall: {\r\n    fontSize: 16,\r\n  },\r\n  tooltipInfo: {\r\n    position: 'relative',\r\n    top: '3px',\r\n    left: '3px',\r\n  },\r\n  hide: {\r\n    '&:hover': {\r\n      backgroundColor: '#f7f5f5',\r\n    },\r\n    '&:hover $actions': {\r\n      visibility: 'initial',\r\n    },\r\n    '&:focus $actions': {\r\n      visibility: 'initial',\r\n    },\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end',\r\n    visibility: 'hidden',\r\n  },\r\n  leftIcon: {\r\n    marginRight: sm,\r\n  },\r\n  currencyValueRow: {\r\n    textAlign: 'right',\r\n  },\r\n})\r\n","import React, { useEffect, useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useSelector } from 'react-redux'\r\nimport { List } from 'immutable'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport { Skeleton } from '@material-ui/lab'\r\n\r\nimport InfoIcon from 'src/assets/icons/info_red.svg'\r\nimport { FixedIcon, Text, Button } from '@gnosis.pm/safe-react-components'\r\n\r\nimport Img from 'src/components/layout/Img'\r\nimport Table from 'src/components/Table'\r\nimport { cellWidth } from 'src/components/Table/TableHead'\r\nimport Row from 'src/components/layout/Row'\r\nimport { BALANCE_ROW_TEST_ID } from 'src/routes/safe/components/Balances'\r\nimport AssetTableCell from 'src/routes/safe/components/Balances/AssetTableCell'\r\nimport {\r\n  BALANCE_TABLE_ASSET_ID,\r\n  BALANCE_TABLE_BALANCE_ID,\r\n  BALANCE_TABLE_VALUE_ID,\r\n  generateColumns,\r\n  getBalanceData,\r\n  BalanceData,\r\n} from 'src/routes/safe/components/Balances/dataFetcher'\r\nimport { extendedSafeTokensSelector, grantedSelector } from 'src/routes/safe/container/selector'\r\nimport { useAnalytics, SAFE_NAVIGATION_EVENT } from 'src/utils/googleAnalytics'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { styles } from './styles'\r\nimport { currentCurrencySelector } from 'src/logic/currencyValues/store/selectors'\r\n\r\nconst StyledButton = styled(Button)`\r\n  &&.MuiButton-root {\r\n    margin: 4px 12px 4px 0px;\r\n    padding: 0 12px;\r\n    min-width: auto;\r\n  }\r\n  svg {\r\n    margin: 0 6px 0 0;\r\n  }\r\n`\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\ntype Props = {\r\n  showReceiveFunds: () => void\r\n  showSendFunds: (tokenAddress: string) => void\r\n}\r\n\r\ntype CurrencyTooltipProps = {\r\n  valueWithCurrency: string\r\n  balanceWithSymbol: string\r\n}\r\n\r\nconst CurrencyTooltip = (props: CurrencyTooltipProps): React.ReactElement | null => {\r\n  const { balanceWithSymbol, valueWithCurrency } = props\r\n  const classes = useStyles()\r\n  const balance = balanceWithSymbol.replace(/[^\\d.-]/g, '')\r\n  const value = valueWithCurrency.replace(/[^\\d.-]/g, '')\r\n  if (!Number(value) && Number(balance)) {\r\n    return (\r\n      <Tooltip placement=\"top\" title=\"Value may be zero due to missing token price information\">\r\n        <span>\r\n          <Img className={classes.tooltipInfo} alt=\"Info Tooltip\" height={16} src={InfoIcon} />\r\n        </span>\r\n      </Tooltip>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nconst Coins = (props: Props): React.ReactElement => {\r\n  const { showReceiveFunds, showSendFunds } = props\r\n  const classes = useStyles()\r\n  const columns = generateColumns()\r\n  const autoColumns = columns.filter((c) => !c.custom)\r\n  const selectedCurrency = useSelector(currentCurrencySelector)\r\n  const safeTokens = useSelector(extendedSafeTokensSelector)\r\n  const granted = useSelector(grantedSelector)\r\n  const { trackEvent } = useAnalytics()\r\n\r\n  useEffect(() => {\r\n    trackEvent({ category: SAFE_NAVIGATION_EVENT, action: 'Coins' })\r\n  }, [trackEvent])\r\n\r\n  const filteredData: List<BalanceData> = useMemo(() => getBalanceData(safeTokens, selectedCurrency), [\r\n    safeTokens,\r\n    selectedCurrency,\r\n  ])\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table columns={columns} data={filteredData} defaultRowsPerPage={100} label=\"Balances\" size={filteredData.size}>\r\n        {(sortedData) =>\r\n          sortedData.map((row, index) => (\r\n            <TableRow className={classes.hide} data-testid={BALANCE_ROW_TEST_ID} key={index} tabIndex={-1}>\r\n              {autoColumns.map((column) => {\r\n                const { align, id, width } = column\r\n                let cellItem\r\n                switch (id) {\r\n                  case BALANCE_TABLE_ASSET_ID: {\r\n                    cellItem = <AssetTableCell asset={row[id]} />\r\n                    break\r\n                  }\r\n                  case BALANCE_TABLE_BALANCE_ID: {\r\n                    cellItem = <div data-testid={`balance-${row[BALANCE_TABLE_ASSET_ID].symbol}`}>{row[id]}</div>\r\n                    break\r\n                  }\r\n                  case BALANCE_TABLE_VALUE_ID: {\r\n                    // If there are no values for that row but we have balances, we display as '0.00 {CurrencySelected}'\r\n                    // In case we don't have balances, we display a skeleton\r\n                    const showCurrencyValueRow = row[id] || row[BALANCE_TABLE_BALANCE_ID]\r\n                    const valueWithCurrency = row[id] ? row[id] : `0.00 ${selectedCurrency}`\r\n                    cellItem =\r\n                      showCurrencyValueRow && selectedCurrency ? (\r\n                        <div className={classes.currencyValueRow}>\r\n                          {valueWithCurrency}\r\n                          <CurrencyTooltip\r\n                            valueWithCurrency={valueWithCurrency}\r\n                            balanceWithSymbol={row[BALANCE_TABLE_BALANCE_ID]}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton animation=\"wave\" />\r\n                      )\r\n                    break\r\n                  }\r\n                  default: {\r\n                    cellItem = null\r\n                    break\r\n                  }\r\n                }\r\n                return (\r\n                  <TableCell align={align} component=\"td\" key={id} style={cellWidth(width)}>\r\n                    {cellItem}\r\n                  </TableCell>\r\n                )\r\n              })}\r\n              <TableCell component=\"td\">\r\n                <Row align=\"end\" className={classes.actions}>\r\n                  {granted && (\r\n                    <StyledButton\r\n                      color=\"primary\"\r\n                      onClick={() => showSendFunds(row.asset.address)}\r\n                      size=\"md\"\r\n                      variant=\"contained\"\r\n                      data-testid=\"balance-send-btn\"\r\n                    >\r\n                      <FixedIcon type=\"arrowSentWhite\" />\r\n                      <Text size=\"xl\" color=\"white\">\r\n                        Send\r\n                      </Text>\r\n                    </StyledButton>\r\n                  )}\r\n                  <StyledButton color=\"primary\" onClick={showReceiveFunds} size=\"md\" variant=\"contained\">\r\n                    <FixedIcon type=\"arrowReceivedWhite\" />\r\n                    <Text size=\"xl\" color=\"white\">\r\n                      Receive\r\n                    </Text>\r\n                  </StyledButton>\r\n                </Row>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))\r\n        }\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nexport default Coins\r\n"],"sourceRoot":""}