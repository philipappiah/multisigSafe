{"version":3,"sources":["routes/safe/components/Balances/utils/setTokenImgToPlaceholder.ts","routes/safe/components/Balances/assets/token_placeholder.svg","logic/tokens/store/actions/fetchTokens.ts","routes/safe/components/CurrencyDropdown/img/check.svg","routes/safe/components/CurrencyDropdown/style.ts","routes/safe/components/Balances/style.ts","routes/safe/components/CurrencyDropdown/index.tsx","logic/safe/hooks/useFetchTokens.tsx","logic/currencyValues/store/actions/fetchSelectedCurrency.ts","routes/safe/components/Balances/index.tsx"],"names":["setImageToPlaceholder","error","currentTarget","onerror","src","TokenPlaceholder","createStandardTokenContract","a","web3","getWeb3","contract","StandardToken","erc20Token","setProvider","currentProvider","createHumanFriendlyTokenContract","HumanFriendlyToken","humanErc20Token","createERC721TokenContract","ERC721","erc721Token","getHumanFriendlyToken","ensureOnce","getStandardTokenContract","getERC721TokenContract","fetchTokens","dispatch","getState","currentSavedTokens","tokensSelector","fetchErc20AndErc721AssetsList","resp","tokenList","data","results","logError","Errors","_600","message","erc20Tokens","filter","token","type","toLowerCase","size","length","tokens","List","map","makeToken","addTokens","buttonWidth","useDropdownStyles","makeStyles","listItem","maxWidth","props","boxSizing","listItemSearch","padding","localFlag","backgroundPosition","backgroundRepeat","backgroundSize","height","width","etherFlag","iconLeft","marginRight","iconRight","marginLeft","button","backgroundColor","border","borderRadius","color","cursor","fontSize","fontWeight","lineHeight","minWidth","outline","textAlign","opacity","buttonInner","display","position","borderLeft","borderRight","borderTop","content","right","top","openMenuButton","borderBottom","dropdownItemsScrollWrapper","maxHeight","overflow","search","searchIcon","alignItems","justifyContent","left","margin","pointerEvents","transform","fill","inputRoot","inputInput","styles","createStyles","controls","md","assetTabs","order","screenSm","assetDivider","borderRightColor","secondary","assetTab","textDecoration","assetTabActive","tokenControls","manageTokensButton","send","xs","nativeCoin","getNetworkInfo","CurrencyDropdown","useDispatch","useState","anchorEl","setAnchorEl","selectedCurrency","useSelector","currentCurrencySelector","searchParams","setSearchParams","currenciesList","availableCurrenciesSelector","tokenImage","logoUri","classes","currenciesListFiltered","currency","includes","handleClose","theme","DropdownListTheme","className","onClick","event","classNames","Menu","anchorOrigin","horizontal","vertical","elevation","getContentAnchorEl","id","keepMounted","onClose","open","Boolean","transformOrigin","TransitionProps","mountOnEnter","unmountOnExit","MenuItem","key","InputBase","root","input","inputProps","onChange","target","value","placeholder","currencyName","newCurrencySelectedName","setSelectedCurrency","ListItemIcon","sameString","symbol","Img","alt","toLocaleLowerCase","onError","ListItemText","primary","CheckIcon","useFetchTokens","safeAddress","location","useLocation","currentCurrency","useMemo","COINS_LOCATION_REGEX","test","pathname","batch","loadSelectedCurrency","storedSelectedCurrency","console","Promise","resolve","fetchSafeTokens","COLLECTIBLES_LOCATION_REGEX","fetchCollectibles","Collectibles","React","lazy","Coins","MANAGE_TOKENS_BUTTON_TEST_ID","BALANCE_ROW_TEST_ID","INITIAL_STATE","erc721Enabled","showToken","sendFunds","isOpen","selectedToken","showReceive","useStyles","Balances","state","setState","address","safeParamAddressFromStateSelector","featuresEnabled","safeFeaturesEnabledSelector","safeName","useSafeName","useEffect","FEATURES","prevState","onHide","action","showSendFunds","tokenAddress","Row","align","Col","sm","start","to","SAFELIST_ADDRESS","activeClassName","data-testid","exact","Divider","path","render","end","wrapInSuspense","showReceiveFunds","SendModal","activeScreenType","Modal","description","paperClassName","title","ReceiveModal"],"mappings":"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","file":"static/js/38.99134401.chunk.js","sourcesContent":["import { SyntheticEvent } from 'react'\r\n\r\nimport TokenPlaceholder from 'src/routes/safe/components/Balances/assets/token_placeholder.svg'\r\n\r\nexport const setImageToPlaceholder = (error: SyntheticEvent<HTMLImageElement, Event>): void => {\r\n  error.currentTarget.onerror = null\r\n  error.currentTarget.src = TokenPlaceholder\r\n}\r\n","export default __webpack_public_path__ + \"static/media/token_placeholder.c1abe466.svg\";","import StandardToken from '@gnosis.pm/util-contracts/build/contracts/GnosisStandardToken.json'\r\nimport HumanFriendlyToken from '@gnosis.pm/util-contracts/build/contracts/HumanFriendlyToken.json'\r\nimport ERC721 from '@openzeppelin/contracts/build/contracts/ERC721.json'\r\nimport { List } from 'immutable'\r\nimport contract from '@truffle/contract/index.js'\r\nimport { addTokens } from 'src/logic/tokens/store/actions/addTokens'\r\nimport { fetchErc20AndErc721AssetsList } from 'src/logic/tokens/api'\r\nimport { makeToken } from 'src/logic/tokens/store/model/token'\r\nimport { tokensSelector } from 'src/logic/tokens/store/selectors'\r\nimport { getWeb3 } from 'src/logic/wallets/getWeb3'\r\nimport { AppReduxState } from 'src/store'\r\nimport { ensureOnce } from 'src/utils/singleton'\r\nimport { ThunkDispatch } from 'redux-thunk'\r\nimport { AnyAction } from 'redux'\r\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\r\nimport { TokenResult } from '../../api/fetchErc20AndErc721AssetsList'\r\n\r\nconst createStandardTokenContract = async () => {\r\n  const web3 = getWeb3()\r\n  const erc20Token = await contract(StandardToken)\r\n  erc20Token.setProvider(web3.currentProvider)\r\n  return erc20Token\r\n}\r\n\r\nconst createHumanFriendlyTokenContract = async () => {\r\n  const web3 = getWeb3()\r\n  const humanErc20Token = await contract(HumanFriendlyToken)\r\n  humanErc20Token.setProvider(web3.currentProvider)\r\n\r\n  return humanErc20Token\r\n}\r\n\r\nconst createERC721TokenContract = async () => {\r\n  const web3 = getWeb3()\r\n  const erc721Token = await contract(ERC721)\r\n  erc721Token.setProvider(web3.currentProvider)\r\n  return erc721Token\r\n}\r\n\r\nexport const getHumanFriendlyToken = ensureOnce(createHumanFriendlyTokenContract)\r\n\r\nexport const getStandardTokenContract = ensureOnce(createStandardTokenContract)\r\n\r\nexport const getERC721TokenContract = ensureOnce(createERC721TokenContract)\r\n\r\nexport const containsMethodByHash = async (contractAddress: string, methodHash: string): Promise<boolean> => {\r\n  const web3 = getWeb3()\r\n  const byteCode = await web3.eth.getCode(contractAddress)\r\n\r\n  return byteCode.indexOf(methodHash.replace('0x', '')) !== -1\r\n}\r\n\r\nexport const fetchTokens = () => async (\r\n  dispatch: ThunkDispatch<AppReduxState, undefined, AnyAction>,\r\n  getState: () => AppReduxState,\r\n): Promise<void> => {\r\n  const currentSavedTokens = tokensSelector(getState())\r\n\r\n  let tokenList: TokenResult[]\r\n  try {\r\n    const resp = await fetchErc20AndErc721AssetsList()\r\n    tokenList = resp.data.results\r\n  } catch (e) {\r\n    logError(Errors._600, e.message)\r\n    return\r\n  }\r\n\r\n  const erc20Tokens = tokenList.filter((token) => token.type.toLowerCase() === 'erc20')\r\n\r\n  if (currentSavedTokens?.size === erc20Tokens.length) {\r\n    return\r\n  }\r\n\r\n  const tokens = List(erc20Tokens.map((token) => makeToken(token)))\r\n\r\n  dispatch(addTokens(tokens))\r\n}\r\n","export default __webpack_public_path__ + \"static/media/check.bdba8480.svg\";","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst buttonWidth = '140px'\r\nexport const useDropdownStyles = makeStyles({\r\n  listItem: {\r\n    maxWidth: (props: any) => (props.buttonWidth ? props.buttonWidth : buttonWidth),\r\n    boxSizing: 'border-box',\r\n  },\r\n  listItemSearch: {\r\n    maxWidth: (props: any) => (props.buttonWidth ? props.buttonWidth : buttonWidth),\r\n    padding: '0',\r\n    boxSizing: 'border-box',\r\n  },\r\n  localFlag: {\r\n    backgroundPosition: '50% 50%',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'contain',\r\n    height: '20px !important',\r\n    width: '26px !important',\r\n  },\r\n  etherFlag: {\r\n    backgroundPosition: '50% 50%',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'contain',\r\n    width: '26px',\r\n    height: '26px',\r\n  },\r\n  iconLeft: {\r\n    marginRight: '10px',\r\n  },\r\n  iconRight: {\r\n    marginLeft: '18px',\r\n  },\r\n  button: {\r\n    backgroundColor: '#e8e7e6',\r\n    border: 'none',\r\n    borderRadius: '3px',\r\n    boxSizing: 'border-box',\r\n    color: '#5d6d74',\r\n    cursor: 'pointer',\r\n    fontSize: '12px',\r\n    fontWeight: 'normal',\r\n    height: '24px',\r\n    lineHeight: '1.33',\r\n    marginRight: '20px',\r\n    minWidth: (props: any) => (props.buttonWidth ? props.buttonWidth : buttonWidth),\r\n    outline: 'none',\r\n    padding: '0',\r\n    textAlign: 'left',\r\n    '&:active': {\r\n      opacity: '0.8',\r\n    },\r\n  },\r\n  buttonInner: {\r\n    boxSizing: 'border-box',\r\n    display: 'block',\r\n    height: '100%',\r\n    lineHeight: '24px',\r\n    padding: '0 22px 0 8px',\r\n    position: 'relative',\r\n    width: '100%',\r\n    '&::after': {\r\n      borderLeft: '5px solid transparent',\r\n      borderRight: '5px solid transparent',\r\n      borderTop: '5px solid #5d6d74',\r\n      content: '\"\"',\r\n      height: '0',\r\n      position: 'absolute',\r\n      right: '8px',\r\n      top: '9px',\r\n      width: '0',\r\n    },\r\n  },\r\n  openMenuButton: {\r\n    '&::after': {\r\n      borderBottom: '5px solid #5d6d74',\r\n      borderLeft: '5px solid transparent',\r\n      borderRight: '5px solid transparent',\r\n      borderTop: 'none',\r\n    },\r\n  },\r\n  dropdownItemsScrollWrapper: {\r\n    maxHeight: '280px',\r\n    overflow: 'auto',\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: '0',\r\n    backgroundColor: '#fff',\r\n    '&:hover': {\r\n      backgroundColor: '#fff',\r\n    },\r\n    marginRight: 0,\r\n    width: '100%',\r\n  },\r\n  searchIcon: {\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n    height: '100%',\r\n    justifyContent: 'center',\r\n    left: '12px',\r\n    margin: '0',\r\n    pointerEvents: 'none',\r\n    position: 'absolute',\r\n    top: '50%',\r\n    transform: 'translateY(-50%)',\r\n    width: '18px',\r\n    '& path': {\r\n      fill: '#b2b5b2',\r\n    },\r\n  },\r\n  inputRoot: {\r\n    color: '#5d6d74',\r\n    fontSize: '14px',\r\n    fontWeight: 'normal',\r\n    lineHeight: '1.43',\r\n    width: '100%',\r\n  },\r\n  inputInput: {\r\n    boxSizing: 'border-box',\r\n    height: '44px',\r\n    padding: '12px 12px 12px 40px',\r\n    width: '100%',\r\n  },\r\n})\r\n","import { md, screenSm, secondary, xs } from 'src/theme/variables'\r\nimport { createStyles } from '@material-ui/core'\r\n\r\nexport const styles = createStyles({\r\n  controls: {\r\n    alignItems: 'center',\r\n    boxSizing: 'border-box',\r\n    justifyContent: 'space-between',\r\n    padding: `${md} 0`,\r\n  },\r\n  assetTabs: {\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n    order: 2,\r\n\r\n    [`@media (min-width: ${screenSm}px)`]: {\r\n      order: '1',\r\n    },\r\n  },\r\n  assetDivider: {\r\n    borderRightColor: `${secondary} !important`,\r\n    height: '18px !important',\r\n  },\r\n  assetTab: {\r\n    color: '#686868',\r\n    margin: '2px 0',\r\n    padding: '0 10px',\r\n    textDecoration: 'underline',\r\n\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n  assetTabActive: {\r\n    color: secondary,\r\n    fontWeight: 'bold',\r\n    margin: '2px 0',\r\n    padding: '0 10px',\r\n    textDecoration: 'none',\r\n  },\r\n  tokenControls: {\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    order: 1,\r\n    padding: '0 0 10px',\r\n\r\n    [`@media (min-width: ${screenSm}px)`]: {\r\n      justifyContent: 'flex-end',\r\n      order: '2',\r\n      padding: '0',\r\n    },\r\n  },\r\n  manageTokensButton: {\r\n    marginLeft: 'auto',\r\n\r\n    [`@media (min-width: ${screenSm}px)`]: {\r\n      marginLeft: '0',\r\n    },\r\n  },\r\n  send: {\r\n    width: '75px',\r\n    minWidth: '75px',\r\n    borderRadius: xs,\r\n    '& > span': {\r\n      fontSize: '14px',\r\n    },\r\n  },\r\n})\r\n","import InputBase from '@material-ui/core/InputBase'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport classNames from 'classnames'\r\nimport 'currency-flags/dist/currency-flags.min.css'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport CheckIcon from './img/check.svg'\r\n\r\nimport { setSelectedCurrency } from 'src/logic/currencyValues/store/actions/setSelectedCurrency'\r\nimport { useDropdownStyles } from 'src/routes/safe/components/CurrencyDropdown/style'\r\nimport { availableCurrenciesSelector, currentCurrencySelector } from 'src/logic/currencyValues/store/selectors'\r\nimport { DropdownListTheme } from 'src/theme/mui'\r\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\r\nimport Img from 'src/components/layout/Img/index'\r\nimport { getNetworkInfo } from 'src/config'\r\nimport { sameString } from 'src/utils/strings'\r\n\r\nconst { nativeCoin } = getNetworkInfo()\r\n\r\nexport const CurrencyDropdown = (): React.ReactElement | null => {\r\n  const dispatch = useDispatch()\r\n  const [anchorEl, setAnchorEl] = useState(null)\r\n  const selectedCurrency = useSelector(currentCurrencySelector)\r\n  const [searchParams, setSearchParams] = useState('')\r\n  const currenciesList = useSelector(availableCurrenciesSelector)\r\n  const tokenImage = nativeCoin.logoUri\r\n  const classes = useDropdownStyles({})\r\n  const currenciesListFiltered = currenciesList.filter((currency) =>\r\n    currency.toLowerCase().includes(searchParams.toLowerCase()),\r\n  )\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null)\r\n  }\r\n\r\n  const onCurrentCurrencyChangedHandler = (newCurrencySelectedName: string) => {\r\n    dispatch(setSelectedCurrency({ selectedCurrency: newCurrencySelectedName }))\r\n    handleClose()\r\n  }\r\n\r\n  if (!selectedCurrency) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <MuiThemeProvider theme={DropdownListTheme}>\r\n      <>\r\n        <button className={classes.button} onClick={handleClick} type=\"button\">\r\n          <span className={classNames(classes.buttonInner, anchorEl && classes.openMenuButton)}>\r\n            {selectedCurrency}\r\n          </span>\r\n        </button>\r\n        <Menu\r\n          anchorEl={anchorEl}\r\n          anchorOrigin={{\r\n            horizontal: 'center',\r\n            vertical: 'bottom',\r\n          }}\r\n          elevation={0}\r\n          getContentAnchorEl={null}\r\n          id=\"customizedMenu\"\r\n          keepMounted\r\n          onClose={handleClose}\r\n          open={Boolean(anchorEl)}\r\n          transformOrigin={{\r\n            horizontal: 'center',\r\n            vertical: 'top',\r\n          }}\r\n          TransitionProps={{ mountOnEnter: true, unmountOnExit: true }}\r\n        >\r\n          <MenuItem className={classes.listItemSearch} key=\"0\">\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                inputProps={{ 'aria-label': 'search' }}\r\n                onChange={(event) => setSearchParams(event.target.value)}\r\n                placeholder=\"Search…\"\r\n                value={searchParams}\r\n              />\r\n            </div>\r\n          </MenuItem>\r\n          <div className={classes.dropdownItemsScrollWrapper}>\r\n            {currenciesListFiltered.map((currencyName) => (\r\n              <MenuItem\r\n                className={classes.listItem}\r\n                key={currencyName}\r\n                onClick={() => onCurrentCurrencyChangedHandler(currencyName)}\r\n                value={currencyName}\r\n              >\r\n                <ListItemIcon className={classes.iconLeft}>\r\n                  {sameString(currencyName, nativeCoin.symbol) ? (\r\n                    <Img\r\n                      alt={nativeCoin.symbol.toLocaleLowerCase()}\r\n                      onError={setImageToPlaceholder}\r\n                      src={tokenImage}\r\n                      className={classNames(classes.etherFlag)}\r\n                    />\r\n                  ) : (\r\n                    <div\r\n                      className={classNames(\r\n                        classes.localFlag,\r\n                        'currency-flag',\r\n                        'currency-flag-lg',\r\n                        `currency-flag-${currencyName.toLowerCase()}`,\r\n                      )}\r\n                    />\r\n                  )}\r\n                </ListItemIcon>\r\n                <ListItemText primary={currencyName} />\r\n                {currencyName === selectedCurrency ? (\r\n                  <ListItemIcon className={classes.iconRight}>\r\n                    <img alt=\"checked\" src={CheckIcon} />\r\n                  </ListItemIcon>\r\n                ) : null}\r\n              </MenuItem>\r\n            ))}\r\n          </div>\r\n        </Menu>\r\n      </>\r\n    </MuiThemeProvider>\r\n  )\r\n}\r\n","import { useMemo } from 'react'\r\nimport { batch, useDispatch, useSelector } from 'react-redux'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nimport { fetchCollectibles } from 'src/logic/collectibles/store/actions/fetchCollectibles'\r\nimport { fetchSelectedCurrency } from 'src/logic/currencyValues/store/actions/fetchSelectedCurrency'\r\nimport { fetchSafeTokens } from 'src/logic/tokens/store/actions/fetchSafeTokens'\r\nimport { fetchTokens } from 'src/logic/tokens/store/actions/fetchTokens'\r\nimport { COINS_LOCATION_REGEX, COLLECTIBLES_LOCATION_REGEX } from 'src/routes/safe/components/Balances'\r\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\r\nimport { currentCurrencySelector } from 'src/logic/currencyValues/store/selectors'\r\n\r\nexport const useFetchTokens = (safeAddress: string): void => {\r\n  const dispatch = useDispatch<Dispatch>()\r\n  const location = useLocation()\r\n  const currentCurrency = useSelector(currentCurrencySelector)\r\n\r\n  useMemo(() => {\r\n    if (COINS_LOCATION_REGEX.test(location.pathname)) {\r\n      batch(() => {\r\n        // fetch tokens there to get symbols for tokens in TXs list\r\n        dispatch(fetchTokens())\r\n        dispatch(fetchSelectedCurrency())\r\n        dispatch(fetchSafeTokens(safeAddress, currentCurrency))\r\n      })\r\n    }\r\n\r\n    if (COLLECTIBLES_LOCATION_REGEX.test(location.pathname)) {\r\n      dispatch(fetchCollectibles(safeAddress))\r\n    }\r\n  }, [dispatch, location.pathname, safeAddress, currentCurrency])\r\n}\r\n","import { Action } from 'redux-actions'\r\nimport { ThunkDispatch } from 'redux-thunk'\r\n\r\nimport { setSelectedCurrency } from 'src/logic/currencyValues/store/actions/setSelectedCurrency'\r\n\r\nimport { loadSelectedCurrency } from 'src/logic/safe/utils/currencyValuesStorage'\r\nimport { AppReduxState } from 'src/store'\r\nimport { SelectedCurrencyPayload } from 'src/logic/currencyValues/store/reducer/currencyValues'\r\n\r\nexport const fetchSelectedCurrency = () => async (\r\n  dispatch: ThunkDispatch<AppReduxState, undefined, Action<SelectedCurrencyPayload>>,\r\n): Promise<void> => {\r\n  try {\r\n    const storedSelectedCurrency = await loadSelectedCurrency()\r\n    dispatch(setSelectedCurrency({ selectedCurrency: storedSelectedCurrency || 'USD' }))\r\n  } catch (err) {\r\n    console.error('Error fetching currency values', err)\r\n  }\r\n  return Promise.resolve()\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles'\r\nimport React, { ReactElement, useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport ReceiveModal from 'src/components/App/ReceiveModal'\r\nimport { styles } from './style'\r\n\r\nimport Modal from 'src/components/Modal'\r\nimport Col from 'src/components/layout/Col'\r\nimport Divider from 'src/components/layout/Divider'\r\n\r\nimport Row from 'src/components/layout/Row'\r\nimport { SAFELIST_ADDRESS } from 'src/routes/routes'\r\nimport SendModal from 'src/routes/safe/components/Balances/SendModal'\r\nimport { CurrencyDropdown } from 'src/routes/safe/components/CurrencyDropdown'\r\nimport { useSafeName } from 'src/logic/addressBook/hooks/useSafeName'\r\nimport { safeFeaturesEnabledSelector, safeParamAddressFromStateSelector } from 'src/logic/safe/store/selectors'\r\n\r\nimport { wrapInSuspense } from 'src/utils/wrapInSuspense'\r\nimport { useFetchTokens } from 'src/logic/safe/hooks/useFetchTokens'\r\nimport { NavLink, Redirect, Route, Switch } from 'react-router-dom'\r\nimport { FEATURES } from 'src/config/networks/network.d'\r\n\r\nconst Collectibles = React.lazy(() => import('src/routes/safe/components/Balances/Collectibles'))\r\nconst Coins = React.lazy(() => import('src/routes/safe/components/Balances/Coins'))\r\n\r\nexport const MANAGE_TOKENS_BUTTON_TEST_ID = 'manage-tokens-btn'\r\nexport const BALANCE_ROW_TEST_ID = 'balance-row'\r\n\r\nconst INITIAL_STATE = {\r\n  erc721Enabled: false,\r\n  showToken: false,\r\n  sendFunds: {\r\n    isOpen: false,\r\n    selectedToken: '',\r\n  },\r\n  showReceive: false,\r\n}\r\n\r\nexport const COINS_LOCATION_REGEX = /\\/balances\\/?$/\r\nexport const COLLECTIBLES_LOCATION_REGEX = /\\/balances\\/collectibles$/\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst Balances = (): ReactElement => {\r\n  const classes = useStyles()\r\n  const [state, setState] = useState(INITIAL_STATE)\r\n\r\n  const address = useSelector(safeParamAddressFromStateSelector)\r\n  const featuresEnabled = useSelector(safeFeaturesEnabledSelector)\r\n  const safeName = useSafeName(address)\r\n\r\n  useFetchTokens(address)\r\n\r\n  useEffect(() => {\r\n    const erc721Enabled = Boolean(featuresEnabled?.includes(FEATURES.ERC721))\r\n\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      erc721Enabled,\r\n    }))\r\n  }, [featuresEnabled])\r\n\r\n  const onShow = (action) => {\r\n    setState((prevState) => ({ ...prevState, [`show${action}`]: true }))\r\n  }\r\n\r\n  const onHide = (action) => {\r\n    setState((prevState) => ({ ...prevState, [`show${action}`]: false }))\r\n  }\r\n\r\n  const showSendFunds = (tokenAddress: string): void => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      sendFunds: {\r\n        isOpen: true,\r\n        selectedToken: tokenAddress,\r\n      },\r\n    }))\r\n  }\r\n\r\n  const hideSendFunds = () => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      sendFunds: {\r\n        isOpen: false,\r\n        selectedToken: '',\r\n      },\r\n    }))\r\n  }\r\n\r\n  const { assetDivider, assetTab, assetTabActive, assetTabs, controls, tokenControls } = classes\r\n  const { erc721Enabled, sendFunds, showReceive } = state\r\n\r\n  return (\r\n    <>\r\n      <Row align=\"center\" className={controls}>\r\n        <Col className={assetTabs} sm={6} start=\"sm\" xs={12}>\r\n          <NavLink\r\n            to={`${SAFELIST_ADDRESS}/${address}/balances`}\r\n            activeClassName={assetTabActive}\r\n            className={assetTab}\r\n            data-testid={'coins-assets-btn'}\r\n            exact\r\n          >\r\n            Coins\r\n          </NavLink>\r\n          {erc721Enabled ? (\r\n            <>\r\n              <Divider className={assetDivider} />\r\n              <NavLink\r\n                to={`${SAFELIST_ADDRESS}/${address}/balances/collectibles`}\r\n                activeClassName={assetTabActive}\r\n                className={assetTab}\r\n                data-testid={'collectibles-assets-btn'}\r\n                exact\r\n              >\r\n                Collectibles\r\n              </NavLink>\r\n            </>\r\n          ) : null}\r\n        </Col>\r\n        <Switch>\r\n          <Route\r\n            path={`${SAFELIST_ADDRESS}/${address}/balances/collectibles`}\r\n            exact\r\n            render={() => {\r\n              return !erc721Enabled ? <Redirect to={`${SAFELIST_ADDRESS}/${address}/balances`} /> : null\r\n            }}\r\n          />\r\n          <Route\r\n            path={`${SAFELIST_ADDRESS}/${address}/balances`}\r\n            exact\r\n            render={() => {\r\n              return (\r\n                <>\r\n                  <Col className={tokenControls} end=\"sm\" sm={6} xs={12}>\r\n                    <CurrencyDropdown />\r\n                  </Col>\r\n                </>\r\n              )\r\n            }}\r\n          />\r\n        </Switch>\r\n      </Row>\r\n      <Switch>\r\n        <Route\r\n          path={`${SAFELIST_ADDRESS}/${address}/balances/collectibles`}\r\n          exact\r\n          render={() => {\r\n            if (erc721Enabled) {\r\n              return wrapInSuspense(<Collectibles />)\r\n            }\r\n            return null\r\n          }}\r\n        />\r\n        <Route\r\n          path={`${SAFELIST_ADDRESS}/${address}/balances`}\r\n          render={() => {\r\n            return wrapInSuspense(<Coins showReceiveFunds={() => onShow('Receive')} showSendFunds={showSendFunds} />)\r\n          }}\r\n        />\r\n      </Switch>\r\n      <SendModal\r\n        activeScreenType=\"sendFunds\"\r\n        isOpen={sendFunds.isOpen}\r\n        onClose={hideSendFunds}\r\n        selectedToken={sendFunds.selectedToken}\r\n      />\r\n      <Modal\r\n        description=\"Receive Tokens Form\"\r\n        handleClose={() => onHide('Receive')}\r\n        open={showReceive}\r\n        paperClassName=\"receive-modal\"\r\n        title=\"Receive Tokens\"\r\n      >\r\n        <ReceiveModal safeAddress={address} safeName={safeName} onClose={() => onHide('Receive')} />\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Balances\r\n"],"sourceRoot":""}