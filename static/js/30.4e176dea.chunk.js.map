{"version":3,"sources":["components/forms/Field/index.tsx","components/forms/TextField/index.tsx","components/forms/GnoForm/index.tsx","assets/icons/qrcode.svg","components/ScanQRModal/style.ts","components/ScanQRModal/index.tsx","components/forms/SelectField/index.tsx","routes/open/components/fields.ts","components/layout/Heading/index.tsx","components/forms/AddressInput/index.tsx","components/Stepper/OpenPaper/index.tsx","routes/open/utils/safeDataExtractor.ts","components/layout/Page/index.tsx","components/layout/Page/index.module.scss","components/layout/Heading/index.module.scss","routes/open/utils/padOwnerIndex.ts","routes/welcome/components/index.tsx","components/Stepper/Controls/index.tsx","components/Stepper/index.tsx","routes/opening/components/Footer.tsx","routes/opening/steps.ts","routes/opening/assets/safe-created.svg","routes/opening/assets/vault-error.svg","routes/opening/assets/creation-process.gif","routes/opening/index.tsx","routes/open/components/ReviewInformation/styles.ts","logic/hooks/useEstimateSafeCreationGas.tsx","routes/open/components/ReviewInformation/index.tsx","routes/open/components/SafeNameForm/index.tsx","routes/open/components/SafeOwnersConfirmationsForm/style.ts","assets/icons/trash.svg","routes/open/components/SafeOwnersConfirmationsForm/index.tsx","routes/open/components/Layout.tsx","utils/timer.ts","routes/open/container/Open.tsx"],"names":["GnoField","props","overflowStyle","overflow","width","useStyles","makeStyles","createStyles","root","paddingTop","lg","paddingBottom","lineHeight","TextField","input","name","onChange","value","restInput","inputAdornment","meta","multiline","rows","testId","text","rest","classes","helperText","undefined","showError","touched","pristine","valid","hasError","error","modifiedSinceLastSubmit","submitError","errorMessage","isInactiveAndPristineOrUntouched","active","isInvalidAndUntouched","disableUnderline","inputRoot","statusClasses","inputProps","autoComplete","inputRootProps","className","InputProps","style","stylesBasedOn","padding","flexDirection","flex","GnoForm","children","decorators","formMutators","initialValues","onSubmit","subscription","validation","mutators","render","handleSubmit","data-testid","submitting","validating","form","validate","styles","heading","justifyContent","maxHeight","boxSizing","loaderContainer","height","close","color","secondaryText","detailsContainer","backgroundColor","background","buttonRow","button","marginLeft","sm","ScanQRModal","isOpen","onClose","onScan","useState","fileUploadModalOpen","setFileUploadModalOpen","setError","cameraBlocked","setCameraBlocked","scannerRef","React","openImageDialog","current","useEffect","onFileScannedResolve","successData","console","Modal","description","handleClose","open","title","Row","align","grow","Paragraph","noMargin","size","IconButton","disableRipple","onClick","Hairline","Col","layout","middle","Block","margin","legacyMode","onError","err","data","ref","facingMode","Button","minWidth","variant","SelectInput","disableError","formControlProps","label","renderValue","dirtySinceLastSubmit","htmlFor","FIELD_NAME","FIELD_CONFIRMATIONS","FIELD_SAFE_NAME","FIELD_CREATION_PROXY_SALT","getOwnerNameBy","index","padOwnerIndex","getOwnerAddressBy","getNumOwnersFrom","values","Object","keys","sort","filter","key","test","length","cx","classNames","bind","Heading","tag","truncate","capitalize","AddressInput","placeholder","fieldMutator","validators","defaultValue","disabled","component","type","composeValidators","required","mustBeEthereumAddress","a","address","trimSpaces","isValidEnsName","isValidCryptoDomainName","getAddressFromDomain","resolverAddr","formattedAddress","checksumAddress","logError","Errors","_101","message","maxWidth","boxShadow","OpenPaper","controls","elevation","getByRegexFrom","regex","accounts","numOwners","map","account","slice","getAccountsFrom","getNamesFrom","getThresholdFrom","Number","confirmations","getSafeNameFrom","getSafeCreationSaltFrom","safeCreationSalt","Page","page","module","exports","toString","padStart","Wrapper","styled","div","StyledCardDouble","Card","StyledCard","CardsCol","StyledButton","TitleWrapper","StyledTitle","Title","StyledTitleOnly","StyledButtonLink","ButtonLink","WelcomeLayout","isOldMultisigMigration","provider","useSelector","providerNameSelector","strong","withoutMargin","textSize","iconType","iconSize","href","target","rel","onConnectButtonClick","Link","to","OPEN_ADDRESS","orientation","LOAD_ADDRESS","controlStyle","borderRadius","firstButtonStyle","marginRight","fontWeight","boldFont","secondary","secondButtonStyle","Controls","next","buttonLabels","currentStep","firstPage","lastPage","onPrevious","penultimate","back","center","xs","transitionProps","timeout","enter","exit","StepperPage","pointerCursor","cursor","GnoStepper","setPage","setValues","getPageProps","pages","Children","toArray","updateInitialProps","useCallback","newInitialProps","formValues","activePageProps","prepareNextInitialProps","pageInitialProps","finalValues","Math","min","count","previous","history","goBack","max","isLastPage","pageNumber","steps","disabledWhenValidating","activePage","restProps","getActivePageFrom","valuesToValidate","Stepper","activeStep","labelProps","StepLabel","StepContent","TransitionProps","StyledText","Text","ButtonWithMargin","FooterContainer","LoaderText","span","GenericFooter","safeCreationTxHash","getExplorerInfo","explorerInfo","url","alt","match","exec","explorerDomain","aria-label","as","ErrorFooter","onCancel","onRetry","id","instruction","footerComponent","continueButtonDisabled","onContinue","Nav","Body","theme","colors","white","CardTitle","FullParagraph","stepIndex","connected","fontColor","BodyImage","BodyDescription","BodyInstruction","BodyFooter","BackButton","SafeDeployment","FooterComponent","creationTxHash","onSuccess","submittedPromise","loading","setLoading","setStepIndex","setSafeCreationTxHash","createdSafeAddress","setCreatedSafeAddress","intervalStarted","setIntervalStarted","waitingSafeDeployed","setWaitingSafeDeployed","setContinueButtonDisabled","confirmationStep","isConfirmationStep","log","onRetryTx","instantiateSafeContracts","loadContracts","once","txHash","on","isTxMined","web3","getWeb3","eth","getTransaction","blockNumber","getTransactionReceipt","status","Error","interval","setInterval","then","clearInterval","awaitUntilSafeIsDeployed","receipt","events","safeAddress","ProxyCreation","returnValues","proxy","abi","decodeLog","logs","topics","getCode","EMPTY_DATA","activeStepIndex","Img","src","VaultErrorSvg","VaultLoading","SuccessSvg","inversecolors","minHeight","screenSm","detailsColumn","ownersColumn","details","borderRight","border","info","textAlign","owners","textOverflow","owner","alignItems","paddingLeft","user","nativeCoin","getNetworkInfo","ReviewComponent","names","addresses","useMemo","gasEstimation","gasCostFormatted","gasLimit","setGasEstimation","userAccount","userAccountSelector","estimateGasForDeployingSafe","calculateGasPrice","gasPrice","estimatedGasCosts","parseInt","gasCost","fromTokenUnit","decimals","formatAmount","estimateGas","useEstimateSafeCreationGas","setValue","weight","TableContainer","Fragment","hash","showAvatar","showCopyBtn","explorerUrl","Review","display","flexWrap","dot","links","StyledField","Field","useSafeNameStyles","SafeNameForm","safeName","validAddressBookName","SafeNamePageComponent","md","link","position","top","left","marginTop","ownerName","marginBottom","ownerAddress","header","fontSize","extraSmallFontSize","trash","add","check","remove","ownersAmount","ownersAmountItem","StyledAddressInput","validateOwnersForm","reduce","result","toLowerCase","includes","errors","ADDRESS_REPEATED_ERROR","push","SafeOwnersForm","validOwners","addressBook","addressBookSelector","setNumOwners","qrModalOpen","setQrModalOpen","scanQrForOwnerName","setScanQrForOwnerName","closeQrModal","onRemoveRow","newValues","ownerRelatedField","RegExp","ownerOrder","ownerField","calculateValuesAfterRemoving","reset","Array","x","addressName","minMaxLength","newOwnerAddress","newOwnerName","getNameFromAddressBook","filterOnlyValidName","noErrorsOn","endAdornment","InputAdornment","openQrModal","QRIcon","SelectField","mustBeInteger","minValue","MenuItem","scannedAddress","startsWith","replace","SafeOwnersPage","otherAccounts","iconStyle","state","field","changeValue","Layout","onCallSafeContractSubmit","safeProps","Date","now","obj","ownerAddresses","ownerNames","threshold","entries","useInitialValuesFrom","SafeNameField","sleep","ms","Promise","resolve","setTimeout","SAFE_PENDING_CREATION_STORAGE_KEY","getSafePropsValuesFromQueryParams","queryParams","isNaN","validateQueryParams","isArray","createSafe","promiEvent","getSafeDeploymentTransaction","send","from","gas","saveToStorage","checkReceiptStatus","transactionHash","safeTx","catch","Open","showProgress","setShowProgress","creationTxPromise","setCreationTxPromise","safeCreationPendingInfo","setSafeCreationPendingInfo","safePropsFromUrl","setSafePropsFromUrl","dispatch","useDispatch","location","useLocation","trackEvent","useAnalytics","query","queryString","parse","search","arrayFormat","owneraddresses","ownernames","loadFromStorage","pendingCreation","load","createSafeProxy","copy","onSafeCreated","ownersNames","ownersAddresses","makeAddressBookEntry","safe","addressBookSafeLoad","buildSafe","addOrUpdateSafe","category","action","backOff","getSafeInfo","startingDelay","retry","e","removeFromStorage","pathname","SAFELIST_ADDRESS","tx","WELCOME_ADDRESS"],"mappings":"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","file":"static/js/30.4e176dea.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Field } from 'react-final-form'\r\n\r\n// $FlowFixMe\r\nconst GnoField = ({ ...props }: any) => <Field {...props} />\r\n\r\nexport default GnoField\r\n","import MuiTextField from '@material-ui/core/TextField'\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\r\nimport React from 'react'\r\n\r\nimport { lg } from 'src/theme/variables'\r\n\r\n// Neded for solving a fix in Windows browsers\r\nconst overflowStyle = {\r\n  overflow: 'hidden',\r\n  width: '100%',\r\n}\r\n\r\nconst styles = () =>\r\n  createStyles({\r\n    root: {\r\n      paddingTop: lg,\r\n      paddingBottom: '12px',\r\n      lineHeight: 0,\r\n    },\r\n  })\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\ntype Props = {\r\n  input: {\r\n    name: string\r\n    onChange?: () => void\r\n    value: string\r\n    placeholder: string\r\n    type: string\r\n  }\r\n  meta: {\r\n    touched?: boolean\r\n    pristine?: boolean\r\n    valid?: boolean\r\n    error?: string\r\n    modifiedSinceLastSubmit?: boolean\r\n    submitError?: boolean\r\n    active?: boolean\r\n  }\r\n  inputAdornment?: { endAdornment: React.ReactElement } | undefined\r\n  multiline: boolean\r\n  rows?: string\r\n  testId: string\r\n  text: string\r\n  disabled?: boolean\r\n  rowsMax?: number\r\n  className?: string\r\n}\r\n\r\nconst TextField = (props: Props): React.ReactElement => {\r\n  const {\r\n    input: { name, onChange, value, ...restInput },\r\n    inputAdornment,\r\n    meta,\r\n    multiline,\r\n    rows,\r\n    testId,\r\n    text,\r\n    ...rest\r\n  } = props\r\n  const classes = useStyles()\r\n  const helperText = value ? text : undefined\r\n  const showError = (meta.touched || !meta.pristine) && !meta.valid\r\n  const hasError = !!meta.error || (!meta.modifiedSinceLastSubmit && !!meta.submitError)\r\n  const errorMessage = meta.error || meta.submitError\r\n  const isInactiveAndPristineOrUntouched = !meta.active && (meta.pristine || !meta.touched)\r\n  const isInvalidAndUntouched = typeof meta.error === 'undefined' ? true : !meta.touched\r\n\r\n  const disableUnderline = isInactiveAndPristineOrUntouched && isInvalidAndUntouched\r\n\r\n  const inputRoot = helperText ? classes.root : ''\r\n  const statusClasses = meta.valid ? 'isValid' : hasError && showError ? 'isInvalid' : ''\r\n  const inputProps = {\r\n    ...restInput,\r\n    autoComplete: 'off',\r\n    'data-testid': testId,\r\n  }\r\n  const inputRootProps = {\r\n    ...inputAdornment,\r\n    className: `${inputRoot} ${statusClasses}`,\r\n    disableUnderline: disableUnderline,\r\n  }\r\n\r\n  return (\r\n    <MuiTextField\r\n      error={hasError && showError}\r\n      helperText={hasError && showError ? errorMessage : helperText || ' '}\r\n      inputProps={inputProps} // blank in order to force to have helper text\r\n      InputProps={inputRootProps}\r\n      multiline={multiline}\r\n      name={name}\r\n      onChange={onChange}\r\n      rows={rows}\r\n      style={overflowStyle}\r\n      value={value}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nexport default TextField\r\n","import * as React from 'react'\r\nimport { Form } from 'react-final-form'\r\n\r\nconst stylesBasedOn = (padding) => ({\r\n  padding: `0 ${padding}%`,\r\n  flexDirection: 'column',\r\n  flex: '1 0 auto',\r\n})\r\n\r\nconst GnoForm = ({\r\n  children,\r\n  decorators,\r\n  formMutators,\r\n  initialValues,\r\n  onSubmit,\r\n  padding = 0,\r\n  subscription,\r\n  testId = '',\r\n  validation,\r\n}: any) => (\r\n  <Form\r\n    decorators={decorators}\r\n    initialValues={initialValues}\r\n    mutators={formMutators}\r\n    onSubmit={onSubmit}\r\n    render={({ handleSubmit, ...rest }) => (\r\n      <form data-testid={testId} onSubmit={handleSubmit} style={stylesBasedOn(padding) as any}>\r\n        {children(rest.submitting, rest.validating, rest, rest.form.mutators)}\r\n      </form>\r\n    )}\r\n    subscription={subscription}\r\n    validate={validation}\r\n  />\r\n)\r\n\r\nexport default GnoForm\r\n","export default __webpack_public_path__ + \"static/media/qrcode.f0b048aa.svg\";","import { background, lg, secondaryText, sm } from 'src/theme/variables'\r\nimport { createStyles } from '@material-ui/core'\r\n\r\nexport const styles = createStyles({\r\n  heading: {\r\n    padding: lg,\r\n    justifyContent: 'space-between',\r\n    maxHeight: '75px',\r\n    boxSizing: 'border-box',\r\n  },\r\n  loaderContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  close: {\r\n    height: '25px',\r\n    width: '25px',\r\n    color: secondaryText,\r\n  },\r\n  detailsContainer: {\r\n    backgroundColor: background,\r\n    maxHeight: '450px',\r\n  },\r\n  buttonRow: {\r\n    height: '84px',\r\n    justifyContent: 'center',\r\n  },\r\n  button: {\r\n    '&:last-child': {\r\n      marginLeft: sm,\r\n    },\r\n  },\r\n})\r\n","import IconButton from '@material-ui/core/IconButton'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Close from '@material-ui/icons/Close'\r\nimport * as React from 'react'\r\nimport QrReader from 'react-qr-reader'\r\n\r\nimport { styles } from './style'\r\n\r\nimport Modal from 'src/components/Modal'\r\nimport Block from 'src/components/layout/Block'\r\nimport Button from 'src/components/layout/Button'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\ntype Props = {\r\n  isOpen: boolean\r\n  onClose: () => void\r\n  onScan: (value: string) => void\r\n}\r\n\r\nexport const ScanQRModal = ({ isOpen, onClose, onScan }: Props): React.ReactElement => {\r\n  const classes = useStyles()\r\n  const [fileUploadModalOpen, setFileUploadModalOpen] = useState<boolean>(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [cameraBlocked, setCameraBlocked] = useState<boolean>(false)\r\n  const scannerRef: any = React.createRef()\r\n  const openImageDialog = React.useCallback(() => {\r\n    scannerRef.current.openImageDialog()\r\n  }, [scannerRef])\r\n\r\n  useEffect(() => {\r\n    if (!fileUploadModalOpen && cameraBlocked && !error) {\r\n      setFileUploadModalOpen(true)\r\n      openImageDialog()\r\n    }\r\n  }, [cameraBlocked, openImageDialog, fileUploadModalOpen, setFileUploadModalOpen, error])\r\n\r\n  const onFileScannedResolve = (error: Error | null, successData: string | null) => {\r\n    if (error) {\r\n      console.error('QR code error', error)\r\n\r\n      if (error.name === 'NotAllowedError' || error.name === 'PermissionDismissedError') {\r\n        setCameraBlocked(true)\r\n        setFileUploadModalOpen(false)\r\n      } else {\r\n        setError('The QR could not be read')\r\n      }\r\n      return\r\n    }\r\n\r\n    if (successData) {\r\n      onScan(successData)\r\n    } else if (cameraBlocked) {\r\n      setError('The QR could not be read')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal description=\"Receive Tokens Form\" handleClose={onClose} open={isOpen} title=\"Receive Tokens\">\r\n      <Row align=\"center\" className={classes.heading} grow>\r\n        <Paragraph noMargin size=\"xl\">\r\n          Scan QR\r\n        </Paragraph>\r\n        <IconButton disableRipple onClick={onClose}>\r\n          <Close className={classes.close} />\r\n        </IconButton>\r\n      </Row>\r\n      <Hairline />\r\n      <Col className={classes.detailsContainer} layout=\"column\" middle=\"xs\">\r\n        {error && (\r\n          <Block padding=\"md\" margin=\"md\">\r\n            {error}\r\n          </Block>\r\n        )}\r\n        <QrReader\r\n          legacyMode={cameraBlocked}\r\n          onError={(err: Error) => onFileScannedResolve(err, null)}\r\n          onScan={(data: string) => onFileScannedResolve(null, data)}\r\n          ref={scannerRef}\r\n          style={{ width: '400px', height: '400px' }}\r\n          facingMode=\"user\"\r\n        />\r\n      </Col>\r\n      <Hairline />\r\n      <Row align=\"center\" className={classes.buttonRow}>\r\n        <Button className={classes.button} color=\"secondary\" minWidth={154} onClick={onClose}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          className={classes.button}\r\n          color=\"primary\"\r\n          minWidth={154}\r\n          onClick={() => {\r\n            setCameraBlocked(true)\r\n            setError(null)\r\n            setFileUploadModalOpen(false)\r\n          }}\r\n          variant=\"contained\"\r\n        >\r\n          Upload an image\r\n        </Button>\r\n      </Row>\r\n    </Modal>\r\n  )\r\n}\r\n","import FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\nimport React from 'react'\r\n\r\nconst style = {\r\n  minWidth: '100%',\r\n}\r\n\r\nconst SelectInput = ({\r\n  classes,\r\n  disableError,\r\n  formControlProps,\r\n  input: { name, onChange, value, ...restInput },\r\n  label,\r\n  meta,\r\n  renderValue,\r\n  ...rest\r\n}) => {\r\n  const showError = ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) && meta.touched && !disableError\r\n  const inputProps = {\r\n    ...restInput,\r\n    name,\r\n  }\r\n\r\n  return (\r\n    <FormControl {...formControlProps} error={showError} style={style}>\r\n      <InputLabel htmlFor={name}>{label}</InputLabel>\r\n      <Select\r\n        classes={classes}\r\n        inputProps={inputProps}\r\n        onChange={onChange}\r\n        renderValue={renderValue}\r\n        value={value}\r\n        {...rest}\r\n      />\r\n      {showError && <FormHelperText>{meta.error || meta.submitError}</FormHelperText>}\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default SelectInput\r\n","import { LoadFormValues } from 'src/routes/load/container/Load'\r\nimport { padOwnerIndex } from 'src/routes/open/utils/padOwnerIndex'\r\nimport { CreateSafeValues } from 'src/routes/open/utils/safeDataExtractor'\r\n\r\nexport const FIELD_NAME = 'name'\r\nexport const FIELD_CONFIRMATIONS = 'confirmations'\r\nexport const FIELD_OWNERS = 'owners'\r\nexport const FIELD_SAFE_NAME = 'safeName'\r\nexport const FIELD_CREATION_PROXY_SALT = 'safeCreationSalt'\r\n\r\nexport const getOwnerNameBy = (index: number): string => `owner${padOwnerIndex(index)}Name`\r\nexport const getOwnerAddressBy = (index: number): string => `owner${padOwnerIndex(index)}Address`\r\n\r\nexport const getNumOwnersFrom = (values: CreateSafeValues | LoadFormValues): number => {\r\n  const accounts = Object.keys(values)\r\n    .sort()\r\n    .filter((key) => {\r\n      const res = /^owner\\d+Address$/.test(key)\r\n\r\n      return res && !!values[key]\r\n    })\r\n\r\n  return accounts.length\r\n}\r\n","import classNames from 'classnames/bind'\r\nimport * as React from 'react'\r\n\r\nimport styles from './index.module.scss'\r\n\r\nimport { capitalize } from 'src/utils/css'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nconst Heading = (props) => {\r\n  const { align, children, className = '', color, margin, tag, testId, truncate, ...rest } = props\r\n\r\n  const classes = cx(className, 'heading', align, tag, margin ? capitalize(margin, 'margin') : undefined, color, {\r\n    truncate,\r\n  })\r\n\r\n  return React.createElement(tag, { ...rest, className: classes, 'data-testid': testId || '' }, children)\r\n}\r\n\r\nexport default Heading\r\n","import * as React from 'react'\r\nimport { Field } from 'react-final-form'\r\nimport { OnChange } from 'react-final-form-listeners'\r\n\r\nimport TextField from 'src/components/forms/TextField'\r\nimport { Validator, composeValidators, mustBeEthereumAddress, required } from 'src/components/forms/validator'\r\nimport { trimSpaces } from 'src/utils/strings'\r\nimport { getAddressFromDomain } from 'src/logic/wallets/getWeb3'\r\nimport { isValidEnsName, isValidCryptoDomainName } from 'src/logic/wallets/ethAddresses'\r\nimport { checksumAddress } from 'src/utils/checksumAddress'\r\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\r\n\r\n// an idea for second field was taken from here\r\n// https://github.com/final-form/react-final-form-listeners/blob/master/src/OnBlur.js\r\n\r\nexport interface AddressInputProps {\r\n  fieldMutator: (address: string) => void\r\n  name?: string\r\n  text?: string\r\n  placeholder?: string\r\n  inputAdornment?: { endAdornment: React.ReactElement } | undefined\r\n  testId: string\r\n  validators?: Validator[]\r\n  defaultValue?: string\r\n  disabled?: boolean\r\n  className?: string\r\n}\r\n\r\nconst AddressInput = ({\r\n  className = '',\r\n  name = 'recipientAddress',\r\n  text = 'Recipient*',\r\n  placeholder = 'Recipient*',\r\n  fieldMutator,\r\n  testId,\r\n  inputAdornment,\r\n  validators = [],\r\n  defaultValue,\r\n  disabled,\r\n}: AddressInputProps): React.ReactElement => (\r\n  <>\r\n    <Field\r\n      className={className}\r\n      component={TextField as any}\r\n      defaultValue={defaultValue}\r\n      disabled={disabled}\r\n      inputAdornment={inputAdornment}\r\n      name={name}\r\n      placeholder={placeholder}\r\n      testId={testId}\r\n      text={text}\r\n      type=\"text\"\r\n      validate={composeValidators(required, mustBeEthereumAddress, ...validators)}\r\n    />\r\n    <OnChange name={name}>\r\n      {async (value: string) => {\r\n        const address = trimSpaces(value)\r\n        if (isValidEnsName(address) || isValidCryptoDomainName(address)) {\r\n          try {\r\n            const resolverAddr = await getAddressFromDomain(address)\r\n            const formattedAddress = checksumAddress(resolverAddr)\r\n            fieldMutator(formattedAddress)\r\n          } catch (err) {\r\n            logError(Errors._101, err.message)\r\n          }\r\n        }\r\n      }}\r\n    </OnChange>\r\n  </>\r\n)\r\n\r\nexport default AddressInput\r\n","import Paper from '@material-ui/core/Paper'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport * as React from 'react'\r\n\r\nimport Block from 'src/components/layout/Block'\r\nimport { lg } from 'src/theme/variables'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: '10px 0 10px 10px',\r\n    maxWidth: '770px',\r\n    boxShadow: '0 0 10px 0 rgba(33,48,77,0.10)',\r\n  },\r\n  padding: {\r\n    padding: lg,\r\n  },\r\n})\r\n\r\ninterface Props {\r\n  padding?: boolean\r\n  controls: React.ReactNode\r\n}\r\n\r\nconst OpenPaper: React.FC<Props> = ({ children, controls, padding = true }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Paper className={classes.root} elevation={1}>\r\n      <Block className={padding ? classes.padding : ''}>{children}</Block>\r\n      {controls}\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default OpenPaper\r\n","import { LoadFormValues } from 'src/routes/load/container/Load'\r\nimport { getNumOwnersFrom } from 'src/routes/open/components/fields'\r\n\r\nexport type CreateSafeValues = {\r\n  confirmations: string\r\n  name: string\r\n  owner0Address?: string\r\n  owner0Name?: string\r\n  safeCreationSalt: number\r\n  gasLimit?: number\r\n  owners?: number | string\r\n}\r\n\r\nconst getByRegexFrom = (regex: RegExp) => (values: CreateSafeValues | LoadFormValues): string[] => {\r\n  const accounts = Object.keys(values)\r\n    .sort()\r\n    .filter((key) => regex.test(key))\r\n\r\n  const numOwners = getNumOwnersFrom(values)\r\n  return accounts.map((account) => values[account]).slice(0, numOwners)\r\n}\r\n\r\nexport const getAccountsFrom = getByRegexFrom(/^owner\\d+Address$/)\r\n\r\nexport const getNamesFrom = getByRegexFrom(/^owner\\d+Name$/)\r\n\r\nexport const getThresholdFrom = (values: CreateSafeValues): number => Number(values.confirmations)\r\n\r\nexport const getSafeNameFrom = (values: CreateSafeValues): string => values.name\r\n\r\nexport const getSafeCreationSaltFrom = (values: CreateSafeValues): number => values.safeCreationSalt\r\n","import classNames from 'classnames/bind'\r\nimport React from 'react'\r\n\r\nimport styles from './index.module.scss'\r\n\r\nconst cx = classNames.bind(styles)\r\n\r\nconst Page = ({ align, children, overflow }: any) => (\r\n  <main className={cx(styles.page, align, { overflow })}>{children}</main>\r\n)\r\n\r\nexport default Page\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Page_page__Zqhwv\",\"center\":\"Page_center__JSSxQ\",\"overflow\":\"Page_overflow__21B4j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Heading_heading__1kulm\",\"h1\":\"Heading_h1__80Cwi\",\"h2\":\"Heading_h2__2onFG\",\"h3\":\"Heading_h3__Sh3ak\",\"h4\":\"Heading_h4__20iR2\",\"center\":\"Heading_center__1Nck5\",\"right\":\"Heading_right__3RAhl\",\"truncate\":\"Heading_truncate__32_2T\",\"marginSm\":\"Heading_marginSm__2g6oz\",\"marginMd\":\"Heading_marginMd__1R4ww\",\"marginLg\":\"Heading_marginLg__3egwb\",\"marginXl\":\"Heading_marginXl__3saYd\",\"soft\":\"Heading_soft__U23-0\",\"medium\":\"Heading_medium__T5cU-\",\"dark\":\"Heading_dark__2HTrR\",\"fancy\":\"Heading_fancy__1opTo\",\"warning\":\"Heading_warning__3Bh_S\",\"primary\":\"Heading_primary__3K9By\",\"secondary\":\"Heading_secondary__IEaLO\",\"disabled\":\"Heading_disabled__3Rs0p\",\"error\":\"Heading_error__LFDiU\",\"white\":\"Heading_white__j6Vyr\"};","export const padOwnerIndex = (index: number | string): string => {\r\n  return index.toString().padStart(4, '0')\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Card,\r\n  Button,\r\n  Title,\r\n  Text,\r\n  Divider,\r\n  ButtonLink,\r\n  Dot,\r\n  Icon,\r\n  Link as LinkSRC,\r\n} from '@gnosis.pm/safe-react-components'\r\n\r\nimport Link from 'src/components/layout/Link'\r\nimport Block from 'src/components/layout/Block'\r\nimport { LOAD_ADDRESS, OPEN_ADDRESS } from 'src/routes/routes'\r\nimport { onConnectButtonClick } from 'src/components/ConnectButton'\r\nimport { useSelector } from 'react-redux'\r\nimport { providerNameSelector } from 'src/logic/wallets/store/selectors'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin: 24px 0 0 0;\r\n`\r\nconst StyledCardDouble = styled(Card)`\r\n  display: flex;\r\n  padding: 0;\r\n`\r\nconst StyledCard = styled(Card)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  margin: 0 20px 0 0;\r\n  max-width: 27%;\r\n  height: 276px;\r\n`\r\nconst CardsCol = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  padding: 24px;\r\n  width: 50%;\r\n`\r\nconst StyledButton = styled(Button)`\r\n  margin-top: auto;\r\n  text-decoration: none;\r\n`\r\nconst TitleWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  margin: 0 0 16px 0;\r\n\r\n  h5 {\r\n    color: white;\r\n  }\r\n`\r\nconst StyledTitle = styled(Title)`\r\n  margin: 0 0 0 16px;\r\n`\r\nconst StyledTitleOnly = styled(Title)`\r\n  margin: 0 0 16px 0;\r\n`\r\nconst StyledButtonLink = styled(ButtonLink)`\r\n  margin: 16px 0 16px -8px;\r\n`\r\n\r\ntype Props = {\r\n  isOldMultisigMigration?: boolean\r\n}\r\n\r\nexport const WelcomeLayout = ({ isOldMultisigMigration }: Props): React.ReactElement => {\r\n  const provider = useSelector(providerNameSelector)\r\n  return (\r\n    <Block>\r\n      {/* Title */}\r\n      <Title size=\"md\" strong>\r\n        Welcome to Gnosis Safe.\r\n      </Title>\r\n\r\n      {/* Subtitle */}\r\n      <Title size=\"xs\">\r\n        {isOldMultisigMigration ? (\r\n          <>\r\n            We will replicate the owner structure from your existing Gnosis MultiSig to let you test the new interface.\r\n            As soon as you feel comfortable, start moving funds to your new Safe.\r\n          </>\r\n        ) : (\r\n          <>\r\n            Gnosis Safe is the most trusted platform to manage digital assets. <br /> Here is how to get started:{' '}\r\n          </>\r\n        )}\r\n      </Title>\r\n\r\n      <>\r\n        <Wrapper>\r\n          {/* Connect wallet */}\r\n          <StyledCard>\r\n            <TitleWrapper>\r\n              <Dot color=\"primary\">\r\n                {!provider ? <Title size=\"xs\">1</Title> : <Icon color=\"white\" type=\"check\" size=\"md\" />}\r\n              </Dot>\r\n              <StyledTitle size=\"sm\" strong withoutMargin>\r\n                Connect wallet\r\n              </StyledTitle>\r\n            </TitleWrapper>\r\n            <Text size=\"xl\">\r\n              Gnosis Safe supports a wide range of wallets that you can choose to interact with your Safe.\r\n            </Text>\r\n            <StyledButtonLink textSize=\"xl\" color=\"primary\" iconType=\"externalLink\" iconSize=\"sm\">\r\n              <LinkSRC\r\n                size=\"xl\"\r\n                href=\"https://help.gnosis-safe.io/en/articles/4689442-why-do-i-need-to-connect-a-wallet\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                title=\"More info about: Why do I need to connect a wallet?\"\r\n              >\r\n                Why do I need to connect a wallet?\r\n              </LinkSRC>\r\n            </StyledButtonLink>\r\n            <StyledButton\r\n              size=\"lg\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={onConnectButtonClick}\r\n              disabled={!!provider}\r\n              data-testid=\"connect-btn\"\r\n            >\r\n              <Text size=\"xl\" color=\"white\">\r\n                Connect wallet\r\n              </Text>\r\n            </StyledButton>\r\n          </StyledCard>\r\n\r\n          <StyledCardDouble disabled={!provider}>\r\n            {/* Create safe */}\r\n            <CardsCol>\r\n              <TitleWrapper>\r\n                <Dot color=\"primary\">\r\n                  <Title size=\"xs\">2</Title>\r\n                </Dot>\r\n                <StyledTitle size=\"sm\" strong withoutMargin>\r\n                  Create Safe\r\n                </StyledTitle>\r\n              </TitleWrapper>\r\n              <Text size=\"xl\">\r\n                Create a new Safe that is controlled by one or multiple owners. <br />\r\n                You will be required to pay a network fee for creating your new Safe.\r\n              </Text>\r\n              <StyledButton size=\"lg\" color=\"primary\" variant=\"contained\" component={Link} to={OPEN_ADDRESS}>\r\n                <Text size=\"xl\" color=\"white\">\r\n                  + Create new Safe\r\n                </Text>\r\n              </StyledButton>\r\n            </CardsCol>\r\n\r\n            <Divider orientation=\"vertical\" />\r\n\r\n            {/* Load safe */}\r\n            <CardsCol>\r\n              <StyledTitleOnly size=\"sm\" strong withoutMargin>\r\n                Add existing Safe\r\n              </StyledTitleOnly>\r\n              <Text size=\"xl\">\r\n                Already have a Safe? Do you want to access your Safe from a different device? Easily add it using your\r\n                Safe address.\r\n              </Text>\r\n              <StyledButton\r\n                variant=\"bordered\"\r\n                iconType=\"safe\"\r\n                iconSize=\"sm\"\r\n                size=\"lg\"\r\n                color=\"secondary\"\r\n                component={Link}\r\n                to={LOAD_ADDRESS}\r\n              >\r\n                <Text size=\"xl\" color=\"secondary\">\r\n                  Add existing Safe\r\n                </Text>\r\n              </StyledButton>\r\n            </CardsCol>\r\n          </StyledCardDouble>\r\n        </Wrapper>\r\n      </>\r\n    </Block>\r\n  )\r\n}\r\n","import * as React from 'react'\r\n\r\nimport Button from 'src/components/layout/Button'\r\nimport Col from 'src/components/layout/Col'\r\nimport Row from 'src/components/layout/Row'\r\nimport { boldFont, sm, lg, secondary } from 'src/theme/variables'\r\n\r\nconst controlStyle = {\r\n  backgroundColor: 'white',\r\n  padding: lg,\r\n  borderRadius: sm,\r\n}\r\n\r\nconst firstButtonStyle = {\r\n  marginRight: sm,\r\n  fontWeight: boldFont,\r\n  color: secondary,\r\n}\r\n\r\nconst secondButtonStyle = {\r\n  fontWeight: boldFont,\r\n}\r\n\r\ninterface Props {\r\n  buttonLabels?: string[]\r\n  currentStep: number\r\n  disabled: boolean\r\n  firstPage: boolean\r\n  lastPage: boolean\r\n  penultimate: boolean\r\n  onPrevious: () => void\r\n}\r\n\r\nconst Controls = ({\r\n  buttonLabels,\r\n  currentStep,\r\n  disabled,\r\n  firstPage,\r\n  lastPage,\r\n  onPrevious,\r\n  penultimate,\r\n}: Props): React.ReactElement => {\r\n  const back = firstPage ? 'Cancel' : 'Back'\r\n\r\n  let next\r\n  if (!buttonLabels) {\r\n    // eslint-disable-next-line\r\n    next = firstPage ? 'Start' : penultimate ? 'Review' : lastPage ? 'Submit' : 'Next'\r\n  } else {\r\n    next = buttonLabels[currentStep]\r\n  }\r\n\r\n  return (\r\n    <Row align=\"center\" grow style={controlStyle}>\r\n      <Col center=\"xs\" xs={12}>\r\n        <Button onClick={onPrevious} size=\"small\" style={firstButtonStyle} type=\"button\">\r\n          {back}\r\n        </Button>\r\n        <Button\r\n          color=\"primary\"\r\n          disabled={disabled}\r\n          size=\"small\"\r\n          style={secondButtonStyle}\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n        >\r\n          {next}\r\n        </Button>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default Controls\r\n","import FormStep from '@material-ui/core/Step'\r\nimport StepContent from '@material-ui/core/StepContent'\r\nimport StepLabel from '@material-ui/core/StepLabel'\r\nimport Stepper from '@material-ui/core/Stepper'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport React, { useCallback, useEffect, useState } from 'react'\r\nimport { FormApi } from 'final-form'\r\n\r\nimport Controls from './Controls'\r\n\r\nimport GnoForm from 'src/components/forms/GnoForm'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport { history } from 'src/store'\r\nimport { LoadFormValues } from 'src/routes/load/container/Load'\r\n\r\nconst transitionProps = {\r\n  timeout: {\r\n    enter: 350,\r\n    exit: 0,\r\n  },\r\n}\r\n\r\nexport interface StepperPageFormProps {\r\n  values: LoadFormValues\r\n  errors: Record<string, string>\r\n  form: FormApi\r\n}\r\n\r\ninterface StepperPageProps {\r\n  validate?: (...args: unknown[]) => undefined | Record<string, string> | Promise<undefined | Record<string, string>>\r\n  component: (\r\n    ...args: unknown[]\r\n  ) => (controls: React.ReactElement, formProps: StepperPageFormProps) => React.ReactElement\r\n  [key: string]: unknown\r\n}\r\n\r\n// TODO: Remove this magic\r\n/* eslint-disable */\r\n// @ts-ignore\r\nexport const StepperPage = ({}: StepperPageProps): null => null\r\n/* eslint-enable */\r\n\r\ntype StepperFormValues = Record<string, string>\r\n\r\ninterface Mutators {\r\n  [key: string]: (...args: unknown[]) => void\r\n}\r\n\r\ninterface GnoStepperProps<V = StepperFormValues> {\r\n  initialValues?: Partial<V>\r\n  onSubmit: (formValues: V) => void\r\n  steps: string[]\r\n  buttonLabels?: string[]\r\n  children: React.ReactNode\r\n  disabledWhenValidating?: boolean\r\n  mutators?: Mutators\r\n  testId?: string\r\n}\r\n\r\nfunction GnoStepper<V>(props: GnoStepperProps<V>): React.ReactElement {\r\n  const [page, setPage] = useState(0)\r\n  const [values, setValues] = useState({})\r\n  const classes = useStyles()\r\n\r\n  useEffect(() => {\r\n    if (props.initialValues) {\r\n      setValues(props.initialValues)\r\n    }\r\n  }, [props.initialValues])\r\n\r\n  const getPageProps: any = (pages) => {\r\n    const aux: any = React.Children.toArray(pages)[page]\r\n    return aux.props\r\n  }\r\n\r\n  const updateInitialProps = useCallback((newInitialProps) => {\r\n    setValues(newInitialProps)\r\n  }, [])\r\n\r\n  const getActivePageFrom = (pages) => {\r\n    const activePageProps = getPageProps(pages)\r\n    const { component, ...restProps } = activePageProps\r\n\r\n    return component({ ...restProps, updateInitialProps })\r\n  }\r\n\r\n  const validate = (valuesToValidate) => {\r\n    const { children } = props\r\n\r\n    const activePage: any = React.Children.toArray(children)[page]\r\n    return activePage.props.validate ? activePage.props.validate(valuesToValidate) : {}\r\n  }\r\n\r\n  const next = async (formValues) => {\r\n    const { children } = props\r\n    const activePageProps = getPageProps(children)\r\n    const { prepareNextInitialProps } = activePageProps\r\n\r\n    let pageInitialProps\r\n    if (prepareNextInitialProps) {\r\n      pageInitialProps = await prepareNextInitialProps(formValues)\r\n    }\r\n\r\n    const finalValues = { ...formValues, ...pageInitialProps }\r\n\r\n    setValues(finalValues)\r\n    setPage(Math.min(page + 1, React.Children.count(children) - 1))\r\n  }\r\n\r\n  const previous = () => {\r\n    const firstPage = page === 0\r\n    if (firstPage) {\r\n      return history.goBack()\r\n    }\r\n\r\n    return setPage(Math.max(page - 1, 0))\r\n  }\r\n\r\n  const handleSubmit = async (formValues) => {\r\n    const { children, onSubmit } = props\r\n    const isLastPage = page === React.Children.count(children) - 1\r\n    if (isLastPage) {\r\n      return onSubmit(formValues)\r\n    }\r\n\r\n    return next(formValues)\r\n  }\r\n\r\n  const isLastPage = (pageNumber: number): boolean => {\r\n    const { steps } = props\r\n    return pageNumber === steps.length - 1\r\n  }\r\n\r\n  const { buttonLabels, children, disabledWhenValidating = false, mutators, steps, testId } = props\r\n  const activePage = getActivePageFrom(children)\r\n\r\n  const lastPage = isLastPage(page)\r\n  const penultimate = isLastPage(page + 1)\r\n\r\n  return (\r\n    <>\r\n      <GnoForm\r\n        formMutators={mutators}\r\n        initialValues={values}\r\n        onSubmit={handleSubmit}\r\n        testId={testId}\r\n        validation={validate}\r\n      >\r\n        {(submitting, validating, ...rest) => {\r\n          const disabled = disabledWhenValidating ? submitting || validating : submitting\r\n          const controls = (\r\n            <>\r\n              <Hairline />\r\n              <Controls\r\n                buttonLabels={buttonLabels}\r\n                currentStep={page}\r\n                disabled={disabled}\r\n                firstPage={page === 0}\r\n                lastPage={lastPage}\r\n                onPrevious={previous}\r\n                penultimate={penultimate}\r\n              />\r\n            </>\r\n          )\r\n\r\n          return (\r\n            <Stepper activeStep={page} classes={{ root: classes.root }} orientation=\"vertical\">\r\n              {steps.map((label, index) => {\r\n                const labelProps: any = {}\r\n                const isClickable = index < page\r\n\r\n                if (isClickable) {\r\n                  labelProps.onClick = () => {\r\n                    setPage(index)\r\n                  }\r\n                  labelProps.className = classes.pointerCursor\r\n                }\r\n\r\n                return (\r\n                  <FormStep key={label}>\r\n                    <StepLabel {...labelProps}>{label}</StepLabel>\r\n                    <StepContent TransitionProps={transitionProps}>{activePage(controls, ...rest)}</StepContent>\r\n                  </FormStep>\r\n                )\r\n              })}\r\n            </Stepper>\r\n          )\r\n        }}\r\n      </GnoForm>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flex: '1 1 auto',\r\n    backgroundColor: 'transparent',\r\n  },\r\n  pointerCursor: {\r\n    '& > .MuiStepLabel-iconContainer': {\r\n      cursor: 'pointer',\r\n    },\r\n    '& > .MuiStepLabel-labelContainer': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n})\r\n\r\nexport default GnoStepper\r\n","import React, { ReactElement, SyntheticEvent } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { Icon, Link, Loader, Text } from '@gnosis.pm/safe-react-components'\r\n\r\nimport Button from 'src/components/layout/Button'\r\nimport { getExplorerInfo } from 'src/config'\r\nimport Hairline from 'src/components/layout/Hairline'\r\n\r\nconst StyledText = styled(Text)`\r\n  display: inline-flex;\r\n  a {\r\n    margin-left: 4px;\r\n  }\r\n  svg {\r\n    position: relative;\r\n    top: 4px;\r\n    left: 4px;\r\n  }\r\n`\r\nconst ButtonWithMargin = styled(Button)`\r\n  margin-right: 16px;\r\n`\r\nconst FooterContainer = styled.div`\r\n  width: 100%;\r\n  height: 76px;\r\n\r\n  button {\r\n    margin-top: 24px;\r\n  }\r\n`\r\n\r\nconst LoaderText = styled.span`\r\n  margin-left: 10px;\r\n`\r\n\r\nexport const GenericFooter = ({ safeCreationTxHash }: { safeCreationTxHash: string }): ReactElement => {\r\n  const explorerInfo = getExplorerInfo(safeCreationTxHash)\r\n  const { url, alt } = explorerInfo()\r\n  const match = /(http|https):\\/\\/(\\w+\\.\\w+)\\/.*/i.exec(url)\r\n  const explorerDomain = match !== null ? match[2] : 'Network Explorer'\r\n\r\n  return (\r\n    <span>\r\n      <Text size=\"xl\">This process should take a couple of minutes.</Text>\r\n      <StyledText size=\"xl\">\r\n        Follow the progress on{' '}\r\n        <Link\r\n          href={url}\r\n          aria-label={alt}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          data-testid=\"safe-create-explorer-link\"\r\n          title=\"More info about this in Etherscan\"\r\n        >\r\n          <Text size=\"xl\" as=\"span\" color=\"primary\">\r\n            {explorerDomain}\r\n          </Text>\r\n          <Icon size=\"sm\" type=\"externalLink\" color=\"primary\" />\r\n        </Link>\r\n      </StyledText>\r\n    </span>\r\n  )\r\n}\r\n\r\nexport const ContinueFooter = ({\r\n  continueButtonDisabled,\r\n  onContinue,\r\n}: {\r\n  continueButtonDisabled: boolean\r\n  onContinue: (event: SyntheticEvent) => void\r\n}): ReactElement => (\r\n  <FooterContainer>\r\n    <Hairline />\r\n    <Button\r\n      color=\"primary\"\r\n      disabled={continueButtonDisabled}\r\n      onClick={onContinue}\r\n      variant=\"contained\"\r\n      data-testid=\"continue-btn\"\r\n    >\r\n      {continueButtonDisabled ? (\r\n        <>\r\n          <Loader size=\"xs\" color=\"secondaryLight\" /> <LoaderText>Loading your safe</LoaderText>\r\n        </>\r\n      ) : (\r\n        <>Get started</>\r\n      )}\r\n    </Button>\r\n  </FooterContainer>\r\n)\r\n\r\nexport const ErrorFooter = ({\r\n  onCancel,\r\n  onRetry,\r\n}: {\r\n  onCancel: (event: SyntheticEvent) => void\r\n  onRetry: (event: SyntheticEvent) => void\r\n}): ReactElement => (\r\n  <FooterContainer>\r\n    <Hairline />\r\n    <ButtonWithMargin onClick={onCancel} variant=\"contained\">\r\n      Cancel\r\n    </ButtonWithMargin>\r\n    <Button color=\"primary\" onClick={onRetry} variant=\"contained\">\r\n      Retry\r\n    </Button>\r\n  </FooterContainer>\r\n)\r\n","import { ContinueFooter, GenericFooter } from './components/Footer'\r\n\r\nexport const isConfirmationStep = (stepIndex?: number): boolean => stepIndex === 0\r\n\r\nexport const steps = [\r\n  {\r\n    id: '1',\r\n    label: 'Waiting for transaction confirmation',\r\n    description: undefined,\r\n    instruction: 'Please confirm the Safe creation in your wallet',\r\n    footerComponent: null,\r\n  },\r\n  {\r\n    id: '2',\r\n    label: 'Transaction submitted',\r\n    description: undefined,\r\n    instruction: 'Please do not leave the page',\r\n    footerComponent: GenericFooter,\r\n  },\r\n  {\r\n    id: '3',\r\n    label: 'Validating transaction',\r\n    description: undefined,\r\n    instruction: 'Please do not leave the page',\r\n    footerComponent: GenericFooter,\r\n  },\r\n  {\r\n    id: '4',\r\n    label: 'Deploying smart contract',\r\n    description: undefined,\r\n    instruction: 'Please do not leave the page',\r\n    footerComponent: GenericFooter,\r\n  },\r\n  {\r\n    id: '5',\r\n    label: 'Generating your Safe',\r\n    description: undefined,\r\n    instruction: 'Please do not leave the page',\r\n    footerComponent: GenericFooter,\r\n  },\r\n  {\r\n    id: '6',\r\n    label: 'Success',\r\n    description: 'Your Safe was created successfully',\r\n    instruction: undefined,\r\n    footerComponent: ContinueFooter,\r\n  },\r\n]\r\n","export default __webpack_public_path__ + \"static/media/safe-created.a4191f5c.svg\";","export default __webpack_public_path__ + \"static/media/vault-error.6a7f7919.svg\";","export default __webpack_public_path__ + \"static/media/creation-process.b0164935.gif\";","import { Loader, Stepper } from '@gnosis.pm/safe-react-components'\r\nimport React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { ErrorFooter } from 'src/routes/opening/components/Footer'\r\nimport { isConfirmationStep, steps } from './steps'\r\n\r\nimport Button from 'src/components/layout/Button'\r\nimport Heading from 'src/components/layout/Heading'\r\nimport Img from 'src/components/layout/Img'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport { instantiateSafeContracts } from 'src/logic/contracts/safeContracts'\r\nimport { EMPTY_DATA } from 'src/logic/wallets/ethTransactions'\r\nimport { getWeb3 } from 'src/logic/wallets/getWeb3'\r\nimport { background, connected, fontColor } from 'src/theme/variables'\r\nimport { providerNameSelector } from 'src/logic/wallets/store/selectors'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport SuccessSvg from './assets/safe-created.svg'\r\nimport VaultErrorSvg from './assets/vault-error.svg'\r\nimport VaultLoading from './assets/creation-process.gif'\r\nimport { PromiEvent, TransactionReceipt } from 'web3-core'\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 250px auto;\r\n  grid-template-rows: 43px auto;\r\n  margin-bottom: 30px;\r\n`\r\n\r\nconst Title = styled(Heading)`\r\n  grid-column: 1/3;\r\n  grid-row: 1;\r\n  margin: 7px 0 0 0 !important;\r\n`\r\n\r\nconst Nav = styled.div`\r\n  grid-column: 1;\r\n  grid-row: 2;\r\n`\r\n\r\nconst Body = styled.div`\r\n  grid-column: 2;\r\n  grid-row: 2;\r\n  text-align: center;\r\n  background-color: ${({ theme }) => theme.colors.white};\r\n  border-radius: 5px;\r\n  min-width: 700px;\r\n  padding-top: 70px;\r\n  box-shadow: 0 0 10px 0 rgba(33, 48, 77, 0.1);\r\n\r\n  display: grid;\r\n  grid-template-rows: 100px 50px 110px 1fr;\r\n`\r\n\r\nconst CardTitle = styled.div`\r\n  font-size: 20px;\r\n  padding-top: 10px;\r\n`\r\n\r\ninterface FullParagraphProps {\r\n  inversecolors: string\r\n  stepIndex: number\r\n}\r\n\r\nconst FullParagraph = styled(Paragraph)<FullParagraphProps>`\r\n  background-color: ${({ stepIndex }) => (stepIndex === 0 ? connected : background)};\r\n  color: ${({ theme, stepIndex }) => (stepIndex === 0 ? theme.colors.white : fontColor)};\r\n  padding: 28px;\r\n  font-size: 20px;\r\n  margin-bottom: 16px;\r\n  transition: color 0.3s ease-in-out, background-color 0.3s ease-in-out;\r\n`\r\n\r\nconst BodyImage = styled.div`\r\n  grid-row: 1;\r\n`\r\nconst BodyDescription = styled.div`\r\n  grid-row: 2;\r\n`\r\nconst BodyInstruction = styled.div`\r\n  grid-row: 3;\r\n  margin: 27px 0;\r\n`\r\nconst BodyFooter = styled.div`\r\n  grid-row: 4;\r\n\r\n  padding: 10px 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n`\r\n\r\nconst BackButton = styled(Button)`\r\n  grid-column: 2;\r\n  margin: 20px auto 0;\r\n`\r\n\r\ntype Props = {\r\n  creationTxHash?: string\r\n  submittedPromise?: PromiEvent<TransactionReceipt>\r\n  onRetry: () => void\r\n  onSuccess: (createdSafeAddress: string) => void\r\n  onCancel: () => void\r\n}\r\n\r\nexport const SafeDeployment = ({\r\n  creationTxHash,\r\n  onCancel,\r\n  onRetry,\r\n  onSuccess,\r\n  submittedPromise,\r\n}: Props): React.ReactElement => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [stepIndex, setStepIndex] = useState(0)\r\n  const [safeCreationTxHash, setSafeCreationTxHash] = useState('')\r\n  const [createdSafeAddress, setCreatedSafeAddress] = useState('')\r\n\r\n  const [error, setError] = useState(false)\r\n  const [intervalStarted, setIntervalStarted] = useState(false)\r\n  const [waitingSafeDeployed, setWaitingSafeDeployed] = useState(false)\r\n  const [continueButtonDisabled, setContinueButtonDisabled] = useState(false)\r\n  const provider = useSelector(providerNameSelector)\r\n\r\n  const confirmationStep = isConfirmationStep(stepIndex)\r\n\r\n  const navigateToSafe = () => {\r\n    setContinueButtonDisabled(true)\r\n    onSuccess(createdSafeAddress)\r\n  }\r\n\r\n  const onError = (error) => {\r\n    setIntervalStarted(false)\r\n    setWaitingSafeDeployed(false)\r\n    setContinueButtonDisabled(false)\r\n    setError(true)\r\n    console.log(error)\r\n  }\r\n\r\n  // discard click event value\r\n  const onRetryTx = () => {\r\n    setStepIndex(0)\r\n    setError(false)\r\n    onRetry()\r\n  }\r\n\r\n  const getImage = () => {\r\n    if (error) {\r\n      return VaultErrorSvg\r\n    }\r\n\r\n    if (stepIndex <= 4) {\r\n      return VaultLoading\r\n    }\r\n\r\n    return SuccessSvg\r\n  }\r\n\r\n  useEffect(() => {\r\n    const loadContracts = async () => {\r\n      await instantiateSafeContracts()\r\n      setLoading(false)\r\n    }\r\n\r\n    if (provider) {\r\n      loadContracts()\r\n    }\r\n  }, [provider])\r\n\r\n  // creating safe from from submission\r\n  useEffect(() => {\r\n    if (submittedPromise === undefined) {\r\n      return\r\n    }\r\n\r\n    setStepIndex(0)\r\n    submittedPromise\r\n      .once('transactionHash', (txHash) => {\r\n        setSafeCreationTxHash(txHash)\r\n        setStepIndex(1)\r\n        setIntervalStarted(true)\r\n      })\r\n      .on('error', onError)\r\n  }, [submittedPromise])\r\n\r\n  // recovering safe creation from txHash\r\n  useEffect(() => {\r\n    if (creationTxHash === undefined) {\r\n      return\r\n    }\r\n    console.log(creationTxHash)\r\n    setSafeCreationTxHash(creationTxHash)\r\n    setStepIndex(1)\r\n    setIntervalStarted(true)\r\n  }, [creationTxHash])\r\n\r\n  useEffect(() => {\r\n    if (!intervalStarted) {\r\n      return\r\n    }\r\n\r\n    const isTxMined = async (txHash) => {\r\n      console.log(txHash)\r\n      const web3 = getWeb3()\r\n\r\n      const txResult = await web3.eth.getTransaction(txHash)\r\n      if (txResult.blockNumber === null) {\r\n        return false\r\n      }\r\n\r\n      const receipt = await web3.eth.getTransactionReceipt(txHash)\r\n      if (!receipt.status) {\r\n        throw Error('TX status reverted')\r\n      }\r\n\r\n      return true\r\n    }\r\n\r\n    const interval = setInterval(async () => {\r\n      if (stepIndex < 4) {\r\n        setStepIndex(stepIndex + 1)\r\n      }\r\n\r\n      // safe created using the form\r\n      if (submittedPromise !== undefined) {\r\n        submittedPromise.then(() => {\r\n          setStepIndex(4)\r\n          setWaitingSafeDeployed(true)\r\n          setIntervalStarted(false)\r\n        })\r\n      }\r\n\r\n      // safe pending creation recovered from storage\r\n      if (creationTxHash !== undefined) {\r\n        try {\r\n          const res = await isTxMined(creationTxHash)\r\n          if (res) {\r\n            setStepIndex(4)\r\n            setWaitingSafeDeployed(true)\r\n            setIntervalStarted(false)\r\n          }\r\n        } catch (error) {\r\n          console.log(\"here\")\r\n          onError(error)\r\n        }\r\n      }\r\n    }, 3000)\r\n\r\n    return () => {\r\n      clearInterval(interval)\r\n    }\r\n  }, [creationTxHash, submittedPromise, intervalStarted, stepIndex, error])\r\n\r\n  useEffect(() => {\r\n    let interval\r\n\r\n    const awaitUntilSafeIsDeployed = async (safeCreationTxHash: string) => {\r\n      console.log(safeCreationTxHash)\r\n      try {\r\n        const web3 = getWeb3()\r\n        const receipt = await web3.eth.getTransactionReceipt(safeCreationTxHash)\r\n\r\n        let safeAddress\r\n\r\n        if (receipt.events) {\r\n          safeAddress = receipt.events.ProxyCreation.returnValues.proxy\r\n          console.log(safeAddress)\r\n        } else {\r\n          // get the address for the just created safe\r\n          const events = web3.eth.abi.decodeLog(\r\n            [\r\n              {\r\n                type: 'address',\r\n                name: 'ProxyCreation',\r\n              },\r\n            ],\r\n            receipt.logs[0].data,\r\n            receipt.logs[0].topics,\r\n          )\r\n          safeAddress = events[0]\r\n        }\r\n\r\n        setCreatedSafeAddress(safeAddress)\r\n\r\n        interval = setInterval(async () => {\r\n          const code = await web3.eth.getCode(safeAddress)\r\n          if (code !== EMPTY_DATA) {\r\n            setStepIndex(5)\r\n          }\r\n        }, 1000)\r\n      } catch (error) {\r\n    \r\n        onError(error)\r\n      }\r\n    }\r\n\r\n    if (!waitingSafeDeployed) {\r\n      return\r\n    }\r\n\r\n    console.log(\"creation hash \", safeCreationTxHash)\r\n    if (typeof safeCreationTxHash === 'string') {\r\n      awaitUntilSafeIsDeployed(safeCreationTxHash)\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(interval)\r\n    }\r\n  }, [safeCreationTxHash, waitingSafeDeployed])\r\n\r\n  if (loading || stepIndex === undefined) {\r\n    return <Loader size=\"sm\" />\r\n  }\r\n\r\n  let FooterComponent\r\n  if (error) {\r\n    FooterComponent = ErrorFooter\r\n  } else if (steps[stepIndex].footerComponent) {\r\n    FooterComponent = steps[stepIndex].footerComponent\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title tag=\"h2\" testId=\"safe-creation-process-title\">\r\n        Safe creation process\r\n      </Title>\r\n      <Nav>\r\n        <Stepper activeStepIndex={stepIndex} error={error} orientation=\"vertical\" steps={steps} />\r\n      </Nav>\r\n      <Body>\r\n        <BodyImage>\r\n          <Img alt=\"Vault\" height={92} src={getImage()} />\r\n        </BodyImage>\r\n\r\n        <BodyDescription>\r\n          <CardTitle>{steps[stepIndex].description || steps[stepIndex].label}</CardTitle>\r\n        </BodyDescription>\r\n\r\n        {steps[stepIndex].instruction && (\r\n          <BodyInstruction>\r\n            <FullParagraph\r\n              color=\"primary\"\r\n              inversecolors={confirmationStep.toString()}\r\n              noMargin\r\n              size=\"md\"\r\n              stepIndex={stepIndex}\r\n            >\r\n              {error ? 'You can Cancel or Retry the Safe creation process.' : steps[stepIndex].instruction}\r\n            </FullParagraph>\r\n          </BodyInstruction>\r\n        )}\r\n\r\n        <BodyFooter>\r\n          {FooterComponent ? (\r\n            <FooterComponent\r\n              continueButtonDisabled={continueButtonDisabled}\r\n              onCancel={onCancel}\r\n              onClick={onRetryTx}\r\n              onContinue={navigateToSafe}\r\n              onRetry={onRetryTx}\r\n              safeCreationTxHash={safeCreationTxHash}\r\n            />\r\n          ) : null}\r\n        </BodyFooter>\r\n      </Body>\r\n\r\n      {stepIndex !== 0 && (\r\n        <BackButton color=\"primary\" minWidth={140} onClick={onCancel} data-testid=\"safe-creation-back-btn\">\r\n          Back\r\n        </BackButton>\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core/styles'\r\nimport { background, border, lg, screenSm, sm } from 'src/theme/variables'\r\n\r\nexport const useStyles = makeStyles(\r\n  createStyles({\r\n    root: {\r\n      minHeight: '300px',\r\n      [`@media (min-width: ${screenSm}px)`]: {\r\n        flexDirection: 'row',\r\n      },\r\n    },\r\n    detailsColumn: {\r\n      minWidth: '100%',\r\n      [`@media (min-width: ${screenSm}px)`]: {\r\n        minWidth: '0',\r\n      },\r\n    },\r\n    ownersColumn: {\r\n      minWidth: '100%',\r\n      [`@media (min-width: ${screenSm}px)`]: {\r\n        minWidth: '0',\r\n      },\r\n    },\r\n    details: {\r\n      padding: lg,\r\n      borderRight: `solid 1px ${border}`,\r\n      height: '100%',\r\n    },\r\n    info: {\r\n      backgroundColor: background,\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      padding: lg,\r\n      textAlign: 'center',\r\n    },\r\n    owners: {\r\n      padding: lg,\r\n    },\r\n    name: {\r\n      textOverflow: 'ellipsis',\r\n      overflow: 'hidden',\r\n    },\r\n    owner: {\r\n      alignItems: 'center',\r\n      minWidth: 'fit-content',\r\n      padding: sm,\r\n      paddingLeft: lg,\r\n    },\r\n    user: {\r\n      justifyContent: 'left',\r\n      '& > p': {\r\n        marginRight: sm,\r\n      },\r\n    },\r\n    open: {\r\n      paddingLeft: sm,\r\n      width: 'auto',\r\n      '&:hover': {\r\n        cursor: 'pointer',\r\n      },\r\n    },\r\n  }),\r\n)\r\n","import { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { userAccountSelector } from '../wallets/store/selectors'\r\nimport { estimateGasForDeployingSafe } from 'src/logic/contracts/safeContracts'\r\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\r\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\r\nimport { getNetworkInfo } from 'src/config'\r\nimport { calculateGasPrice } from 'src/logic/wallets/ethTransactions'\r\n\r\ntype EstimateSafeCreationGasProps = {\r\n  addresses: string[]\r\n  numOwners: number\r\n  safeCreationSalt: number\r\n}\r\n\r\ntype SafeCreationEstimationResult = {\r\n  gasEstimation: number // Amount of gas needed for execute or approve the transaction\r\n  gasCostFormatted: string // Cost of gas in format '< | > 100'\r\n  gasLimit: number // Minimum gas requited to execute the Tx\r\n}\r\n\r\nconst { nativeCoin } = getNetworkInfo()\r\n\r\nexport const useEstimateSafeCreationGas = ({\r\n  addresses,\r\n  numOwners,\r\n  safeCreationSalt,\r\n}: EstimateSafeCreationGasProps): SafeCreationEstimationResult => {\r\n  const [gasEstimation, setGasEstimation] = useState<SafeCreationEstimationResult>({\r\n    gasEstimation: 0,\r\n    gasCostFormatted: '< 0.001',\r\n    gasLimit: 0,\r\n  })\r\n  const userAccount = useSelector(userAccountSelector)\r\n\r\n  useEffect(() => {\r\n    const estimateGas = async () => {\r\n      if (!addresses.length || !numOwners || !userAccount) {\r\n        return\r\n      }\r\n\r\n      const gasEstimation = await estimateGasForDeployingSafe(addresses, numOwners, userAccount, safeCreationSalt)\r\n      const gasPrice = await calculateGasPrice()\r\n      const estimatedGasCosts = gasEstimation * parseInt(gasPrice, 10)\r\n      const gasCost = fromTokenUnit(estimatedGasCosts, nativeCoin.decimals)\r\n      const gasCostFormatted = formatAmount(gasCost)\r\n\r\n      setGasEstimation({\r\n        gasEstimation,\r\n        gasCostFormatted,\r\n        gasLimit: gasEstimation,\r\n      })\r\n    }\r\n\r\n    estimateGas()\r\n  }, [numOwners, userAccount, safeCreationSalt, addresses])\r\n\r\n  return gasEstimation\r\n}\r\n","import TableContainer from '@material-ui/core/TableContainer'\r\nimport React, { ReactElement, useEffect, useMemo } from 'react'\r\nimport { getExplorerInfo, getNetworkInfo } from 'src/config'\r\nimport Block from 'src/components/layout/Block'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport OpenPaper from 'src/components/Stepper/OpenPaper'\r\nimport {\r\n  CreateSafeValues,\r\n  getAccountsFrom,\r\n  getNamesFrom,\r\n  getSafeCreationSaltFrom,\r\n} from 'src/routes/open/utils/safeDataExtractor'\r\n\r\nimport { FIELD_CONFIRMATIONS, FIELD_NAME, getNumOwnersFrom } from '../fields'\r\nimport { useStyles } from './styles'\r\nimport { EthHashInfo } from '@gnosis.pm/safe-react-components'\r\nimport { useEstimateSafeCreationGas } from 'src/logic/hooks/useEstimateSafeCreationGas'\r\nimport { FormApi } from 'final-form'\r\nimport { StepperPageFormProps } from 'src/components/Stepper'\r\nimport { LoadFormValues } from 'src/routes/load/container/Load'\r\n\r\ntype ReviewComponentProps = {\r\n  values: LoadFormValues\r\n  form: FormApi\r\n}\r\n\r\nconst { nativeCoin } = getNetworkInfo()\r\n\r\nconst ReviewComponent = ({ values, form }: ReviewComponentProps): ReactElement => {\r\n  const classes = useStyles()\r\n\r\n  const names = getNamesFrom(values)\r\n  const addresses = useMemo(() => getAccountsFrom(values), [values])\r\n\r\n  const numOwners = getNumOwnersFrom(values)\r\n  const safeCreationSalt = getSafeCreationSaltFrom(values as CreateSafeValues)\r\n  const { gasCostFormatted, gasLimit } = useEstimateSafeCreationGas({ addresses, numOwners, safeCreationSalt })\r\n\r\n  useEffect(() => {\r\n    form.mutators.setValue('gasLimit', gasLimit)\r\n  }, [gasLimit, form.mutators])\r\n\r\n  return (\r\n    <>\r\n      <Row className={classes.root}>\r\n        <Col className={classes.detailsColumn} layout=\"column\" xs={4}>\r\n          <Block className={classes.details}>\r\n            <Block margin=\"lg\">\r\n              <Paragraph color=\"primary\" noMargin size=\"lg\" data-testid=\"create-safe-step-three\">\r\n                Details\r\n              </Paragraph>\r\n            </Block>\r\n            <Block margin=\"lg\">\r\n              <Paragraph color=\"disabled\" noMargin size=\"sm\">\r\n                Name of new Safe\r\n              </Paragraph>\r\n              <Paragraph\r\n                className={classes.name}\r\n                color=\"primary\"\r\n                noMargin\r\n                size=\"lg\"\r\n                weight=\"bolder\"\r\n                data-testid=\"create-safe-review-name\"\r\n              >\r\n                {values[FIELD_NAME]}\r\n              </Paragraph>\r\n            </Block>\r\n            <Block margin=\"lg\">\r\n              <Paragraph color=\"disabled\" noMargin size=\"sm\">\r\n                Any transaction requires the confirmation of:\r\n              </Paragraph>\r\n              <Paragraph\r\n                color=\"primary\"\r\n                noMargin\r\n                size=\"lg\"\r\n                weight=\"bolder\"\r\n                data-testid={`create-safe-review-req-owners-${values[FIELD_CONFIRMATIONS]}`}\r\n              >\r\n                {`${values[FIELD_CONFIRMATIONS]} out of ${numOwners} owners`}\r\n              </Paragraph>\r\n            </Block>\r\n          </Block>\r\n        </Col>\r\n        <Col className={classes.ownersColumn} layout=\"column\" xs={8}>\r\n          <TableContainer>\r\n            <Block className={classes.owners}>\r\n              <Paragraph color=\"primary\" noMargin size=\"lg\">\r\n                {`${numOwners} Safe owners`}\r\n              </Paragraph>\r\n            </Block>\r\n            <Hairline />\r\n            {names.map((name, index) => (\r\n              <React.Fragment key={`name${index}`}>\r\n                <Row className={classes.owner}>\r\n                  <Col align=\"center\" xs={12}>\r\n                    <EthHashInfo\r\n                      data-testid={`create-safe-owner-name-${index}`}\r\n                      hash={addresses[index]}\r\n                      name={name}\r\n                      showAvatar\r\n                      showCopyBtn\r\n                      explorerUrl={getExplorerInfo(addresses[index])}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Hairline />\r\n              </React.Fragment>\r\n            ))}\r\n          </TableContainer>\r\n        </Col>\r\n      </Row>\r\n      <Row align=\"center\" className={classes.info}>\r\n        <Paragraph color=\"primary\" noMargin size=\"lg\">\r\n          You&apos;re about to create a new Safe and will have to confirm a transaction with your currently connected\r\n          wallet. The creation will cost approximately {gasCostFormatted} {nativeCoin.name}. The exact amount will be\r\n          determined by your wallet.\r\n        </Paragraph>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport const Review = () =>\r\n  function ReviewPage(controls: React.ReactNode, props: StepperPageFormProps): React.ReactElement {\r\n    return (\r\n      <>\r\n        <OpenPaper controls={controls} padding={false}>\r\n          <ReviewComponent {...props} />\r\n        </OpenPaper>\r\n      </>\r\n    )\r\n  }\r\n","import { createStyles, makeStyles } from '@material-ui/core/styles'\r\nimport * as React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport OpenPaper from 'src/components/Stepper/OpenPaper'\r\nimport Field from 'src/components/forms/Field'\r\nimport TextField from 'src/components/forms/TextField'\r\nimport { composeValidators, required, validAddressBookName } from 'src/components/forms/validator'\r\nimport Block from 'src/components/layout/Block'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport { FIELD_NAME } from 'src/routes/open/components/fields'\r\nimport { secondary, sm } from 'src/theme/variables'\r\n\r\nconst styles = createStyles({\r\n  root: {\r\n    display: 'flex',\r\n    maxWidth: '440px',\r\n  },\r\n  text: {\r\n    flexWrap: 'nowrap',\r\n  },\r\n  dot: {\r\n    marginRight: sm,\r\n  },\r\n  links: {\r\n    '&>a': {\r\n      color: secondary,\r\n    },\r\n  },\r\n})\r\n\r\nconst StyledField = styled(Field)`\r\n  &.MuiTextField-root {\r\n    width: 460px;\r\n  }\r\n`\r\n\r\nconst useSafeNameStyles = makeStyles(styles)\r\n\r\nconst SafeNameForm = ({ safeName }: { safeName: string }): React.ReactElement => {\r\n  const classes = useSafeNameStyles()\r\n\r\n  return (\r\n    <>\r\n      <Block margin=\"lg\">\r\n        <Paragraph color=\"primary\" noMargin size=\"lg\">\r\n          You are about to create a new Safe with one or more owners. First, let&apos;s give your new Safe a name. This\r\n          name is only stored locally and will never be shared with Gnosis or any third parties.\r\n        </Paragraph>\r\n      </Block>\r\n      <Block className={classes.root} margin=\"lg\">\r\n        <StyledField\r\n          component={TextField}\r\n          defaultValue={safeName}\r\n          name={FIELD_NAME}\r\n          placeholder=\"Name of the new Safe\"\r\n          text=\"Safe name\"\r\n          type=\"text\"\r\n          validate={composeValidators(required, validAddressBookName)}\r\n          testId=\"create-safe-name-field\"\r\n        />\r\n      </Block>\r\n      <Block margin=\"lg\">\r\n        <Paragraph className={classes.links} color=\"primary\" noMargin size=\"lg\">\r\n          By continuing you consent to the{' '}\r\n          <a href=\"https://gnosis-safe.io/terms\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n            terms of use\r\n          </a>{' '}\r\n          and{' '}\r\n          <a href=\"https://gnosis-safe.io/privacy\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n            privacy policy\r\n          </a>\r\n          .\r\n        </Paragraph>\r\n      </Block>\r\n    </>\r\n  )\r\n}\r\n\r\nconst SafeNamePageComponent = () =>\r\n  function SafeNamePage(controls, { values }): React.ReactElement {\r\n    const { safeName } = values\r\n    return (\r\n      <OpenPaper controls={controls}>\r\n        <SafeNameForm safeName={safeName} />\r\n      </OpenPaper>\r\n    )\r\n  }\r\n\r\nexport default SafeNamePageComponent\r\n","import { disabled, extraSmallFontSize, lg, md, screenSm, sm, xs } from 'src/theme/variables'\r\nimport { createStyles } from '@material-ui/core'\r\n\r\nexport const styles = createStyles({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  title: {\r\n    padding: `${md} ${lg}`,\r\n  },\r\n  link: {\r\n    paddingLeft: `${xs}`,\r\n    '& svg': {\r\n      position: 'relative',\r\n      top: '1px',\r\n      left: `${xs}`,\r\n      height: '14px',\r\n      width: '14px',\r\n    },\r\n  },\r\n  owner: {\r\n    flexDirection: 'column',\r\n    marginTop: '12px',\r\n    padding: `0 ${lg}`,\r\n    '&:first-child': {\r\n      marginTop: 0,\r\n    },\r\n\r\n    [`@media (min-width: ${screenSm}px)`]: {\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  ownerName: {\r\n    marginBottom: '5px',\r\n    minWidth: '100%',\r\n    [`@media (min-width: ${screenSm}px)`]: {\r\n      marginBottom: '0',\r\n      minWidth: '0',\r\n    },\r\n  },\r\n  ownerAddress: {\r\n    marginBottom: '15px',\r\n    minWidth: '100%',\r\n    [`@media (min-width: ${screenSm}px)`]: {\r\n      marginBottom: '0',\r\n      minWidth: '0',\r\n    },\r\n  },\r\n  header: {\r\n    padding: `${sm} ${lg}`,\r\n    fontSize: extraSmallFontSize,\r\n    color: disabled,\r\n  },\r\n  name: {\r\n    marginRight: `${sm}`,\r\n  },\r\n  trash: {\r\n    top: '5px',\r\n  },\r\n  add: {\r\n    justifyContent: 'center',\r\n  },\r\n  check: {\r\n    color: '#03AE60',\r\n    height: '20px',\r\n  },\r\n  remove: {\r\n    height: '56px',\r\n    maxWidth: '50px',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n  owners: {\r\n    paddingLeft: md,\r\n  },\r\n  ownersAmount: {\r\n    flexDirection: 'column',\r\n    [`@media (min-width: ${screenSm}px)`]: {\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  ownersAmountItem: {\r\n    minWidth: '100%',\r\n    [`@media (min-width: ${screenSm}px)`]: {\r\n      minWidth: '0',\r\n    },\r\n  },\r\n})\r\n","export default __webpack_public_path__ + \"static/media/trash.97d82c4a.svg\";","import InputAdornment from '@material-ui/core/InputAdornment'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport { Icon, Link, Text } from '@gnosis.pm/safe-react-components'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CheckCircle from '@material-ui/icons/CheckCircle'\r\nimport * as React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { styles } from './style'\r\nimport { padOwnerIndex } from 'src/routes/open/utils/padOwnerIndex'\r\nimport QRIcon from 'src/assets/icons/qrcode.svg'\r\nimport trash from 'src/assets/icons/trash.svg'\r\nimport { ScanQRModal } from 'src/components/ScanQRModal'\r\nimport OpenPaper from 'src/components/Stepper/OpenPaper'\r\nimport AddressInput from 'src/components/forms/AddressInput'\r\nimport Field from 'src/components/forms/Field'\r\nimport SelectField from 'src/components/forms/SelectField'\r\nimport TextField from 'src/components/forms/TextField'\r\nimport {\r\n  composeValidators,\r\n  minValue,\r\n  mustBeInteger,\r\n  noErrorsOn,\r\n  required,\r\n  minMaxLength,\r\n  ADDRESS_REPEATED_ERROR,\r\n} from 'src/components/forms/validator'\r\nimport Block from 'src/components/layout/Block'\r\nimport Button from 'src/components/layout/Button'\r\nimport Col from 'src/components/layout/Col'\r\nimport Hairline from 'src/components/layout/Hairline'\r\nimport Img from 'src/components/layout/Img'\r\nimport Paragraph from 'src/components/layout/Paragraph'\r\nimport Row from 'src/components/layout/Row'\r\nimport {\r\n  FIELD_CONFIRMATIONS,\r\n  getNumOwnersFrom,\r\n  getOwnerAddressBy,\r\n  getOwnerNameBy,\r\n} from 'src/routes/open/components/fields'\r\nimport { getAccountsFrom } from 'src/routes/open/utils/safeDataExtractor'\r\nimport { useSelector } from 'react-redux'\r\nimport { addressBookSelector } from 'src/logic/addressBook/store/selectors'\r\nimport { getNameFromAddressBook } from 'src/logic/addressBook/utils'\r\n\r\nconst { useState } = React\r\n\r\nexport const ADD_OWNER_BUTTON = '+ Add another owner'\r\n\r\nconst StyledAddressInput = styled(AddressInput)`\r\n  width: 460px;\r\n`\r\n\r\n/**\r\n * Validates the whole OwnersForm, specially checks for non-repeated addresses\r\n *\r\n * If finds a repeated address, marks it as invalid\r\n * @param {Object<string, string>} values\r\n * @return Object<string, string>\r\n */\r\nexport const validateOwnersForm = (values: Record<string, string>): Record<string, string> => {\r\n  const { errors } = Object.keys(values).reduce(\r\n    (result, key) => {\r\n      if (/owner\\d+Address/.test(key)) {\r\n        const address = values[key].toLowerCase()\r\n\r\n        if (result.addresses.includes(address)) {\r\n          result.errors[key] = ADDRESS_REPEATED_ERROR\r\n        }\r\n\r\n        result.addresses.push(address)\r\n      }\r\n      return result\r\n    },\r\n    { addresses: [] as string[], errors: {} },\r\n  )\r\n  return errors\r\n}\r\n\r\nexport const calculateValuesAfterRemoving = (index: number, values: Record<string, string>): Record<string, string> =>\r\n  Object.keys(values)\r\n    .sort()\r\n    .reduce((newValues, key) => {\r\n      const ownerRelatedField = /owner(\\d+)(Name|Address)/\r\n\r\n      if (!ownerRelatedField.test(key)) {\r\n        // no owner-related field\r\n        newValues[key] = values[key]\r\n        return newValues\r\n      }\r\n\r\n      const ownerToRemove = new RegExp(`owner${padOwnerIndex(index)}(Name|Address)`)\r\n\r\n      if (ownerToRemove.test(key)) {\r\n        // skip, doing anything with the removed field\r\n        return newValues\r\n      }\r\n\r\n      // we only have the owner-related fields to work with\r\n      // we must reduce the index value for those owners that come after the deleted owner row\r\n      const [, ownerOrder, ownerField] = key.match(ownerRelatedField) as RegExpMatchArray\r\n\r\n      if (Number(ownerOrder) > index) {\r\n        // reduce by one the order of the owner\r\n        newValues[`owner${padOwnerIndex(Number(ownerOrder) - 1)}${ownerField}`] = values[key]\r\n      } else {\r\n        // previous owners to the deleted row\r\n        newValues[key] = values[key]\r\n      }\r\n\r\n      return newValues\r\n    }, {} as Record<string, string>)\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst SafeOwnersForm = (props): React.ReactElement => {\r\n  const { errors, form, values } = props\r\n  const classes = useStyles()\r\n\r\n  const validOwners = getNumOwnersFrom(values)\r\n  const addressBook = useSelector(addressBookSelector)\r\n\r\n  const [numOwners, setNumOwners] = useState(validOwners)\r\n  const [qrModalOpen, setQrModalOpen] = useState(false)\r\n  const [scanQrForOwnerName, setScanQrForOwnerName] = useState(null)\r\n\r\n  const openQrModal = (ownerName) => {\r\n    setScanQrForOwnerName(ownerName)\r\n    setQrModalOpen(true)\r\n  }\r\n\r\n  const closeQrModal = () => {\r\n    setQrModalOpen(false)\r\n  }\r\n\r\n  const onRemoveRow = (index) => () => {\r\n    const initialValues = calculateValuesAfterRemoving(index, values)\r\n    form.reset(initialValues)\r\n\r\n    setNumOwners(numOwners - 1)\r\n  }\r\n\r\n  const onAddOwner = () => {\r\n    setNumOwners(numOwners + 1)\r\n  }\r\n\r\n  const handleScan = (value: string | null) => {\r\n    let scannedAddress = value\r\n\r\n    if (scannedAddress?.startsWith('ethereum:')) {\r\n      scannedAddress = scannedAddress.replace('ethereum:', '')\r\n    }\r\n\r\n    form.mutators.setValue(scanQrForOwnerName, scannedAddress)\r\n    closeQrModal()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Block className={classes.title}>\r\n        <Paragraph color=\"primary\" noMargin size=\"lg\" data-testid=\"create-safe-step-two\">\r\n          Your Safe will have one or more owners. We have prefilled the first owner with your connected wallet details,\r\n          but you are free to change this to a different owner.\r\n          <br />\r\n          <br />\r\n          Add additional owners (e.g. wallets of your teammates) and specify how many of them have to confirm a\r\n          transaction before it gets executed. You can also add/remove owners and change the signature threshold after\r\n          your Safe is created.\r\n          <Link\r\n            href=\"https://help.gnosis-safe.io/en/articles/4772567-what-gnosis-safe-setup-should-i-use\"\r\n            target=\"_blank\"\r\n            className={classes.link}\r\n            rel=\"noreferrer\"\r\n            title=\"Learn about which Safe setup to use\"\r\n          >\r\n            <Text size=\"xl\" as=\"span\" color=\"primary\">\r\n              Learn about which Safe setup to use\r\n            </Text>\r\n            <Icon size=\"sm\" type=\"externalLink\" color=\"primary\" />\r\n          </Link>\r\n        </Paragraph>\r\n      </Block>\r\n      <Hairline />\r\n      <Row className={classes.header}>\r\n        <Col xs={3}>NAME</Col>\r\n        <Col xs={7}>ADDRESS</Col>\r\n      </Row>\r\n      <Hairline />\r\n      <Block margin=\"md\" padding=\"md\">\r\n        {[...Array(Number(numOwners))].map((x, index) => {\r\n          const addressName = getOwnerAddressBy(index)\r\n          const ownerName = getOwnerNameBy(index)\r\n\r\n          return (\r\n            <Row className={classes.owner} key={`owner${index}`} data-testid={`create-safe-owner-row`}>\r\n              <Col className={classes.ownerName} xs={3}>\r\n                <Field\r\n                  className={classes.name}\r\n                  component={TextField}\r\n                  name={ownerName}\r\n                  placeholder=\"Owner Name*\"\r\n                  text=\"Owner Name\"\r\n                  type=\"text\"\r\n                  validate={composeValidators(required, minMaxLength(1, 50))}\r\n                  testId={`create-safe-owner-name-field-${index}`}\r\n                />\r\n              </Col>\r\n              <Col className={classes.ownerAddress} xs={7}>\r\n                <StyledAddressInput\r\n                  fieldMutator={(newOwnerAddress) => {\r\n                    const newOwnerName = getNameFromAddressBook(addressBook, newOwnerAddress, {\r\n                      filterOnlyValidName: true,\r\n                    })\r\n                    form.mutators.setValue(addressName, newOwnerAddress)\r\n                    if (newOwnerName) {\r\n                      form.mutators.setValue(ownerName, newOwnerName)\r\n                    }\r\n                  }}\r\n                  // eslint-disable-next-line\r\n                  // @ts-ignore\r\n                  inputAdornment={\r\n                    noErrorsOn(addressName, errors) && {\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <CheckCircle className={classes.check} data-testid={`valid-address-${index}`} />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }\r\n                  }\r\n                  name={addressName}\r\n                  placeholder=\"Owner Address*\"\r\n                  text=\"Owner Address\"\r\n                  testId={`create-safe-address-field-${index}`}\r\n                />\r\n              </Col>\r\n              <Col center=\"xs\" className={classes.remove} middle=\"xs\" xs={1}>\r\n                <Img\r\n                  alt=\"Scan QR\"\r\n                  height={20}\r\n                  onClick={() => {\r\n                    openQrModal(addressName)\r\n                  }}\r\n                  src={QRIcon}\r\n                />\r\n              </Col>\r\n              <Col center=\"xs\" className={classes.remove} middle=\"xs\" xs={1}>\r\n                {index > 0 && <Img alt=\"Delete\" height={20} onClick={onRemoveRow(index)} src={trash} />}\r\n              </Col>\r\n            </Row>\r\n          )\r\n        })}\r\n      </Block>\r\n      <Row align=\"center\" className={classes.add} grow margin=\"xl\">\r\n        <Button color=\"secondary\" data-testid=\"add-owner-btn\" onClick={onAddOwner}>\r\n          <Paragraph noMargin size=\"lg\">\r\n            {ADD_OWNER_BUTTON}\r\n          </Paragraph>\r\n        </Button>\r\n      </Row>\r\n      <Block className={classes.owner} margin=\"md\" padding=\"md\">\r\n        <Paragraph color=\"primary\" size=\"md\">\r\n          Any transaction requires the confirmation of:\r\n        </Paragraph>\r\n        <Row align=\"center\" className={classes.ownersAmount} margin=\"xl\">\r\n          <Col className={classes.ownersAmountItem} xs={1}>\r\n            <Field\r\n              component={SelectField}\r\n              data-testid=\"threshold-select-input\"\r\n              name={FIELD_CONFIRMATIONS}\r\n              validate={composeValidators(required, mustBeInteger, minValue(1))}\r\n            >\r\n              {[...Array(Number(validOwners))].map((x, index) => (\r\n                <MenuItem key={`selectOwner${index}`} value={`${index + 1}`} data-testid={`input-${index + 1}`}>\r\n                  {index + 1}\r\n                </MenuItem>\r\n              ))}\r\n            </Field>\r\n          </Col>\r\n          <Col className={classes.ownersAmountItem} xs={10}>\r\n            <Paragraph\r\n              className={classes.owners}\r\n              color=\"primary\"\r\n              noMargin\r\n              size=\"lg\"\r\n              data-testid={`create-safe-req-conf-${validOwners}`}\r\n            >\r\n              out of {validOwners} owner(s)\r\n            </Paragraph>\r\n          </Col>\r\n        </Row>\r\n      </Block>\r\n      {qrModalOpen && <ScanQRModal isOpen={qrModalOpen} onClose={closeQrModal} onScan={handleScan} />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport const SafeOwnersPage = () =>\r\n  function OpenSafeOwnersPage(controls, { errors, form, values }) {\r\n    return (\r\n      <>\r\n        <OpenPaper controls={controls} padding={false}>\r\n          <SafeOwnersForm errors={errors} form={form} otherAccounts={getAccountsFrom(values)} values={values} />\r\n        </OpenPaper>\r\n      </>\r\n    )\r\n  }\r\n","import IconButton from '@material-ui/core/IconButton'\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\r\nimport * as React from 'react'\r\n\r\nimport Stepper, { StepperPage } from 'src/components/Stepper'\r\nimport Block from 'src/components/layout/Block'\r\nimport Heading from 'src/components/layout/Heading'\r\nimport Row from 'src/components/layout/Row'\r\nimport { instantiateSafeContracts } from 'src/logic/contracts/safeContracts'\r\nimport { Review } from 'src/routes/open/components/ReviewInformation'\r\nimport SafeNameField from 'src/routes/open/components/SafeNameForm'\r\nimport { SafeOwnersPage, validateOwnersForm } from 'src/routes/open/components/SafeOwnersConfirmationsForm'\r\nimport {\r\n  FIELD_CONFIRMATIONS,\r\n  FIELD_CREATION_PROXY_SALT,\r\n  FIELD_SAFE_NAME,\r\n  getOwnerAddressBy,\r\n  getOwnerNameBy,\r\n} from 'src/routes/open/components/fields'\r\nimport { WelcomeLayout } from 'src/routes/welcome/components/index'\r\nimport { history } from 'src/store'\r\nimport { secondary, sm } from 'src/theme/variables'\r\nimport { providerNameSelector, userAccountSelector } from 'src/logic/wallets/store/selectors'\r\nimport { useSelector } from 'react-redux'\r\nimport { addressBookSelector } from 'src/logic/addressBook/store/selectors'\r\nimport { getNameFromAddressBook } from 'src/logic/addressBook/utils'\r\nimport { SafeProps } from 'src/routes/open/container/Open'\r\n\r\nconst { useEffect } = React\r\n\r\nconst getSteps = () => ['Name', 'Owners and confirmations', 'Review']\r\n\r\nexport type InitialValuesForm = {\r\n  owner0Address?: string\r\n  owner0Name?: string\r\n  confirmations: string\r\n  safeName?: string\r\n  safeCreationSalt: number\r\n}\r\n\r\nconst useInitialValuesFrom = (userAccount: string, safeProps?: SafeProps): InitialValuesForm => {\r\n  const addressBook = useSelector(addressBookSelector)\r\n  const ownerName = getNameFromAddressBook(addressBook, userAccount, { filterOnlyValidName: true })\r\n\r\n  if (!safeProps) {\r\n    return {\r\n      [getOwnerNameBy(0)]: ownerName || 'My Wallet',\r\n      [getOwnerAddressBy(0)]: userAccount,\r\n      [FIELD_CONFIRMATIONS]: '1',\r\n      [FIELD_CREATION_PROXY_SALT]: Date.now(),\r\n    }\r\n  }\r\n  let obj = {}\r\n  const { name, ownerAddresses, ownerNames, threshold } = safeProps\r\n\r\n  for (const [index, value] of ownerAddresses.entries()) {\r\n    const safeName = ownerNames[index] ? ownerNames[index] : 'My Wallet'\r\n    obj = {\r\n      ...obj,\r\n      [getOwnerAddressBy(index)]: value,\r\n      [getOwnerNameBy(index)]: safeName,\r\n    }\r\n  }\r\n  return {\r\n    ...obj,\r\n    [FIELD_CONFIRMATIONS]: threshold || '1',\r\n    [FIELD_SAFE_NAME]: name,\r\n    [FIELD_CREATION_PROXY_SALT]: Date.now(),\r\n  }\r\n}\r\n\r\nconst iconStyle = {\r\n  color: secondary,\r\n  padding: sm,\r\n  marginRight: '5px',\r\n}\r\n\r\nconst back = () => {\r\n  history.goBack()\r\n}\r\n\r\nconst formMutators = {\r\n  setValue: ([field, value], state, { changeValue }) => {\r\n    changeValue(state, field, () => value)\r\n  },\r\n}\r\n\r\ntype LayoutProps = {\r\n  onCallSafeContractSubmit: (formValues: unknown) => void\r\n  safeProps?: SafeProps\r\n}\r\n\r\nexport const Layout = (props: LayoutProps): React.ReactElement => {\r\n  const { onCallSafeContractSubmit, safeProps } = props\r\n\r\n  const provider = useSelector(providerNameSelector)\r\n  const userAccount = useSelector(userAccountSelector)\r\n\r\n  useEffect(() => {\r\n    if (provider) {\r\n      instantiateSafeContracts()\r\n    }\r\n  }, [provider])\r\n\r\n  const steps = getSteps()\r\n\r\n  const initialValues = useInitialValuesFrom(userAccount, safeProps)\r\n\r\n  if (!provider) {\r\n    return <WelcomeLayout isOldMultisigMigration />\r\n  }\r\n\r\n  return (\r\n    <Block>\r\n      <Row align=\"center\">\r\n        <IconButton disableRipple onClick={back} style={iconStyle}>\r\n          <ChevronLeft />\r\n        </IconButton>\r\n        <Heading tag=\"h2\" testId=\"create-safe-form-title\">\r\n          Create new Safe\r\n        </Heading>\r\n      </Row>\r\n      <Stepper\r\n        initialValues={initialValues}\r\n        mutators={formMutators}\r\n        onSubmit={onCallSafeContractSubmit}\r\n        steps={steps}\r\n        testId=\"create-safe-form\"\r\n      >\r\n        <StepperPage component={SafeNameField} />\r\n        <StepperPage component={SafeOwnersPage} validate={validateOwnersForm} />\r\n        <StepperPage component={Review} />\r\n      </Stepper>\r\n    </Block>\r\n  )\r\n}\r\n","export const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\r\n","import { Loader } from '@gnosis.pm/safe-react-components'\r\nimport { backOff } from 'exponential-backoff'\r\nimport queryString from 'query-string'\r\nimport React, { useEffect, useState, ReactElement } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { PromiEvent, TransactionReceipt } from 'web3-core'\r\n\r\nimport { SafeDeployment } from 'src/routes/opening'\r\nimport { Layout } from 'src/routes/open/components/Layout'\r\nimport Page from 'src/components/layout/Page'\r\nimport { getSafeDeploymentTransaction } from 'src/logic/contracts/safeContracts'\r\nimport { getSafeInfo } from 'src/logic/safe/utils/safeInformation'\r\nimport { checkReceiptStatus } from 'src/logic/wallets/ethTransactions'\r\nimport {\r\n  CreateSafeValues,\r\n  getAccountsFrom,\r\n  getNamesFrom,\r\n  getSafeCreationSaltFrom,\r\n  getSafeNameFrom,\r\n  getThresholdFrom,\r\n} from 'src/routes/open/utils/safeDataExtractor'\r\nimport { SAFELIST_ADDRESS, WELCOME_ADDRESS } from 'src/routes/routes'\r\nimport { buildSafe } from 'src/logic/safe/store/actions/fetchSafe'\r\nimport { history } from 'src/store'\r\nimport { loadFromStorage, removeFromStorage, saveToStorage } from 'src/utils/storage'\r\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\r\nimport { addressBookSafeLoad } from 'src/logic/addressBook/store/actions'\r\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\r\nimport { addOrUpdateSafe } from 'src/logic/safe/store/actions/addOrUpdateSafe'\r\nimport { useAnalytics } from 'src/utils/googleAnalytics'\r\nimport { sleep } from 'src/utils/timer'\r\n\r\nconst SAFE_PENDING_CREATION_STORAGE_KEY = 'SAFE_PENDING_CREATION_STORAGE_KEY'\r\n\r\ntype LoadedSafeType = CreateSafeValues & { txHash: string }\r\n\r\ninterface SafeCreationQueryParams {\r\n  ownerAddresses: string | string[] | null\r\n  ownerNames: string | string[] | null\r\n  threshold: number | null\r\n  safeName: string | null\r\n}\r\n\r\nexport interface SafeProps {\r\n  name: string\r\n  ownerAddresses: string[]\r\n  ownerNames: string[]\r\n  threshold: string\r\n}\r\n\r\nconst validateQueryParams = (queryParams: SafeCreationQueryParams): boolean => {\r\n  const { ownerAddresses, ownerNames, threshold, safeName } = queryParams\r\n\r\n  if (!ownerAddresses || !ownerNames || !threshold || !safeName) {\r\n    return false\r\n  }\r\n\r\n  if (Number.isNaN(threshold)) {\r\n    return false\r\n  }\r\n\r\n  return threshold > 0 && threshold <= ownerAddresses.length\r\n}\r\n\r\nconst getSafePropsValuesFromQueryParams = (queryParams: SafeCreationQueryParams): SafeProps | undefined => {\r\n  if (!validateQueryParams(queryParams)) {\r\n    return\r\n  }\r\n\r\n  const { threshold, safeName, ownerAddresses, ownerNames } = queryParams\r\n\r\n  return {\r\n    name: safeName as string,\r\n    threshold: (threshold as number).toString(),\r\n    ownerAddresses: Array.isArray(ownerAddresses) ? ownerAddresses : [ownerAddresses as string],\r\n    ownerNames: Array.isArray(ownerNames) ? ownerNames : [ownerNames as string],\r\n  }\r\n}\r\n\r\nexport const createSafe = (values: CreateSafeValues, userAccount: string): PromiEvent<TransactionReceipt> => {\r\n  const confirmations = getThresholdFrom(values)\r\n  const ownerAddresses = getAccountsFrom(values)\r\n  const safeCreationSalt = getSafeCreationSaltFrom(values)\r\n\r\n  const deploymentTx = getSafeDeploymentTransaction(ownerAddresses, confirmations, safeCreationSalt)\r\n  const promiEvent = deploymentTx.send({\r\n    from: userAccount,\r\n    gas: values?.gasLimit,\r\n  })\r\n  \r\n\r\n  promiEvent\r\n    .once('transactionHash', (txHash) => {\r\n      saveToStorage(SAFE_PENDING_CREATION_STORAGE_KEY, { txHash, ...values })\r\n    })\r\n    .then(async (receipt) => {\r\n      await checkReceiptStatus(receipt.transactionHash)\r\n      console.log(receipt)\r\n      const safeAddress = receipt.events?.ProxyCreation.returnValues.proxy\r\n      // returning info for testing purposes, in app is fully async\r\n      return { safeAddress, safeTx: receipt }\r\n    })\r\n    .catch((error) => {\r\n      console.error(error)\r\n    })\r\n\r\n  return promiEvent\r\n}\r\n\r\nconst Open = (): ReactElement => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [showProgress, setShowProgress] = useState(false)\r\n  const [creationTxPromise, setCreationTxPromise] = useState<PromiEvent<TransactionReceipt>>()\r\n  const [safeCreationPendingInfo, setSafeCreationPendingInfo] = useState<{ txHash?: string } | undefined>()\r\n  const [safePropsFromUrl, setSafePropsFromUrl] = useState<SafeProps | undefined>()\r\n  const userAccount = useSelector(userAccountSelector)\r\n  const dispatch = useDispatch()\r\n  const location = useLocation()\r\n  const { trackEvent } = useAnalytics()\r\n\r\n  useEffect(() => {\r\n    // #122: Allow to migrate an old Multisig by passing the parameters to the URL.\r\n    const query = queryString.parse(location.search, { arrayFormat: 'comma' })\r\n    const { name, owneraddresses, ownernames, threshold } = query\r\n\r\n    const safeProps = getSafePropsValuesFromQueryParams({\r\n      ownerAddresses: owneraddresses,\r\n      ownerNames: ownernames,\r\n      threshold: Number(threshold),\r\n      safeName: name as string | null,\r\n    })\r\n\r\n    setSafePropsFromUrl(safeProps)\r\n  }, [location])\r\n\r\n  // check if there is a safe being created\r\n  useEffect(() => {\r\n    const load = async () => {\r\n      const pendingCreation = await loadFromStorage<{ txHash: string }>(SAFE_PENDING_CREATION_STORAGE_KEY)\r\n      if (pendingCreation && pendingCreation.txHash) {\r\n        setSafeCreationPendingInfo(pendingCreation)\r\n        setShowProgress(true)\r\n      } else {\r\n        setShowProgress(false)\r\n      }\r\n      setLoading(false)\r\n    }\r\n\r\n    load()\r\n  }, [])\r\n\r\n  const createSafeProxy = async (formValues?: CreateSafeValues) => {\r\n    let values = formValues\r\n\r\n    // save form values, used when the user rejects the TX and wants to retry\r\n    if (values) {\r\n      const copy = { ...values }\r\n      saveToStorage(SAFE_PENDING_CREATION_STORAGE_KEY, copy)\r\n    } else {\r\n      values = (await loadFromStorage(SAFE_PENDING_CREATION_STORAGE_KEY)) as CreateSafeValues\r\n    }\r\n\r\n    const promiEvent = createSafe(values, userAccount)\r\n    setCreationTxPromise(promiEvent)\r\n    setShowProgress(true)\r\n  }\r\n\r\n  const onSafeCreated = async (safeAddress: string): Promise<void> => {\r\n    const pendingCreation = await loadFromStorage<LoadedSafeType>(SAFE_PENDING_CREATION_STORAGE_KEY)\r\n\r\n    let name = ''\r\n    let ownersNames: string[] = []\r\n    let ownersAddresses: string[] = []\r\n\r\n    if (pendingCreation) {\r\n      name = getSafeNameFrom(pendingCreation)\r\n      ownersNames = getNamesFrom(pendingCreation as CreateSafeValues)\r\n      ownersAddresses = getAccountsFrom(pendingCreation)\r\n    }\r\n\r\n    const owners = ownersAddresses.map((address, index) => makeAddressBookEntry({ address, name: ownersNames[index] }))\r\n    const safe = makeAddressBookEntry({ address: safeAddress, name })\r\n    await dispatch(addressBookSafeLoad([...owners, safe]))\r\n\r\n    const safeProps = await buildSafe(safeAddress)\r\n    await dispatch(addOrUpdateSafe(safeProps))\r\n\r\n    trackEvent({\r\n      category: 'User',\r\n      action: 'Created a safe',\r\n    })\r\n\r\n    // a default 5s wait before starting to request safe information\r\n    await sleep(5000)\r\n\r\n    await backOff(() => getSafeInfo(safeAddress), {\r\n      startingDelay: 750,\r\n      retry: (e) => {\r\n        console.info('waiting for client-gateway to provide safe information', e)\r\n        return true\r\n      },\r\n    })\r\n\r\n    await removeFromStorage(SAFE_PENDING_CREATION_STORAGE_KEY)\r\n    const url = {\r\n      pathname: `${SAFELIST_ADDRESS}/${safeProps.address}/balances`,\r\n      state: {\r\n        name,\r\n        tx: pendingCreation?.txHash,\r\n      },\r\n    }\r\n\r\n    history.push(url)\r\n  }\r\n\r\n  const onCancel = () => {\r\n    removeFromStorage(SAFE_PENDING_CREATION_STORAGE_KEY)\r\n    history.push({\r\n      pathname: `${WELCOME_ADDRESS}`,\r\n    })\r\n  }\r\n\r\n  const onRetry = async () => {\r\n    const values = await loadFromStorage<{ txHash?: string }>(SAFE_PENDING_CREATION_STORAGE_KEY)\r\n    delete values?.txHash\r\n    await saveToStorage(SAFE_PENDING_CREATION_STORAGE_KEY, values)\r\n    setSafeCreationPendingInfo(values)\r\n    createSafeProxy()\r\n  }\r\n\r\n  if (loading || showProgress === undefined) {\r\n    return <Loader size=\"md\" />\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      {showProgress ? (\r\n        <SafeDeployment\r\n          creationTxHash={safeCreationPendingInfo?.txHash}\r\n          onCancel={onCancel}\r\n          onRetry={onRetry}\r\n          onSuccess={onSafeCreated}\r\n          submittedPromise={creationTxPromise}\r\n        />\r\n      ) : (\r\n        <Layout onCallSafeContractSubmit={createSafeProxy} safeProps={safePropsFromUrl} />\r\n      )}\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Open\r\n"],"sourceRoot":""}